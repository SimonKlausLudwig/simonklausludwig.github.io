{"version":3,"sources":["webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/core-js/modules/es6.date.to-json.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","__webpack_require__","Object","defineProperty","value","_extends","assign","target","source","prototype","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","_react","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","instance","TypeError","_classCallCheck","this","state","isOpen","Error","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_inherits","Component","_this","options","noStateChange","newState","applyWrapperStyles","setState","onStateChange","disableAutoFocus","firstItem","document","querySelector","focus","activeElement","blur","body","timeoutId","clearTimeout","setTimeout","set","applyClass","el","className","classList","htmlClassName","bodyClassName","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","wrapper","getElementById","builtStyles","getStyle","prop","style","applyOverflow","console","error","index","inline","propName","replace","charAt","toUpperCase","output","noTransition","transition","width","formattedWidth","right","e","window","event","disableCloseOnEsc","keyCode","toggleMenu","disableOverlayClick","customOnKeyDown","onkeydown","listenForClose","bind","prevProps","morphShape","path","_this2","svg","findDOMNode","lib","select","animate","attr","pathInitial","_this3","createElement","noOverlay","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","map","children","item","extraProps","itemClassName","filter","tabIndex","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","propTypes","string","oneOfType","element","oneOf","func","bool","isRequired","number","defaultProps","slide","stack","elastic","bubble","pushRotate","scaleDown","scaleRotate","fallDown","reveal","Snap","_menuFactory","_menuFactory2","overlay","position","zIndex","background","opacity","MozTransform","MsTransform","OTransform","WebkitTransform","transform","menuWrap","menu","boxSizing","overflow","itemList","display","_x","_x2","BurgerIcon","hover","left","top","bmBurgerBarsHover","icon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","margin","padding","border","fontSize","cursor","CrossIcon","type","bmCross","getCrossStyle","bmCrossButton","nthChild","_snapsvgImporter2","pathOpen","mina","easeinout","whiteSpace","eve","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","a","toString","idgen","idprefix","timer","now","sta","val","s","ds","b","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","j","jj","end","easing","timeStamp","len","A","anim","linear","status","stop","time","getById","n","easeout","Math","pow","easein","q","Q","sqrt","x","y","t","abs","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","glob","doc","String","Paper","version","_","win","tokenRegex","objNotationRegex","has","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","url","$","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","slice","cacher","f","scope","postprocessor","newf","args","cache","count","array","ii","splice","repush","shift","rad","deg","format","str","all","name","quote","quotedName","isFunc","replacer","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","node","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","indexOf","r","g","hex","rgbtoString","_toHex","red","green","blue","rgb","match","split","hsb2rgb","hsl2rgb","hsb","hsl","l","toFixed","color","getElementsByTagName","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","concat","parseTransformString","TString","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","_unit2px","getSomeSVG","mgr","class","fill","appendChild","getW","getBBox","getH","nam","removeChild","contains","compareDocumentPosition","ownerSVGElement","add2group","list","forEach","childNodes","snap","paper","tagName","nodeName","anims","mask","pattern","symbol","method","Fragment","frag","make","defs","proto","ownerDocument","dom","contentDocument","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","firstDefined","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","test","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","fixids","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuned","tuner","chunk","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","cssText","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","equaliseTransform","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","keys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","cof","inheritIfRequired","toPrimitive","fails","gOPN","gOPD","dP","$trim","$Number","Base","BROKEN_COF","TRIM","toNumber","argument","third","radix","maxCode","charCodeAt","NaN","code","digits","that","valueOf","$export","defined","spaces","space","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","P","F","TYPE","toObject","toISOString","pv","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","sort","_events","nes","es","sep","exist","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","transformOrigin","transformStyle","perspective","perspectiveOrigin","burgerIcon"],"mappings":"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","file":"2-43b647762618b3d7ab1d.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x3, _x4, _x5) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x3,\n        property = _x4,\n        receiver = _x5;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x3 = parent;\n        _x4 = property;\n        _x5 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n\n      this.state = {\n        isOpen: false\n      };\n\n      if (!styles) {\n        throw new Error('No styles supplied');\n      }\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n        this.applyWrapperStyles();\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          if (!_this.props.disableAutoFocus) {\n            // For accessibility reasons, ensures that when we toggle open,\n            // we focus the first menu item if one exists.\n            if (newState.isOpen) {\n              var firstItem = document.querySelector('.bm-item');\n\n              if (firstItem) {\n                firstItem.focus();\n              }\n            } else {\n              if (document.activeElement) {\n                document.activeElement.blur();\n              } else {\n                document.body.blur(); // Needed for IE\n              }\n            }\n          } // Timeout ensures wrappers are cleared after animation finishes.\n\n\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      } // Applies component-specific styles to external wrapper elements.\n\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        var applyClass = function applyClass(el, className) {\n          return el.classList[set ? 'add' : 'remove'](className);\n        };\n\n        if (this.props.htmlClassName) {\n          applyClass(document.querySelector('html'), this.props.htmlClassName);\n        }\n\n        if (this.props.bodyClassName) {\n          applyClass(document.querySelector('body'), this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      } // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        } // Prevent any horizontal scroll.\n        // Only set overflow-x as an inline style if htmlClassName or\n        // bodyClassName is not passed in. Otherwise, it is up to the caller to\n        // decide if they want to set the overflow style in CSS using the custom\n        // class names.\n\n\n        var applyOverflow = function applyOverflow(el) {\n          return el.style['overflow-x'] = set ? 'hidden' : '';\n        };\n\n        if (!this.props.htmlClassName) {\n          applyOverflow(document.querySelector('html'));\n        }\n\n        if (!this.props.bodyClassName) {\n          applyOverflow(document.querySelector('body'));\n        }\n      } // Builds styles incrementally for a given element.\n\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase()); // Set base styles.\n\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {}; // Add animation-specific styles.\n\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        } // Add custom styles.\n\n\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        } // Add element inline styles.\n\n\n        if (inline) {\n          output = _extends({}, output, inline);\n        } // Remove transition if required\n        // (useful if rendering open initially).\n\n\n        if (this.props.noTransition) {\n          delete output.transition;\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event; // Close on ESC, unless disabled\n\n        if (!this.props.disableCloseOnEsc && this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else {\n          window.onkeydown = this.listenForClose.bind(this);\n        } // Allow initial open state to be set by props.\n\n\n        if (this.props.isOpen) {\n          this.toggleMenu({\n            isOpen: true,\n            noStateChange: true\n          });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate(prevProps) {\n        var _this2 = this;\n\n        var wasToggled = typeof this.props.isOpen !== 'undefined' && this.props.isOpen !== this.state.isOpen && this.props.isOpen !== prevProps.isOpen;\n\n        if (wasToggled) {\n          this.toggleMenu(); // Toggling changes SVG animation requirements, so we defer these until the next componentDidUpdate\n\n          return;\n        }\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement('div', null, !this.props.noOverlay && _react2['default'].createElement('div', {\n          className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n          onClick: function onClick() {\n            return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n          },\n          style: this.getStyles('overlay')\n        }), _react2['default'].createElement('div', {\n          id: this.props.id,\n          className: ('bm-menu-wrap ' + this.props.className).trim(),\n          style: this.getStyles('menuWrap')\n        }, styles.svg && _react2['default'].createElement('div', {\n          className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n          style: this.getStyles('morphShape')\n        }, _react2['default'].createElement('svg', {\n          width: '100%',\n          height: '100%',\n          viewBox: '0 0 100 800',\n          preserveAspectRatio: 'none'\n        }, _react2['default'].createElement('path', {\n          d: styles.svg.pathInitial\n        }))), _react2['default'].createElement('div', {\n          className: ('bm-menu ' + this.props.menuClassName).trim(),\n          style: this.getStyles('menu')\n        }, _react2['default'].createElement('nav', {\n          className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n          style: this.getStyles('itemList')\n        }, _react2['default'].Children.map(this.props.children, function (item, index) {\n          if (item) {\n            var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n              return !!className;\n            }).join(' ');\n            var extraProps = {\n              key: index,\n              className: classList,\n              style: _this3.getStyles('item', index, item.props.style),\n              tabIndex: _this3.state.isOpen ? 0 : -1\n            };\n            return _react2['default'].cloneElement(item, extraProps);\n          }\n        }))), this.props.customCrossIcon !== false && _react2['default'].createElement('div', {\n          style: this.getStyles('closeButton')\n        }, _react2['default'].createElement(_CrossIcon2['default'], {\n          onClick: function onClick() {\n            return _this3.toggleMenu();\n          },\n          styles: this.props.styles,\n          customIcon: this.props.customCrossIcon,\n          className: this.props.crossButtonClassName,\n          crossClassName: this.props.crossClassName,\n          tabIndex: this.state.isOpen ? 0 : -1\n        }))), this.props.customBurgerIcon !== false && _react2['default'].createElement('div', {\n          style: this.getStyles('burgerIcon')\n        }, _react2['default'].createElement(_BurgerIcon2['default'], {\n          onClick: function onClick() {\n            return _this3.toggleMenu();\n          },\n          styles: this.props.styles,\n          customIcon: this.props.customBurgerIcon,\n          className: this.props.burgerButtonClassName,\n          barClassName: this.props.burgerBarClassName\n        })));\n      }\n    }]);\n\n    return Menu;\n  }(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    className: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableAutoFocus: _propTypes2['default'].bool,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    htmlClassName: _propTypes2['default'].string,\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    noTransition: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableAutoFocus: false,\n    disableCloseOnEsc: false,\n    htmlClassName: '',\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    noTransition: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n  return Menu;\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n  item: function item() {\n    return {\n      display: 'block'\n    };\n  }\n};\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return _extends({\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      }, this.state.hover && this.props.styles.bmBurgerBarsHover);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-icon ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({\n            width: '100%',\n            height: '100%'\n          }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement('span', null, [0, 1, 2].map(function (bar) {\n          return _react2['default'].createElement('span', {\n            key: bar,\n            className: ('bm-burger-bars ' + _this.props.barClassName + ' ' + (_this.state.hover ? 'bm-burger-bars-hover' : '')).trim(),\n            style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n          });\n        }));\n      }\n\n      return _react2['default'].createElement('div', {\n        className: ('bm-burger-button ' + this.props.className).trim(),\n        style: _extends({\n          zIndex: 1000\n        }, this.props.styles.bmBurgerButton)\n      }, icon, _react2['default'].createElement('button', {\n        onClick: this.props.onClick,\n        onMouseOver: function onMouseOver() {\n          return _this.setState({\n            hover: true\n          });\n        },\n        onMouseOut: function onMouseOut() {\n          return _this.setState({\n            hover: false\n          });\n        },\n        style: buttonStyle\n      }, 'Open Menu'));\n    }\n  }]);\n\n  return BurgerIcon;\n}(_react.Component);\n\nexports['default'] = BurgerIcon;\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.object.assign\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n\n  _function: while (_again) {\n    var object = _x,\n        property = _x2,\n        receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  }\n};\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-cross ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({\n            width: '100%',\n            height: '100%'\n          }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement('span', {\n          style: {\n            position: 'absolute',\n            top: '6px',\n            right: '14px'\n          }\n        }, ['before', 'after'].map(function (type, i) {\n          return _react2['default'].createElement('span', {\n            key: i,\n            className: ('bm-cross ' + _this.props.crossClassName).trim(),\n            style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n          });\n        }));\n      }\n\n      return _react2['default'].createElement('div', {\n        className: ('bm-cross-button ' + this.props.className).trim(),\n        style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n      }, icon, _react2['default'].createElement('button', {\n        onClick: this.props.onClick,\n        style: buttonStyle,\n        tabIndex: this.props.tabIndex\n      }, 'Close Menu'));\n    }\n  }]);\n\n  return CrossIcon;\n}(_react.Component);\n\nexports['default'] = CrossIcon;\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object,\n  tabIndex: _propTypes2['default'].number\n};\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {},\n  tabIndex: 0\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({\n        path: this.pathOpen\n      }, 400, window.mina.easeinout);\n    }\n  },\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","require(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nwindow.eve = require('eve'); // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar mina = function (eve) {\n  var animations = {},\n      requestAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n    setTimeout(callback, 16, new Date().getTime());\n    return true;\n  },\n      requestID,\n      isArray = Array.isArray || function (a) {\n    return a instanceof Array || Object.prototype.toString.call(a) == \"[object Array]\";\n  },\n      idgen = 0,\n      idprefix = \"M\" + (+new Date()).toString(36),\n      ID = function ID() {\n    return idprefix + (idgen++).toString(36);\n  },\n      diff = function diff(a, b, A, B) {\n    if (isArray(a)) {\n      res = [];\n\n      for (var i = 0, ii = a.length; i < ii; i++) {\n        res[i] = diff(a[i], b, A[i], B);\n      }\n\n      return res;\n    }\n\n    var dif = (A - a) / (B - b);\n    return function (bb) {\n      return a + dif * (bb - b);\n    };\n  },\n      timer = Date.now || function () {\n    return +new Date();\n  },\n      sta = function sta(val) {\n    var a = this;\n\n    if (val == null) {\n      return a.s;\n    }\n\n    var ds = a.s - val;\n    a.b += a.dur * ds;\n    a.B += a.dur * ds;\n    a.s = val;\n  },\n      speed = function speed(val) {\n    var a = this;\n\n    if (val == null) {\n      return a.spd;\n    }\n\n    a.spd = val;\n  },\n      duration = function duration(val) {\n    var a = this;\n\n    if (val == null) {\n      return a.dur;\n    }\n\n    a.s = a.s * val / a.dur;\n    a.dur = val;\n  },\n      stopit = function stopit() {\n    var a = this;\n    delete animations[a.id];\n    a.update();\n    eve(\"mina.stop.\" + a.id, a);\n  },\n      pause = function pause() {\n    var a = this;\n\n    if (a.pdif) {\n      return;\n    }\n\n    delete animations[a.id];\n    a.update();\n    a.pdif = a.get() - a.b;\n  },\n      resume = function resume() {\n    var a = this;\n\n    if (!a.pdif) {\n      return;\n    }\n\n    a.b = a.get() - a.pdif;\n    delete a.pdif;\n    animations[a.id] = a;\n    frame();\n  },\n      update = function update() {\n    var a = this,\n        res;\n\n    if (isArray(a.start)) {\n      res = [];\n\n      for (var j = 0, jj = a.start.length; j < jj; j++) {\n        res[j] = +a.start[j] + (a.end[j] - a.start[j]) * a.easing(a.s);\n      }\n    } else {\n      res = +a.start + (a.end - a.start) * a.easing(a.s);\n    }\n\n    a.set(res);\n  },\n      frame = function frame(timeStamp) {\n    // Manual invokation?\n    if (!timeStamp) {\n      // Frame loop stopped?\n      if (!requestID) {\n        // Start frame loop...\n        requestID = requestAnimFrame(frame);\n      }\n\n      return;\n    }\n\n    var len = 0;\n\n    for (var i in animations) {\n      if (animations.hasOwnProperty(i)) {\n        var a = animations[i],\n            b = a.get(),\n            res;\n        len++;\n        a.s = (b - a.b) / (a.dur / a.spd);\n\n        if (a.s >= 1) {\n          delete animations[i];\n          a.s = 1;\n          len--;\n\n          (function (a) {\n            setTimeout(function () {\n              eve(\"mina.finish.\" + a.id, a);\n            });\n          })(a);\n        }\n\n        a.update();\n      }\n    }\n\n    requestID = len ? requestAnimFrame(frame) : false;\n  },\n\n  /*\\\n   * mina\n   [ method ]\n   **\n   * Generic animation of numbers\n   **\n   - a (number) start _slave_ number\n   - A (number) end _slave_ number\n   - b (number) start _master_ number (start time in general case)\n   - B (number) end _master_ number (end time in general case)\n   - get (function) getter of _master_ number (see @mina.time)\n   - set (function) setter of _slave_ number\n   - easing (function) #optional easing function, default is @mina.linear\n   = (object) animation descriptor\n   o {\n   o         id (string) animation id,\n   o         start (number) start _slave_ number,\n   o         end (number) end _slave_ number,\n   o         b (number) start _master_ number,\n   o         s (number) animation status (0..1),\n   o         dur (number) animation duration,\n   o         spd (number) animation speed,\n   o         get (function) getter of _master_ number (see @mina.time),\n   o         set (function) setter of _slave_ number,\n   o         easing (function) easing function, default is @mina.linear,\n   o         status (function) status getter/setter,\n   o         speed (function) speed getter/setter,\n   o         duration (function) duration getter/setter,\n   o         stop (function) animation stopper\n   o         pause (function) pauses the animation\n   o         resume (function) resumes the animation\n   o         update (function) calles setter with the right value of the animation\n   o }\n  \\*/\n  mina = function mina(a, A, b, B, get, set, easing) {\n    var anim = {\n      id: ID(),\n      start: a,\n      end: A,\n      b: b,\n      s: 0,\n      dur: B - b,\n      spd: 1,\n      get: get,\n      set: set,\n      easing: easing || mina.linear,\n      status: sta,\n      speed: speed,\n      duration: duration,\n      stop: stopit,\n      pause: pause,\n      resume: resume,\n      update: update\n    };\n    animations[anim.id] = anim;\n    var len = 0,\n        i;\n\n    for (i in animations) {\n      if (animations.hasOwnProperty(i)) {\n        len++;\n\n        if (len == 2) {\n          break;\n        }\n      }\n    }\n\n    len == 1 && frame();\n    return anim;\n  };\n  /*\\\n   * mina.time\n   [ method ]\n   **\n   * Returns the current time. Equivalent to:\n   | function () {\n   |     return (new Date).getTime();\n   | }\n  \\*/\n\n\n  mina.time = timer;\n  /*\\\n   * mina.getById\n   [ method ]\n   **\n   * Returns an animation by its id\n   - id (string) animation's id\n   = (object) See @mina\n  \\*/\n\n  mina.getById = function (id) {\n    return animations[id] || null;\n  };\n  /*\\\n   * mina.linear\n   [ method ]\n   **\n   * Default linear easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.linear = function (n) {\n    return n;\n  };\n  /*\\\n   * mina.easeout\n   [ method ]\n   **\n   * Easeout easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.easeout = function (n) {\n    return Math.pow(n, 1.7);\n  };\n  /*\\\n   * mina.easein\n   [ method ]\n   **\n   * Easein easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.easein = function (n) {\n    return Math.pow(n, .48);\n  };\n  /*\\\n   * mina.easeinout\n   [ method ]\n   **\n   * Easeinout easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.easeinout = function (n) {\n    if (n == 1) {\n      return 1;\n    }\n\n    if (n == 0) {\n      return 0;\n    }\n\n    var q = .48 - n / 1.04,\n        Q = Math.sqrt(.1734 + q * q),\n        x = Q - q,\n        X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n        y = -Q - q,\n        Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n        t = X + Y + .5;\n    return (1 - t) * 3 * t * t + t * t * t;\n  };\n  /*\\\n   * mina.backin\n   [ method ]\n   **\n   * Backin easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.backin = function (n) {\n    if (n == 1) {\n      return 1;\n    }\n\n    var s = 1.70158;\n    return n * n * ((s + 1) * n - s);\n  };\n  /*\\\n   * mina.backout\n   [ method ]\n   **\n   * Backout easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.backout = function (n) {\n    if (n == 0) {\n      return 0;\n    }\n\n    n = n - 1;\n    var s = 1.70158;\n    return n * n * ((s + 1) * n + s) + 1;\n  };\n  /*\\\n   * mina.elastic\n   [ method ]\n   **\n   * Elastic easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.elastic = function (n) {\n    if (n == !!n) {\n      return n;\n    }\n\n    return Math.pow(2, -10 * n) * Math.sin((n - .075) * (2 * Math.PI) / .3) + 1;\n  };\n  /*\\\n   * mina.bounce\n   [ method ]\n   **\n   * Bounce easing\n   - n (number) input 0..1\n   = (number) output 0..1\n  \\*/\n\n\n  mina.bounce = function (n) {\n    var s = 7.5625,\n        p = 2.75,\n        l;\n\n    if (n < 1 / p) {\n      l = s * n * n;\n    } else {\n      if (n < 2 / p) {\n        n -= 1.5 / p;\n        l = s * n * n + .75;\n      } else {\n        if (n < 2.5 / p) {\n          n -= 2.25 / p;\n          l = s * n * n + .9375;\n        } else {\n          n -= 2.625 / p;\n          l = s * n * n + .984375;\n        }\n      }\n    }\n\n    return l;\n  };\n\n  window.mina = mina;\n  return mina;\n}(typeof eve == \"undefined\" ? function () {} : eve); // Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nvar Snap = function (root) {\n  Snap.version = \"0.5.1\";\n  /*\\\n   * Snap\n   [ method ]\n   **\n   * Creates a drawing surface or wraps existing SVG element.\n   **\n   - width (number|string) width of surface\n   - height (number|string) height of surface\n   * or\n   - DOM (SVGElement) element to be wrapped into Snap structure\n   * or\n   - array (array) array of elements (will return set of elements)\n   * or\n   - query (string) CSS query selector\n   = (object) @Element\n  \\*/\n\n  function Snap(w, h) {\n    if (w) {\n      if (w.nodeType) {\n        return wrap(w);\n      }\n\n      if (is(w, \"array\") && Snap.set) {\n        return Snap.set.apply(Snap, w);\n      }\n\n      if (w instanceof Element) {\n        return w;\n      }\n\n      if (h == null) {\n        try {\n          w = glob.doc.querySelector(String(w));\n          return wrap(w);\n        } catch (e) {\n          return null;\n        }\n      }\n    }\n\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n  }\n\n  Snap.toString = function () {\n    return \"Snap v\" + this.version;\n  };\n\n  Snap._ = {};\n  var glob = {\n    win: root.window,\n    doc: root.window.document\n  };\n  Snap._.glob = glob;\n\n  var has = \"hasOwnProperty\",\n      Str = String,\n      toFloat = parseFloat,\n      toInt = parseInt,\n      math = Math,\n      mmax = math.max,\n      mmin = math.min,\n      abs = math.abs,\n      pow = math.pow,\n      PI = math.PI,\n      round = math.round,\n      E = \"\",\n      S = \" \",\n      objectToString = Object.prototype.toString,\n      ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n      colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n      bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n      separator = Snap._.separator = /[,\\s]+/,\n      whitespace = /[\\s]/g,\n      commaSpaces = /[\\s]*,[\\s]*/,\n      hsrg = {\n    hs: 1,\n    rg: 1\n  },\n      pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n      tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n      pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n      idgen = 0,\n      idprefix = \"S\" + (+new Date()).toString(36),\n      ID = function ID(el) {\n    return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n  },\n      xlink = \"http://www.w3.org/1999/xlink\",\n      xmlns = \"http://www.w3.org/2000/svg\",\n      hub = {},\n\n  /*\\\n   * Snap.url\n   [ method ]\n   **\n   * Wraps path into `\"url('<path>')\"`.\n   - value (string) path\n   = (string) wrapped path\n  \\*/\n  URL = Snap.url = function (url) {\n    return \"url('#\" + url + \"')\";\n  };\n\n  function $(el, attr) {\n    if (attr) {\n      if (el == \"#text\") {\n        el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n      }\n\n      if (el == \"#comment\") {\n        el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n      }\n\n      if (typeof el == \"string\") {\n        el = $(el);\n      }\n\n      if (typeof attr == \"string\") {\n        if (el.nodeType == 1) {\n          if (attr.substring(0, 6) == \"xlink:\") {\n            return el.getAttributeNS(xlink, attr.substring(6));\n          }\n\n          if (attr.substring(0, 4) == \"xml:\") {\n            return el.getAttributeNS(xmlns, attr.substring(4));\n          }\n\n          return el.getAttribute(attr);\n        } else if (attr == \"text\") {\n          return el.nodeValue;\n        } else {\n          return null;\n        }\n      }\n\n      if (el.nodeType == 1) {\n        for (var key in attr) {\n          if (attr[has](key)) {\n            var val = Str(attr[key]);\n\n            if (val) {\n              if (key.substring(0, 6) == \"xlink:\") {\n                el.setAttributeNS(xlink, key.substring(6), val);\n              } else if (key.substring(0, 4) == \"xml:\") {\n                el.setAttributeNS(xmlns, key.substring(4), val);\n              } else {\n                el.setAttribute(key, val);\n              }\n            } else {\n              el.removeAttribute(key);\n            }\n          }\n        }\n      } else if (\"text\" in attr) {\n        el.nodeValue = attr.text;\n      }\n    } else {\n      el = glob.doc.createElementNS(xmlns, el);\n    }\n\n    return el;\n  }\n\n  Snap._.$ = $;\n  Snap._.id = ID;\n\n  function getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n\n    for (var i = 0; i < attrs.length; i++) {\n      if (attrs[i].namespaceURI == xlink) {\n        name = \"xlink:\";\n      } else {\n        name = \"\";\n      }\n\n      name += attrs[i].name;\n      out[name] = attrs[i].textContent;\n    }\n\n    return out;\n  }\n\n  function is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n\n    if (type == \"finite\") {\n      return isFinite(o);\n    }\n\n    if (type == \"array\" && (o instanceof Array || Array.isArray && Array.isArray(o))) {\n      return true;\n    }\n\n    return type == \"null\" && o === null || type == typeof o && o !== null || type == \"object\" && o === Object(o) || objectToString.call(o).slice(8, -1).toLowerCase() == type;\n  }\n  /*\\\n   * Snap.format\n   [ method ]\n   **\n   * Replaces construction of type `{<name>}` to the corresponding argument\n   **\n   - token (string) string to format\n   - json (object) object which properties are used as a replacement\n   = (string) formatted string\n   > Usage\n   | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n   | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n   |     x: 10,\n   |     y: 20,\n   |     dim: {\n   |         width: 40,\n   |         height: 50,\n   |         \"negative width\": -40\n   |     }\n   | }));\n  \\*/\n\n\n  Snap.format = function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,\n        // matches .xxxxx or [\"xxxxx\"] to run over object properties\n    replacer = function replacer(all, key, obj) {\n      var res = obj;\n      key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n        name = name || quotedName;\n\n        if (res) {\n          if (name in res) {\n            res = res[name];\n          }\n\n          typeof res == \"function\" && isFunc && (res = res());\n        }\n      });\n      res = (res == null || res == obj ? all : res) + \"\";\n      return res;\n    };\n\n    return function (str, obj) {\n      return Str(str).replace(tokenRegex, function (all, key) {\n        return replacer(all, key, obj);\n      });\n    };\n  }();\n\n  function clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n      return obj;\n    }\n\n    var res = new obj.constructor();\n\n    for (var key in obj) {\n      if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n      }\n    }\n\n    return res;\n  }\n\n  Snap._.clone = clone;\n\n  function repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) {\n      if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n      }\n    }\n  }\n\n  function cacher(f, scope, postprocessor) {\n    function newf() {\n      var arg = Array.prototype.slice.call(arguments, 0),\n          args = arg.join(\"\\u2400\"),\n          cache = newf.cache = newf.cache || {},\n          count = newf.count = newf.count || [];\n\n      if (cache[has](args)) {\n        repush(count, args);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n      }\n\n      count.length >= 1e3 && delete cache[count.shift()];\n      count.push(args);\n      cache[args] = f.apply(scope, arg);\n      return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n\n    return newf;\n  }\n\n  Snap._.cacher = cacher;\n\n  function angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n      var x = x1 - x2,\n          y = y1 - y2;\n\n      if (!x && !y) {\n        return 0;\n      }\n\n      return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n      return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n  }\n\n  function rad(deg) {\n    return deg % 360 * PI / 180;\n  }\n\n  function deg(rad) {\n    return rad * 180 / PI % 360;\n  }\n\n  function x_y() {\n    return this.x + S + this.y;\n  }\n\n  function x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n  }\n  /*\\\n   * Snap.rad\n   [ method ]\n   **\n   * Transform angle to radians\n   - deg (number) angle in degrees\n   = (number) angle in radians\n  \\*/\n\n\n  Snap.rad = rad;\n  /*\\\n   * Snap.deg\n   [ method ]\n   **\n   * Transform angle to degrees\n   - rad (number) angle in radians\n   = (number) angle in degrees\n  \\*/\n\n  Snap.deg = deg;\n  /*\\\n   * Snap.sin\n   [ method ]\n   **\n   * Equivalent to `Math.sin()` only works with degrees, not radians.\n   - angle (number) angle in degrees\n   = (number) sin\n  \\*/\n\n  Snap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n  };\n  /*\\\n   * Snap.tan\n   [ method ]\n   **\n   * Equivalent to `Math.tan()` only works with degrees, not radians.\n   - angle (number) angle in degrees\n   = (number) tan\n  \\*/\n\n\n  Snap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n  };\n  /*\\\n   * Snap.cos\n   [ method ]\n   **\n   * Equivalent to `Math.cos()` only works with degrees, not radians.\n   - angle (number) angle in degrees\n   = (number) cos\n  \\*/\n\n\n  Snap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n  };\n  /*\\\n   * Snap.asin\n   [ method ]\n   **\n   * Equivalent to `Math.asin()` only works with degrees, not radians.\n   - num (number) value\n   = (number) asin in degrees\n  \\*/\n\n\n  Snap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n  };\n  /*\\\n   * Snap.acos\n   [ method ]\n   **\n   * Equivalent to `Math.acos()` only works with degrees, not radians.\n   - num (number) value\n   = (number) acos in degrees\n  \\*/\n\n\n  Snap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n  };\n  /*\\\n   * Snap.atan\n   [ method ]\n   **\n   * Equivalent to `Math.atan()` only works with degrees, not radians.\n   - num (number) value\n   = (number) atan in degrees\n  \\*/\n\n\n  Snap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n  };\n  /*\\\n   * Snap.atan2\n   [ method ]\n   **\n   * Equivalent to `Math.atan2()` only works with degrees, not radians.\n   - num (number) value\n   = (number) atan2 in degrees\n  \\*/\n\n\n  Snap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n  };\n  /*\\\n   * Snap.angle\n   [ method ]\n   **\n   * Returns an angle between two or three points\n   - x1 (number) x coord of first point\n   - y1 (number) y coord of first point\n   - x2 (number) x coord of second point\n   - y2 (number) y coord of second point\n   - x3 (number) #optional x coord of third point\n   - y3 (number) #optional y coord of third point\n   = (number) angle in degrees\n  \\*/\n\n\n  Snap.angle = angle;\n  /*\\\n   * Snap.len\n   [ method ]\n   **\n   * Returns distance between two points\n   - x1 (number) x coord of first point\n   - y1 (number) y coord of first point\n   - x2 (number) x coord of second point\n   - y2 (number) y coord of second point\n   = (number) distance\n  \\*/\n\n  Snap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n  };\n  /*\\\n   * Snap.len2\n   [ method ]\n   **\n   * Returns squared distance between two points\n   - x1 (number) x coord of first point\n   - y1 (number) y coord of first point\n   - x2 (number) x coord of second point\n   - y2 (number) y coord of second point\n   = (number) distance\n  \\*/\n\n\n  Snap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n  };\n  /*\\\n   * Snap.closestPoint\n   [ method ]\n   **\n   * Returns closest point to a given one on a given path.\n   - path (Element) path element\n   - x (number) x coord of a point\n   - y (number) y coord of a point\n   = (object) in format\n   {\n      x (number) x coord of the point on the path\n      y (number) y coord of the point on the path\n      length (number) length of the path to the point\n      distance (number) distance from the given point to the path\n   }\n  \\*/\n  // Copied from http://bl.ocks.org/mbostock/8027637\n\n\n  Snap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n      var dx = p.x - x,\n          dy = p.y - y;\n      return dx * dx + dy * dy;\n    }\n\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity; // linear scan for coarse approximation\n\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n      if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n        best = scan;\n        bestLength = scanLength;\n        bestDistance = scanDistance;\n      }\n    } // binary search for precise estimate\n\n\n    precision *= .5;\n\n    while (precision > .5) {\n      var before, after, beforeLength, afterLength, beforeDistance, afterDistance;\n\n      if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n        best = before;\n        bestLength = beforeLength;\n        bestDistance = beforeDistance;\n      } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n        best = after;\n        bestLength = afterLength;\n        bestDistance = afterDistance;\n      } else {\n        precision *= .5;\n      }\n    }\n\n    best = {\n      x: best.x,\n      y: best.y,\n      length: bestLength,\n      distance: Math.sqrt(bestDistance)\n    };\n    return best;\n  };\n  /*\\\n   * Snap.is\n   [ method ]\n   **\n   * Handy replacement for the `typeof` operator\n   - o (…) any object or primitive\n   - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n   = (boolean) `true` if given value is of given type\n  \\*/\n\n\n  Snap.is = is;\n  /*\\\n   * Snap.snapTo\n   [ method ]\n   **\n   * Snaps given value to given grid\n   - values (array|number) given array of values or step of the grid\n   - value (number) value to adjust\n   - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n   = (number) adjusted value\n  \\*/\n\n  Snap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n\n    if (is(values, \"array\")) {\n      var i = values.length;\n\n      while (i--) {\n        if (abs(values[i] - value) <= tolerance) {\n          return values[i];\n        }\n      }\n    } else {\n      values = +values;\n      var rem = value % values;\n\n      if (rem < tolerance) {\n        return value - rem;\n      }\n\n      if (rem > values - tolerance) {\n        return value - rem + values;\n      }\n    }\n\n    return value;\n  }; // Colour\n\n  /*\\\n   * Snap.getRGB\n   [ method ]\n   **\n   * Parses color string as RGB object\n   - color (string) color string in one of the following formats:\n   # <ul>\n   #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n   #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n   #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n   #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n   #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n   #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n   #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n   #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n   #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n   #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n   #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n   #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n   #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n   #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n   #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n   # </ul>\n   * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n   = (object) RGB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••,\n   o     error (boolean) true if string can't be parsed\n   o }\n  \\*/\n\n\n  Snap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        error: 1,\n        toString: rgbtoString\n      };\n    }\n\n    if (colour == \"none\") {\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        toString: rgbtoString\n      };\n    }\n\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = _toHex(colour));\n\n    if (!colour) {\n      return {\n        r: -1,\n        g: -1,\n        b: -1,\n        hex: \"none\",\n        error: 1,\n        toString: rgbtoString\n      };\n    }\n\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n\n    if (rgb) {\n      if (rgb[2]) {\n        blue = toInt(rgb[2].substring(5), 16);\n        green = toInt(rgb[2].substring(3, 5), 16);\n        red = toInt(rgb[2].substring(1, 3), 16);\n      }\n\n      if (rgb[3]) {\n        blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n        green = toInt((t = rgb[3].charAt(2)) + t, 16);\n        red = toInt((t = rgb[3].charAt(1)) + t, 16);\n      }\n\n      if (rgb[4]) {\n        values = rgb[4].split(commaSpaces);\n        red = toFloat(values[0]);\n        values[0].slice(-1) == \"%\" && (red *= 2.55);\n        green = toFloat(values[1]);\n        values[1].slice(-1) == \"%\" && (green *= 2.55);\n        blue = toFloat(values[2]);\n        values[2].slice(-1) == \"%\" && (blue *= 2.55);\n        rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n        values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n      }\n\n      if (rgb[5]) {\n        values = rgb[5].split(commaSpaces);\n        red = toFloat(values[0]);\n        values[0].slice(-1) == \"%\" && (red /= 100);\n        green = toFloat(values[1]);\n        values[1].slice(-1) == \"%\" && (green /= 100);\n        blue = toFloat(values[2]);\n        values[2].slice(-1) == \"%\" && (blue /= 100);\n        (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n        rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n        values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        return Snap.hsb2rgb(red, green, blue, opacity);\n      }\n\n      if (rgb[6]) {\n        values = rgb[6].split(commaSpaces);\n        red = toFloat(values[0]);\n        values[0].slice(-1) == \"%\" && (red /= 100);\n        green = toFloat(values[1]);\n        values[1].slice(-1) == \"%\" && (green /= 100);\n        blue = toFloat(values[2]);\n        values[2].slice(-1) == \"%\" && (blue /= 100);\n        (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n        rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n        values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        return Snap.hsl2rgb(red, green, blue, opacity);\n      }\n\n      red = mmin(math.round(red), 255);\n      green = mmin(math.round(green), 255);\n      blue = mmin(math.round(blue), 255);\n      opacity = mmin(mmax(opacity, 0), 1);\n      rgb = {\n        r: red,\n        g: green,\n        b: blue,\n        toString: rgbtoString\n      };\n      rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n      rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n      return rgb;\n    }\n\n    return {\n      r: -1,\n      g: -1,\n      b: -1,\n      hex: \"none\",\n      error: 1,\n      toString: rgbtoString\n    };\n  }, Snap);\n  /*\\\n   * Snap.hsb\n   [ method ]\n   **\n   * Converts HSB values to a hex representation of the color\n   - h (number) hue\n   - s (number) saturation\n   - b (number) value or brightness\n   = (string) hex representation of the color\n  \\*/\n\n  Snap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n  });\n  /*\\\n   * Snap.hsl\n   [ method ]\n   **\n   * Converts HSL values to a hex representation of the color\n   - h (number) hue\n   - s (number) saturation\n   - l (number) luminosity\n   = (string) hex representation of the color\n  \\*/\n\n  Snap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n  });\n  /*\\\n   * Snap.rgb\n   [ method ]\n   **\n   * Converts RGB values to a hex representation of the color\n   - r (number) red\n   - g (number) green\n   - b (number) blue\n   = (string) hex representation of the color\n  \\*/\n\n  Snap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n      var round = math.round;\n      return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n  });\n\n  var _toHex = function toHex(color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    _toHex = cacher(function (color) {\n      if (color.toLowerCase() == \"red\") {\n        return red;\n      }\n\n      i.style.color = red;\n      i.style.color = color;\n      var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n      return out == red ? null : out;\n    });\n    return _toHex(color);\n  },\n      hsbtoString = function hsbtoString() {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n  },\n      hsltoString = function hsltoString() {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n  },\n      rgbtoString = function rgbtoString() {\n    return this.opacity == 1 || this.opacity == null ? this.hex : \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n  },\n      prepareRGB = function prepareRGB(r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n      b = r.b;\n      g = r.g;\n      r = r.r;\n    }\n\n    if (g == null && is(r, string)) {\n      var clr = Snap.getRGB(r);\n      r = clr.r;\n      g = clr.g;\n      b = clr.b;\n    }\n\n    if (r > 1 || g > 1 || b > 1) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n    }\n\n    return [r, g, b];\n  },\n      packageRGB = function packageRGB(r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n      r: r,\n      g: g,\n      b: b,\n      opacity: is(o, \"finite\") ? o : 1,\n      hex: Snap.rgb(r, g, b),\n      toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n  };\n  /*\\\n   * Snap.color\n   [ method ]\n   **\n   * Parses the color string and returns an object featuring the color's component values\n   - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n   = (object) Combined RGB/HSB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••,\n   o     error (boolean) `true` if string can't be parsed,\n   o     h (number) hue,\n   o     s (number) saturation,\n   o     v (number) value (brightness),\n   o     l (number) lightness\n   o }\n  \\*/\n\n\n  Snap.color = function (clr) {\n    var rgb;\n\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n      rgb = Snap.hsb2rgb(clr);\n      clr.r = rgb.r;\n      clr.g = rgb.g;\n      clr.b = rgb.b;\n      clr.opacity = 1;\n      clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n      rgb = Snap.hsl2rgb(clr);\n      clr.r = rgb.r;\n      clr.g = rgb.g;\n      clr.b = rgb.b;\n      clr.opacity = 1;\n      clr.hex = rgb.hex;\n    } else {\n      if (is(clr, \"string\")) {\n        clr = Snap.getRGB(clr);\n      }\n\n      if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n        rgb = Snap.rgb2hsl(clr);\n        clr.h = rgb.h;\n        clr.s = rgb.s;\n        clr.l = rgb.l;\n        rgb = Snap.rgb2hsb(clr);\n        clr.v = rgb.b;\n      } else {\n        clr = {\n          hex: \"none\"\n        };\n        clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n        clr.error = 1;\n      }\n    }\n\n    clr.toString = rgbtoString;\n    return clr;\n  };\n  /*\\\n   * Snap.hsb2rgb\n   [ method ]\n   **\n   * Converts HSB values to an RGB object\n   - h (number) hue\n   - s (number) saturation\n   - v (number) value or brightness\n   = (object) RGB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••\n   o }\n  \\*/\n\n\n  Snap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n      v = h.b;\n      s = h.s;\n      o = h.o;\n      h = h.h;\n    }\n\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n  };\n  /*\\\n   * Snap.hsl2rgb\n   [ method ]\n   **\n   * Converts HSL values to an RGB object\n   - h (number) hue\n   - s (number) saturation\n   - l (number) luminosity\n   = (object) RGB object in the following format:\n   o {\n   o     r (number) red,\n   o     g (number) green,\n   o     b (number) blue,\n   o     hex (string) color in HTML/CSS format: #••••••\n   o }\n  \\*/\n\n\n  Snap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n      l = h.l;\n      s = h.s;\n      h = h.h;\n    }\n\n    if (h > 1 || s > 1 || l > 1) {\n      h /= 360;\n      s /= 100;\n      l /= 100;\n    }\n\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n  };\n  /*\\\n   * Snap.rgb2hsb\n   [ method ]\n   **\n   * Converts RGB values to an HSB object\n   - r (number) red\n   - g (number) green\n   - b (number) blue\n   = (object) HSB object in the following format:\n   o {\n   o     h (number) hue,\n   o     s (number) saturation,\n   o     b (number) brightness\n   o }\n  \\*/\n\n\n  Snap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null : V == r ? (g - b) / C : V == g ? (b - r) / C + 2 : (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {\n      h: H,\n      s: S,\n      b: V,\n      toString: hsbtoString\n    };\n  };\n  /*\\\n   * Snap.rgb2hsl\n   [ method ]\n   **\n   * Converts RGB values to an HSL object\n   - r (number) red\n   - g (number) green\n   - b (number) blue\n   = (object) HSL object in the following format:\n   o {\n   o     h (number) hue,\n   o     s (number) saturation,\n   o     l (number) luminosity\n   o }\n  \\*/\n\n\n  Snap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null : M == r ? (g - b) / C : M == g ? (b - r) / C + 2 : (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 : L < .5 ? C / (2 * L) : C / (2 - 2 * L);\n    return {\n      h: H,\n      s: S,\n      l: L,\n      toString: hsltoString\n    };\n  }; // Transformations\n\n  /*\\\n   * Snap.parsePathString\n   [ method ]\n   **\n   * Utility method\n   **\n   * Parses given path string into an array of arrays of path segments\n   - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n   = (array) array of segments\n  \\*/\n\n\n  Snap.parsePathString = function (pathString) {\n    if (!pathString) {\n      return null;\n    }\n\n    var pth = Snap.path(pathString);\n\n    if (pth.arr) {\n      return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {\n      a: 7,\n      c: 6,\n      o: 2,\n      h: 1,\n      l: 2,\n      m: 2,\n      r: 4,\n      q: 4,\n      s: 4,\n      t: 2,\n      v: 1,\n      u: 3,\n      z: 0\n    },\n        data = [];\n\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) {\n      // rough assumption\n      data = Snap.path.clone(pathString);\n    }\n\n    if (!data.length) {\n      Str(pathString).replace(pathCommand, function (a, b, c) {\n        var params = [],\n            name = b.toLowerCase();\n        c.replace(pathValues, function (a, b) {\n          b && params.push(+b);\n        });\n\n        if (name == \"m\" && params.length > 2) {\n          data.push([b].concat(params.splice(0, 2)));\n          name = \"l\";\n          b = b == \"m\" ? \"l\" : \"L\";\n        }\n\n        if (name == \"o\" && params.length == 1) {\n          data.push([b, params[0]]);\n        }\n\n        if (name == \"r\") {\n          data.push([b].concat(params));\n        } else while (params.length >= paramCounts[name]) {\n          data.push([b].concat(params.splice(0, paramCounts[name])));\n\n          if (!paramCounts[name]) {\n            break;\n          }\n        }\n      });\n    }\n\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n  };\n  /*\\\n   * Snap.parseTransformString\n   [ method ]\n   **\n   * Utility method\n   **\n   * Parses given transform string into an array of transformations\n   - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n   = (array) array of transformations\n  \\*/\n\n\n  var parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n      return null;\n    }\n\n    var paramCounts = {\n      r: 3,\n      s: 4,\n      t: 2,\n      m: 6\n    },\n        data = [];\n\n    if (is(TString, \"array\") && is(TString[0], \"array\")) {\n      // rough assumption\n      data = Snap.path.clone(TString);\n    }\n\n    if (!data.length) {\n      Str(TString).replace(tCommand, function (a, b, c) {\n        var params = [],\n            name = b.toLowerCase();\n        c.replace(pathValues, function (a, b) {\n          b && params.push(+b);\n        });\n        data.push([b].concat(params));\n      });\n    }\n\n    data.toString = Snap.path.toString;\n    return data;\n  };\n\n  function svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n      params = params.split(/\\s*,\\s*|\\s+/);\n\n      if (name == \"rotate\" && params.length == 1) {\n        params.push(0, 0);\n      }\n\n      if (name == \"scale\") {\n        if (params.length > 2) {\n          params = params.slice(0, 2);\n        } else if (params.length == 2) {\n          params.push(0, 0);\n        }\n\n        if (params.length == 1) {\n          params.push(params[0], 0, 0);\n        }\n      }\n\n      if (name == \"skewX\") {\n        res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n      } else if (name == \"skewY\") {\n        res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n      } else {\n        res.push([name.charAt(0)].concat(params));\n      }\n\n      return all;\n    });\n    return res;\n  }\n\n  Snap._.svgTransform2string = svgTransform2string;\n  Snap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n\n  function transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix();\n\n    if (tdata) {\n      for (var i = 0, ii = tdata.length; i < ii; i++) {\n        var t = tdata[i],\n            tlen = t.length,\n            command = Str(t[0]).toLowerCase(),\n            absolute = t[0] != command,\n            inver = absolute ? m.invert() : 0,\n            x1,\n            y1,\n            x2,\n            y2,\n            bb;\n\n        if (command == \"t\" && tlen == 2) {\n          m.translate(t[1], 0);\n        } else if (command == \"t\" && tlen == 3) {\n          if (absolute) {\n            x1 = inver.x(0, 0);\n            y1 = inver.y(0, 0);\n            x2 = inver.x(t[1], t[2]);\n            y2 = inver.y(t[1], t[2]);\n            m.translate(x2 - x1, y2 - y1);\n          } else {\n            m.translate(t[1], t[2]);\n          }\n        } else if (command == \"r\") {\n          if (tlen == 2) {\n            bb = bb || bbox;\n            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n          } else if (tlen == 4) {\n            if (absolute) {\n              x2 = inver.x(t[2], t[3]);\n              y2 = inver.y(t[2], t[3]);\n              m.rotate(t[1], x2, y2);\n            } else {\n              m.rotate(t[1], t[2], t[3]);\n            }\n          }\n        } else if (command == \"s\") {\n          if (tlen == 2 || tlen == 3) {\n            bb = bb || bbox;\n            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n          } else if (tlen == 4) {\n            if (absolute) {\n              x2 = inver.x(t[2], t[3]);\n              y2 = inver.y(t[2], t[3]);\n              m.scale(t[1], t[1], x2, y2);\n            } else {\n              m.scale(t[1], t[1], t[2], t[3]);\n            }\n          } else if (tlen == 5) {\n            if (absolute) {\n              x2 = inver.x(t[3], t[4]);\n              y2 = inver.y(t[3], t[4]);\n              m.scale(t[1], t[2], x2, y2);\n            } else {\n              m.scale(t[1], t[2], t[3], t[4]);\n            }\n          }\n        } else if (command == \"m\" && tlen == 7) {\n          m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n        }\n      }\n    }\n\n    return m;\n  }\n\n  Snap._.transform2matrix = transform2matrix;\n  Snap._unit2px = unit2px;\n  var contains = glob.doc.contains || glob.doc.compareDocumentPosition ? function (a, b) {\n    var adown = a.nodeType == 9 ? a.documentElement : a,\n        bup = b && b.parentNode;\n    return a == bup || !!(bup && bup.nodeType == 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n  } : function (a, b) {\n    if (b) {\n      while (b) {\n        b = b.parentNode;\n\n        if (b == a) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  function getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || el.node.parentNode && wrap(el.node.parentNode) || Snap.select(\"svg\") || Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs = pdefs == null ? false : pdefs.node;\n\n    if (!defs) {\n      defs = make(\"defs\", p.node).node;\n    }\n\n    return defs;\n  }\n\n  function getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n  }\n\n  Snap._.getSomeDefs = getSomeDefs;\n  Snap._.getSomeSVG = getSomeSVG;\n\n  function unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n\n    if (!mgr) {\n      mgr = $(\"rect\");\n      $(mgr, {\n        x: -9e9,\n        y: -9e9,\n        width: 10,\n        height: 10,\n        \"class\": \"svg---mgr\",\n        fill: \"none\"\n      });\n      svg.appendChild(mgr);\n    }\n\n    function getW(val) {\n      if (val == null) {\n        return E;\n      }\n\n      if (val == +val) {\n        return val;\n      }\n\n      $(mgr, {\n        width: val\n      });\n\n      try {\n        return mgr.getBBox().width;\n      } catch (e) {\n        return 0;\n      }\n    }\n\n    function getH(val) {\n      if (val == null) {\n        return E;\n      }\n\n      if (val == +val) {\n        return val;\n      }\n\n      $(mgr, {\n        height: val\n      });\n\n      try {\n        return mgr.getBBox().height;\n      } catch (e) {\n        return 0;\n      }\n    }\n\n    function set(nam, f) {\n      if (name == null) {\n        out[nam] = f(el.attr(nam) || 0);\n      } else if (nam == name) {\n        out = f(value == null ? el.attr(nam) || 0 : value);\n      }\n    }\n\n    switch (el.type) {\n      case \"rect\":\n        set(\"rx\", getW);\n        set(\"ry\", getH);\n\n      case \"image\":\n        set(\"width\", getW);\n        set(\"height\", getH);\n\n      case \"text\":\n        set(\"x\", getW);\n        set(\"y\", getH);\n        break;\n\n      case \"circle\":\n        set(\"cx\", getW);\n        set(\"cy\", getH);\n        set(\"r\", getW);\n        break;\n\n      case \"ellipse\":\n        set(\"cx\", getW);\n        set(\"cy\", getH);\n        set(\"rx\", getW);\n        set(\"ry\", getH);\n        break;\n\n      case \"line\":\n        set(\"x1\", getW);\n        set(\"x2\", getW);\n        set(\"y1\", getH);\n        set(\"y2\", getH);\n        break;\n\n      case \"marker\":\n        set(\"refX\", getW);\n        set(\"markerWidth\", getW);\n        set(\"refY\", getH);\n        set(\"markerHeight\", getH);\n        break;\n\n      case \"radialGradient\":\n        set(\"fx\", getW);\n        set(\"fy\", getH);\n        break;\n\n      case \"tspan\":\n        set(\"dx\", getW);\n        set(\"dy\", getH);\n        break;\n\n      default:\n        set(name, getW);\n    }\n\n    svg.removeChild(mgr);\n    return out;\n  }\n  /*\\\n   * Snap.select\n   [ method ]\n   **\n   * Wraps a DOM element specified by CSS selector as @Element\n   - query (string) CSS selector of the element\n   = (Element) the current element\n  \\*/\n\n\n  Snap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n  };\n  /*\\\n   * Snap.selectAll\n   [ method ]\n   **\n   * Wraps DOM elements specified by CSS selector as set or array of @Element\n   - query (string) CSS selector of the element\n   = (Element) the current element\n  \\*/\n\n\n  Snap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n\n    for (var i = 0; i < nodelist.length; i++) {\n      set.push(wrap(nodelist[i]));\n    }\n\n    return set;\n  };\n\n  function add2group(list) {\n    if (!is(list, \"array\")) {\n      list = Array.prototype.slice.call(arguments, 0);\n    }\n\n    var i = 0,\n        j = 0,\n        node = this.node;\n\n    while (this[i]) {\n      delete this[i++];\n    }\n\n    for (i = 0; i < list.length; i++) {\n      if (list[i].type == \"set\") {\n        list[i].forEach(function (el) {\n          node.appendChild(el.node);\n        });\n      } else {\n        node.appendChild(list[i].node);\n      }\n    }\n\n    var children = node.childNodes;\n\n    for (i = 0; i < children.length; i++) {\n      this[j++] = wrap(children[i]);\n    }\n\n    return this;\n  } // Hub garbage collector every 10s\n\n\n  setInterval(function () {\n    for (var key in hub) {\n      if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n          delete hub[key];\n        }\n      }\n    }\n  }, 1e4);\n\n  function Element(el) {\n    if (el.snap in hub) {\n      return hub[el.snap];\n    }\n\n    var svg;\n\n    try {\n      svg = el.ownerSVGElement;\n    } catch (e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n\n\n    this.node = el;\n\n    if (svg) {\n      this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n\n\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n      transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n\n    if (this.type == \"g\") {\n      this.add = add2group;\n    }\n\n    if (this.type in {\n      g: 1,\n      mask: 1,\n      pattern: 1,\n      symbol: 1\n    }) {\n      for (var method in Paper.prototype) {\n        if (Paper.prototype[has](method)) {\n          this[method] = Paper.prototype[method];\n        }\n      }\n    }\n  }\n  /*\\\n    * Element.attr\n    [ method ]\n    **\n    * Gets or sets given attributes of the element.\n    **\n    - params (object) contains key-value pairs of attributes you want to set\n    * or\n    - param (string) name of the attribute\n    = (Element) the current element\n    * or\n    = (string) value of attribute\n    > Usage\n    | el.attr({\n    |     fill: \"#fc0\",\n    |     stroke: \"#000\",\n    |     strokeWidth: 2, // CamelCase...\n    |     \"fill-opacity\": 0.5, // or dash-separated names\n    |     width: \"*=2\" // prefixed values\n    | });\n    | console.log(el.attr(\"fill\")); // #fc0\n    * Prefixed values in format `\"+=10\"` supported. All four operations\n    * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n    * and `-`: `\"+=2em\"`.\n   \\*/\n\n\n  Element.prototype.attr = function (params, value) {\n    var el = this,\n        node = el.node;\n\n    if (!params) {\n      if (node.nodeType != 1) {\n        return {\n          text: node.nodeValue\n        };\n      }\n\n      var attr = node.attributes,\n          out = {};\n\n      for (var i = 0, ii = attr.length; i < ii; i++) {\n        out[attr[i].nodeName] = attr[i].nodeValue;\n      }\n\n      return out;\n    }\n\n    if (is(params, \"string\")) {\n      if (arguments.length > 1) {\n        var json = {};\n        json[params] = value;\n        params = json;\n      } else {\n        return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n      }\n    }\n\n    for (var att in params) {\n      if (params[has](att)) {\n        eve(\"snap.util.attr.\" + att, el, params[att]);\n      }\n    }\n\n    return el;\n  };\n  /*\\\n   * Snap.parse\n   [ method ]\n   **\n   * Parses SVG fragment and converts it into a @Fragment\n   **\n   - svg (string) SVG string\n   = (Fragment) the @Fragment\n  \\*/\n\n\n  Snap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n      svg = \"<svg>\" + svg + \"</svg>\";\n      full = false;\n    }\n\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n\n    if (svg) {\n      if (full) {\n        f = svg;\n      } else {\n        while (svg.firstChild) {\n          f.appendChild(svg.firstChild);\n        }\n      }\n    }\n\n    return new Fragment(f);\n  };\n\n  function Fragment(frag) {\n    this.node = frag;\n  }\n  /*\\\n   * Snap.fragment\n   [ method ]\n   **\n   * Creates a DOM fragment from a given list of elements or strings\n   **\n   - varargs (…) SVG string\n   = (Fragment) the @Fragment\n  \\*/\n\n\n  Snap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n\n    for (var i = 0, ii = args.length; i < ii; i++) {\n      var item = args[i];\n\n      if (item.node && item.node.nodeType) {\n        f.appendChild(item.node);\n      }\n\n      if (item.nodeType) {\n        f.appendChild(item);\n      }\n\n      if (typeof item == \"string\") {\n        f.appendChild(Snap.parse(item).node);\n      }\n    }\n\n    return new Fragment(f);\n  };\n\n  function make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n  }\n\n  function Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n      if (w.snap in hub) {\n        return hub[w.snap];\n      }\n\n      var doc = w.ownerDocument;\n      res = new Element(w);\n      desc = w.getElementsByTagName(\"desc\")[0];\n      defs = w.getElementsByTagName(\"defs\")[0];\n\n      if (!desc) {\n        desc = $(\"desc\");\n        desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n        res.node.appendChild(desc);\n      }\n\n      if (!defs) {\n        defs = $(\"defs\");\n        res.node.appendChild(defs);\n      }\n\n      res.defs = defs;\n\n      for (var key in proto) {\n        if (proto[has](key)) {\n          res[key] = proto[key];\n        }\n      }\n\n      res.paper = res.root = res;\n    } else {\n      res = make(\"svg\", glob.doc.body);\n      $(res.node, {\n        height: h,\n        version: 1.1,\n        width: w,\n        xmlns: xmlns\n      });\n    }\n\n    return res;\n  }\n\n  function wrap(dom) {\n    if (!dom) {\n      return dom;\n    }\n\n    if (dom instanceof Element || dom instanceof Fragment) {\n      return dom;\n    }\n\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n      return new Paper(dom);\n    }\n\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n      return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n\n    return new Element(dom);\n  }\n\n  Snap._.make = make;\n  Snap._.wrap = wrap;\n  /*\\\n   * Paper.el\n   [ method ]\n   **\n   * Creates an element on paper with a given name and no attributes\n   **\n   - name (string) tag name\n   - attr (object) attributes\n   = (Element) the current element\n   > Usage\n   | var c = paper.circle(10, 10, 10); // is the same as...\n   | var c = paper.el(\"circle\").attr({\n   |     cx: 10,\n   |     cy: 10,\n   |     r: 10\n   | });\n   | // and the same as\n   | var c = paper.el(\"circle\", {\n   |     cx: 10,\n   |     cy: 10,\n   |     r: 10\n   | });\n  \\*/\n\n  Paper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n  };\n  /*\\\n   * Element.children\n   [ method ]\n   **\n   * Returns array of all the children of the element.\n   = (array) array of Elements\n  \\*/\n\n\n  Element.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n      out[i] = Snap(ch[i]);\n    }\n\n    return out;\n  };\n\n  function jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n      var item = {\n        type: root[i].type,\n        attr: root[i].attr()\n      },\n          children = root[i].children();\n      o.push(item);\n\n      if (children.length) {\n        jsonFiller(children, item.childNodes = []);\n      }\n    }\n  }\n  /*\\\n   * Element.toJSON\n   [ method ]\n   **\n   * Returns object representation of the given element and all its children.\n   = (object) in format\n   o {\n   o     type (string) this.type,\n   o     attr (object) attributes map,\n   o     childNodes (array) optional array of children in the same format\n   o }\n  \\*/\n\n\n  Element.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n  }; // default\n\n\n  eve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n      return \"-\" + letter.toLowerCase();\n    });\n\n    if (cssAttr[has](css)) {\n      return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n      return $(this.node, att);\n    }\n  });\n  var cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n  };\n  eve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n      return letter.toUpperCase();\n    }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n      return \"-\" + letter.toLowerCase();\n    });\n\n    if (cssAttr[has](css)) {\n      this.node.style[style] = value == null ? E : value;\n    } else {\n      $(this.node, attr);\n    }\n  });\n\n  (function (proto) {})(Paper.prototype); // simple ajax\n\n  /*\\\n   * Snap.ajax\n   [ method ]\n   **\n   * Simple implementation of Ajax\n   **\n   - url (string) URL\n   - postData (object|string) data for post request\n   - callback (function) callback\n   - scope (object) #optional scope of callback\n   * or\n   - url (string) URL\n   - callback (function) callback\n   - scope (object) #optional scope of callback\n   = (XMLHttpRequest) the XMLHttpRequest object, just in case\n  \\*/\n\n\n  Snap.ajax = function (url, postData, callback, scope) {\n    var req = new XMLHttpRequest(),\n        id = ID();\n\n    if (req) {\n      if (is(postData, \"function\")) {\n        scope = callback;\n        callback = postData;\n        postData = null;\n      } else if (is(postData, \"object\")) {\n        var pd = [];\n\n        for (var key in postData) {\n          if (postData.hasOwnProperty(key)) {\n            pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n          }\n        }\n\n        postData = pd.join(\"&\");\n      }\n\n      req.open(postData ? \"POST\" : \"GET\", url, true);\n\n      if (postData) {\n        req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n      }\n\n      if (callback) {\n        eve.once(\"snap.ajax.\" + id + \".0\", callback);\n        eve.once(\"snap.ajax.\" + id + \".200\", callback);\n        eve.once(\"snap.ajax.\" + id + \".304\", callback);\n      }\n\n      req.onreadystatechange = function () {\n        if (req.readyState != 4) return;\n        eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n      };\n\n      if (req.readyState == 4) {\n        return req;\n      }\n\n      req.send(postData);\n      return req;\n    }\n  };\n  /*\\\n   * Snap.load\n   [ method ]\n   **\n   * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n   **\n   - url (string) URL\n   - callback (function) callback\n   - scope (object) #optional scope of callback\n  \\*/\n\n\n  Snap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n      var f = Snap.parse(req.responseText);\n      scope ? callback.call(scope, f) : callback(f);\n    });\n  };\n\n  var getOffset = function getOffset(elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0,\n        clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n      y: top,\n      x: left\n    };\n  };\n  /*\\\n   * Snap.getElementByPoint\n   [ method ]\n   **\n   * Returns you topmost element under given point.\n   **\n   = (object) Snap element object\n   - x (number) x coordinate from the top left corner of the window\n   - y (number) y coordinate from the top left corner of the window\n   > Usage\n   | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n  \\*/\n\n\n  Snap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n\n    if (glob.win.opera && target.tagName == \"svg\") {\n      var so = getOffset(target),\n          sr = target.createSVGRect();\n      sr.x = x - so.x;\n      sr.y = y - so.y;\n      sr.width = sr.height = 1;\n      var hits = target.getIntersectionList(sr, null);\n\n      if (hits.length) {\n        target = hits[hits.length - 1];\n      }\n    }\n\n    if (!target) {\n      return null;\n    }\n\n    return wrap(target);\n  };\n  /*\\\n   * Snap.plugin\n   [ method ]\n   **\n   * Let you write plugins. You pass in a function with five arguments, like this:\n   | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n   |     Snap.newmethod = function () {};\n   |     Element.prototype.newmethod = function () {};\n   |     Paper.prototype.newmethod = function () {};\n   | });\n   * Inside the function you have access to all main objects (and their\n   * prototypes). This allow you to extend anything you want.\n   **\n   - f (function) your plugin body\n  \\*/\n\n\n  Snap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n  };\n\n  glob.win.Snap = Snap;\n  return Snap;\n}(window || this); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var elproto = Element.prototype,\n      is = Snap.is,\n      Str = String,\n      unit2px = Snap._unit2px,\n      $ = Snap._.$,\n      make = Snap._.make,\n      getSomeDefs = Snap._.getSomeDefs,\n      has = \"hasOwnProperty\",\n      wrap = Snap._.wrap;\n  /*\\\n   * Element.getBBox\n   [ method ]\n   **\n   * Returns the bounding box descriptor for the given element\n   **\n   = (object) bounding box descriptor:\n   o {\n   o     cx: (number) x of the center,\n   o     cy: (number) x of the center,\n   o     h: (number) height,\n   o     height: (number) height,\n   o     path: (string) path command for the box,\n   o     r0: (number) radius of a circle that fully encloses the box,\n   o     r1: (number) radius of the smallest circle that can be enclosed,\n   o     r2: (number) radius of the largest circle that can be enclosed,\n   o     vb: (string) box as a viewbox command,\n   o     w: (number) width,\n   o     width: (number) width,\n   o     x2: (number) x of the right side,\n   o     x: (number) x of the left side,\n   o     y2: (number) y of the bottom edge,\n   o     y: (number) y of the top edge\n   o }\n  \\*/\n\n  elproto.getBBox = function (isWithoutTransform) {\n    if (this.type == \"tspan\") {\n      return Snap._.box(this.node.getClientRects().item(0));\n    }\n\n    if (!Snap.Matrix || !Snap.path) {\n      return this.node.getBBox();\n    }\n\n    var el = this,\n        m = new Snap.Matrix();\n\n    if (el.removed) {\n      return Snap._.box();\n    }\n\n    while (el.type == \"use\") {\n      if (!isWithoutTransform) {\n        m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n      }\n\n      if (el.original) {\n        el = el.original;\n      } else {\n        var href = el.attr(\"xlink:href\");\n        el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n      }\n    }\n\n    var _ = el._,\n        pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n\n    try {\n      if (isWithoutTransform) {\n        _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n        return Snap._.box(_.bboxwt);\n      } else {\n        el.realPath = pathfinder(el);\n        el.matrix = el.transform().localMatrix;\n        _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n        return Snap._.box(_.bbox);\n      }\n    } catch (e) {\n      // Firefox doesn’t give you bbox of hidden element\n      return Snap._.box();\n    }\n  };\n\n  var propString = function propString() {\n    return this.string;\n  };\n\n  function extractTransform(el, tstr) {\n    if (tstr == null) {\n      var doReturn = true;\n\n      if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n        tstr = el.node.getAttribute(\"gradientTransform\");\n      } else if (el.type == \"pattern\") {\n        tstr = el.node.getAttribute(\"patternTransform\");\n      } else {\n        tstr = el.node.getAttribute(\"transform\");\n      }\n\n      if (!tstr) {\n        return new Snap.Matrix();\n      }\n\n      tstr = Snap._.svgTransform2string(tstr);\n    } else {\n      if (!Snap._.rgTransform.test(tstr)) {\n        tstr = Snap._.svgTransform2string(tstr);\n      } else {\n        tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n      }\n\n      if (is(tstr, \"array\")) {\n        tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n      }\n\n      el._.transform = tstr;\n    }\n\n    var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n\n    if (doReturn) {\n      return m;\n    } else {\n      el.matrix = m;\n    }\n  }\n  /*\\\n   * Element.transform\n   [ method ]\n   **\n   * Gets or sets transformation of the element\n   **\n   - tstr (string) transform string in Snap or SVG format\n   = (Element) the current element\n   * or\n   = (object) transformation descriptor:\n   o {\n   o     string (string) transform string,\n   o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n   o     localMatrix (Matrix) matrix of transformations applied only to the element,\n   o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n   o     global (string) global transformation as string,\n   o     local (string) local transformation as string,\n   o     toString (function) returns `string` property\n   o }\n  \\*/\n\n\n  elproto.transform = function (tstr) {\n    var _ = this._;\n\n    if (tstr == null) {\n      var papa = this,\n          global = new Snap.Matrix(this.node.getCTM()),\n          local = extractTransform(this),\n          ms = [local],\n          m = new Snap.Matrix(),\n          i,\n          localString = local.toTransformString(),\n          string = Str(local) == Str(this.matrix) ? Str(_.transform) : localString;\n\n      while (papa.type != \"svg\" && (papa = papa.parent())) {\n        ms.push(extractTransform(papa));\n      }\n\n      i = ms.length;\n\n      while (i--) {\n        m.add(ms[i]);\n      }\n\n      return {\n        string: string,\n        globalMatrix: global,\n        totalMatrix: m,\n        localMatrix: local,\n        diffMatrix: global.clone().add(local.invert()),\n        global: global.toTransformString(),\n        total: m.toTransformString(),\n        local: localString,\n        toString: propString\n      };\n    }\n\n    if (tstr instanceof Snap.Matrix) {\n      this.matrix = tstr;\n      this._.transform = tstr.toTransformString();\n    } else {\n      extractTransform(this, tstr);\n    }\n\n    if (this.node) {\n      if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n        $(this.node, {\n          gradientTransform: this.matrix\n        });\n      } else if (this.type == \"pattern\") {\n        $(this.node, {\n          patternTransform: this.matrix\n        });\n      } else {\n        $(this.node, {\n          transform: this.matrix\n        });\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.parent\n   [ method ]\n   **\n   * Returns the element's parent\n   **\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.parent = function () {\n    return wrap(this.node.parentNode);\n  };\n  /*\\\n   * Element.append\n   [ method ]\n   **\n   * Appends the given element to current one\n   **\n   - el (Element|Set) element to append\n   = (Element) the parent element\n  \\*/\n\n  /*\\\n   * Element.add\n   [ method ]\n   **\n   * See @Element.append\n  \\*/\n\n\n  elproto.append = elproto.add = function (el) {\n    if (el) {\n      if (el.type == \"set\") {\n        var it = this;\n        el.forEach(function (el) {\n          it.add(el);\n        });\n        return this;\n      }\n\n      el = wrap(el);\n      this.node.appendChild(el.node);\n      el.paper = this.paper;\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.appendTo\n   [ method ]\n   **\n   * Appends the current element to the given one\n   **\n   - el (Element) parent element to append to\n   = (Element) the child element\n  \\*/\n\n\n  elproto.appendTo = function (el) {\n    if (el) {\n      el = wrap(el);\n      el.append(this);\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.prepend\n   [ method ]\n   **\n   * Prepends the given element to the current one\n   **\n   - el (Element) element to prepend\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.prepend = function (el) {\n    if (el) {\n      if (el.type == \"set\") {\n        var it = this,\n            first;\n        el.forEach(function (el) {\n          if (first) {\n            first.after(el);\n          } else {\n            it.prepend(el);\n          }\n\n          first = el;\n        });\n        return this;\n      }\n\n      el = wrap(el);\n      var parent = el.parent();\n      this.node.insertBefore(el.node, this.node.firstChild);\n      this.add && this.add();\n      el.paper = this.paper;\n      this.parent() && this.parent().add();\n      parent && parent.add();\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.prependTo\n   [ method ]\n   **\n   * Prepends the current element to the given one\n   **\n   - el (Element) parent element to prepend to\n   = (Element) the child element\n  \\*/\n\n\n  elproto.prependTo = function (el) {\n    el = wrap(el);\n    el.prepend(this);\n    return this;\n  };\n  /*\\\n   * Element.before\n   [ method ]\n   **\n   * Inserts given element before the current one\n   **\n   - el (Element) element to insert\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.before = function (el) {\n    if (el.type == \"set\") {\n      var it = this;\n      el.forEach(function (el) {\n        var parent = el.parent();\n        it.node.parentNode.insertBefore(el.node, it.node);\n        parent && parent.add();\n      });\n      this.parent().add();\n      return this;\n    }\n\n    el = wrap(el);\n    var parent = el.parent();\n    this.node.parentNode.insertBefore(el.node, this.node);\n    this.parent() && this.parent().add();\n    parent && parent.add();\n    el.paper = this.paper;\n    return this;\n  };\n  /*\\\n   * Element.after\n   [ method ]\n   **\n   * Inserts given element after the current one\n   **\n   - el (Element) element to insert\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.after = function (el) {\n    el = wrap(el);\n    var parent = el.parent();\n\n    if (this.node.nextSibling) {\n      this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n    } else {\n      this.node.parentNode.appendChild(el.node);\n    }\n\n    this.parent() && this.parent().add();\n    parent && parent.add();\n    el.paper = this.paper;\n    return this;\n  };\n  /*\\\n   * Element.insertBefore\n   [ method ]\n   **\n   * Inserts the element after the given one\n   **\n   - el (Element) element next to whom insert to\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.insertBefore = function (el) {\n    el = wrap(el);\n    var parent = this.parent();\n    el.node.parentNode.insertBefore(this.node, el.node);\n    this.paper = el.paper;\n    parent && parent.add();\n    el.parent() && el.parent().add();\n    return this;\n  };\n  /*\\\n   * Element.insertAfter\n   [ method ]\n   **\n   * Inserts the element after the given one\n   **\n   - el (Element) element next to whom insert to\n   = (Element) the parent element\n  \\*/\n\n\n  elproto.insertAfter = function (el) {\n    el = wrap(el);\n    var parent = this.parent();\n    el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n    this.paper = el.paper;\n    parent && parent.add();\n    el.parent() && el.parent().add();\n    return this;\n  };\n  /*\\\n   * Element.remove\n   [ method ]\n   **\n   * Removes element from the DOM\n   = (Element) the detached element\n  \\*/\n\n\n  elproto.remove = function () {\n    var parent = this.parent();\n    this.node.parentNode && this.node.parentNode.removeChild(this.node);\n    delete this.paper;\n    this.removed = true;\n    parent && parent.add();\n    return this;\n  };\n  /*\\\n   * Element.select\n   [ method ]\n   **\n   * Gathers the nested @Element matching the given set of CSS selectors\n   **\n   - query (string) CSS selector\n   = (Element) result of query selection\n  \\*/\n\n\n  elproto.select = function (query) {\n    return wrap(this.node.querySelector(query));\n  };\n  /*\\\n   * Element.selectAll\n   [ method ]\n   **\n   * Gathers nested @Element objects matching the given set of CSS selectors\n   **\n   - query (string) CSS selector\n   = (Set|array) result of query selection\n  \\*/\n\n\n  elproto.selectAll = function (query) {\n    var nodelist = this.node.querySelectorAll(query),\n        set = (Snap.set || Array)();\n\n    for (var i = 0; i < nodelist.length; i++) {\n      set.push(wrap(nodelist[i]));\n    }\n\n    return set;\n  };\n  /*\\\n   * Element.asPX\n   [ method ]\n   **\n   * Returns given attribute of the element as a `px` value (not %, em, etc.)\n   **\n   - attr (string) attribute name\n   - value (string) #optional attribute value\n   = (Element) result of query selection\n  \\*/\n\n\n  elproto.asPX = function (attr, value) {\n    if (value == null) {\n      value = this.attr(attr);\n    }\n\n    return +unit2px(this, attr, value);\n  }; // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n\n  /*\\\n   * Element.use\n   [ method ]\n   **\n   * Creates a `<use>` element linked to the current element\n   **\n   = (Element) the `<use>` element\n  \\*/\n\n\n  elproto.use = function () {\n    var use,\n        id = this.node.id;\n\n    if (!id) {\n      id = this.id;\n      $(this.node, {\n        id: id\n      });\n    }\n\n    if (this.type == \"linearGradient\" || this.type == \"radialGradient\" || this.type == \"pattern\") {\n      use = make(this.type, this.node.parentNode);\n    } else {\n      use = make(\"use\", this.node.parentNode);\n    }\n\n    $(use.node, {\n      \"xlink:href\": \"#\" + id\n    });\n    use.original = this;\n    return use;\n  };\n\n  function fixids(el) {\n    var els = el.selectAll(\"*\"),\n        it,\n        url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n        ids = [],\n        uses = {};\n\n    function urltest(it, name) {\n      var val = $(it.node, name);\n      val = val && val.match(url);\n      val = val && val[2];\n\n      if (val && val.charAt() == \"#\") {\n        val = val.substring(1);\n      } else {\n        return;\n      }\n\n      if (val) {\n        uses[val] = (uses[val] || []).concat(function (id) {\n          var attr = {};\n          attr[name] = Snap.url(id);\n          $(it.node, attr);\n        });\n      }\n    }\n\n    function linktest(it) {\n      var val = $(it.node, \"xlink:href\");\n\n      if (val && val.charAt() == \"#\") {\n        val = val.substring(1);\n      } else {\n        return;\n      }\n\n      if (val) {\n        uses[val] = (uses[val] || []).concat(function (id) {\n          it.attr(\"xlink:href\", \"#\" + id);\n        });\n      }\n    }\n\n    for (var i = 0, ii = els.length; i < ii; i++) {\n      it = els[i];\n      urltest(it, \"fill\");\n      urltest(it, \"stroke\");\n      urltest(it, \"filter\");\n      urltest(it, \"mask\");\n      urltest(it, \"clip-path\");\n      linktest(it);\n      var oldid = $(it.node, \"id\");\n\n      if (oldid) {\n        $(it.node, {\n          id: it.id\n        });\n        ids.push({\n          old: oldid,\n          id: it.id\n        });\n      }\n    }\n\n    for (i = 0, ii = ids.length; i < ii; i++) {\n      var fs = uses[ids[i].old];\n\n      if (fs) {\n        for (var j = 0, jj = fs.length; j < jj; j++) {\n          fs[j](ids[i].id);\n        }\n      }\n    }\n  }\n  /*\\\n   * Element.clone\n   [ method ]\n   **\n   * Creates a clone of the element and inserts it after the element\n   **\n   = (Element) the clone\n  \\*/\n\n\n  elproto.clone = function () {\n    var clone = wrap(this.node.cloneNode(true));\n\n    if ($(clone.node, \"id\")) {\n      $(clone.node, {\n        id: clone.id\n      });\n    }\n\n    fixids(clone);\n    clone.insertAfter(this);\n    return clone;\n  };\n  /*\\\n   * Element.toDefs\n   [ method ]\n   **\n   * Moves element to the shared `<defs>` area\n   **\n   = (Element) the element\n  \\*/\n\n\n  elproto.toDefs = function () {\n    var defs = getSomeDefs(this);\n    defs.appendChild(this.node);\n    return this;\n  };\n  /*\\\n   * Element.toPattern\n   [ method ]\n   **\n   * Creates a `<pattern>` element from the current element\n   **\n   * To create a pattern you have to specify the pattern rect:\n   - x (string|number)\n   - y (string|number)\n   - width (string|number)\n   - height (string|number)\n   = (Element) the `<pattern>` element\n   * You can use pattern later on as an argument for `fill` attribute:\n   | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n   |         fill: \"none\",\n   |         stroke: \"#bada55\",\n   |         strokeWidth: 5\n   |     }).pattern(0, 0, 10, 10),\n   |     c = paper.circle(200, 200, 100);\n   | c.attr({\n   |     fill: p\n   | });\n  \\*/\n\n\n  elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n    var p = make(\"pattern\", getSomeDefs(this));\n\n    if (x == null) {\n      x = this.getBBox();\n    }\n\n    if (is(x, \"object\") && \"x\" in x) {\n      y = x.y;\n      width = x.width;\n      height = x.height;\n      x = x.x;\n    }\n\n    $(p.node, {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      patternUnits: \"userSpaceOnUse\",\n      id: p.id,\n      viewBox: [x, y, width, height].join(\" \")\n    });\n    p.node.appendChild(this.node);\n    return p;\n  }; // SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n  // SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n\n  /*\\\n   * Element.marker\n   [ method ]\n   **\n   * Creates a `<marker>` element from the current element\n   **\n   * To create a marker you have to specify the bounding rect and reference point:\n   - x (number)\n   - y (number)\n   - width (number)\n   - height (number)\n   - refX (number)\n   - refY (number)\n   = (Element) the `<marker>` element\n   * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n  \\*/\n  // TODO add usage for markers\n\n\n  elproto.marker = function (x, y, width, height, refX, refY) {\n    var p = make(\"marker\", getSomeDefs(this));\n\n    if (x == null) {\n      x = this.getBBox();\n    }\n\n    if (is(x, \"object\") && \"x\" in x) {\n      y = x.y;\n      width = x.width;\n      height = x.height;\n      refX = x.refX || x.cx;\n      refY = x.refY || x.cy;\n      x = x.x;\n    }\n\n    $(p.node, {\n      viewBox: [x, y, width, height].join(\" \"),\n      markerWidth: width,\n      markerHeight: height,\n      orient: \"auto\",\n      refX: refX || 0,\n      refY: refY || 0,\n      id: p.id\n    });\n    p.node.appendChild(this.node);\n    return p;\n  };\n\n  var eldata = {};\n  /*\\\n   * Element.data\n   [ method ]\n   **\n   * Adds or retrieves given value associated with given key. (Don’t confuse\n   * with `data-` attributes)\n   *\n   * See also @Element.removeData\n   - key (string) key to store data\n   - value (any) #optional value to store\n   = (object) @Element\n   * or, if value is not specified:\n   = (any) value\n   > Usage\n   | for (var i = 0, i < 5, i++) {\n   |     paper.circle(10 + 15 * i, 10, 10)\n   |          .attr({fill: \"#000\"})\n   |          .data(\"i\", i)\n   |          .click(function () {\n   |             alert(this.data(\"i\"));\n   |          });\n   | }\n  \\*/\n\n  elproto.data = function (key, value) {\n    var data = eldata[this.id] = eldata[this.id] || {};\n\n    if (arguments.length == 0) {\n      eve(\"snap.data.get.\" + this.id, this, data, null);\n      return data;\n    }\n\n    if (arguments.length == 1) {\n      if (Snap.is(key, \"object\")) {\n        for (var i in key) {\n          if (key[has](i)) {\n            this.data(i, key[i]);\n          }\n        }\n\n        return this;\n      }\n\n      eve(\"snap.data.get.\" + this.id, this, data[key], key);\n      return data[key];\n    }\n\n    data[key] = value;\n    eve(\"snap.data.set.\" + this.id, this, value, key);\n    return this;\n  };\n  /*\\\n   * Element.removeData\n   [ method ]\n   **\n   * Removes value associated with an element by given key.\n   * If key is not provided, removes all the data of the element.\n   - key (string) #optional key\n   = (object) @Element\n  \\*/\n\n\n  elproto.removeData = function (key) {\n    if (key == null) {\n      eldata[this.id] = {};\n    } else {\n      eldata[this.id] && delete eldata[this.id][key];\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.outerSVG\n   [ method ]\n   **\n   * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n   *\n   * See also @Element.innerSVG\n   = (string) SVG code for the element\n  \\*/\n\n  /*\\\n   * Element.toString\n   [ method ]\n   **\n   * See @Element.outerSVG\n  \\*/\n\n\n  elproto.outerSVG = elproto.toString = toString(1);\n  /*\\\n   * Element.innerSVG\n   [ method ]\n   **\n   * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n   = (string) SVG code for the element\n  \\*/\n\n  elproto.innerSVG = toString();\n\n  function toString(type) {\n    return function () {\n      var res = type ? \"<\" + this.type : \"\",\n          attr = this.node.attributes,\n          chld = this.node.childNodes;\n\n      if (type) {\n        for (var i = 0, ii = attr.length; i < ii; i++) {\n          res += \" \" + attr[i].name + '=\"' + attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n        }\n      }\n\n      if (chld.length) {\n        type && (res += \">\");\n\n        for (i = 0, ii = chld.length; i < ii; i++) {\n          if (chld[i].nodeType == 3) {\n            res += chld[i].nodeValue;\n          } else if (chld[i].nodeType == 1) {\n            res += wrap(chld[i]).toString();\n          }\n        }\n\n        type && (res += \"</\" + this.type + \">\");\n      } else {\n        type && (res += \"/>\");\n      }\n\n      return res;\n    };\n  }\n\n  elproto.toDataURL = function () {\n    if (window && window.btoa) {\n      var bb = this.getBBox(),\n          svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n        x: +bb.x.toFixed(3),\n        y: +bb.y.toFixed(3),\n        width: +bb.width.toFixed(3),\n        height: +bb.height.toFixed(3),\n        contents: this.outerSVG()\n      });\n      return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n    }\n  };\n  /*\\\n   * Fragment.select\n   [ method ]\n   **\n   * See @Element.select\n  \\*/\n\n\n  Fragment.prototype.select = elproto.select;\n  /*\\\n   * Fragment.selectAll\n   [ method ]\n   **\n   * See @Element.selectAll\n  \\*/\n\n  Fragment.prototype.selectAll = elproto.selectAll;\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var objectToString = Object.prototype.toString,\n      Str = String,\n      math = Math,\n      E = \"\";\n\n  function Matrix(a, b, c, d, e, f) {\n    if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n      this.a = a.a;\n      this.b = a.b;\n      this.c = a.c;\n      this.d = a.d;\n      this.e = a.e;\n      this.f = a.f;\n      return;\n    }\n\n    if (a != null) {\n      this.a = +a;\n      this.b = +b;\n      this.c = +c;\n      this.d = +d;\n      this.e = +e;\n      this.f = +f;\n    } else {\n      this.a = 1;\n      this.b = 0;\n      this.c = 0;\n      this.d = 1;\n      this.e = 0;\n      this.f = 0;\n    }\n  }\n\n  (function (matrixproto) {\n    /*\\\n     * Matrix.add\n     [ method ]\n     **\n     * Adds the given matrix to existing one\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - matrix (object) @Matrix\n    \\*/\n    matrixproto.add = function (a, b, c, d, e, f) {\n      if (a && a instanceof Matrix) {\n        return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n      }\n\n      var aNew = a * this.a + b * this.c,\n          bNew = a * this.b + b * this.d;\n      this.e += e * this.a + f * this.c;\n      this.f += e * this.b + f * this.d;\n      this.c = c * this.a + d * this.c;\n      this.d = c * this.b + d * this.d;\n      this.a = aNew;\n      this.b = bNew;\n      return this;\n    };\n    /*\\\n     * Matrix.multLeft\n     [ method ]\n     **\n     * Multiplies a passed affine transform to the left: M * this.\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - matrix (object) @Matrix\n    \\*/\n\n\n    Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n      if (a && a instanceof Matrix) {\n        return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n      }\n\n      var aNew = a * this.a + c * this.b,\n          cNew = a * this.c + c * this.d,\n          eNew = a * this.e + c * this.f + e;\n      this.b = b * this.a + d * this.b;\n      this.d = b * this.c + d * this.d;\n      this.f = b * this.e + d * this.f + f;\n      this.a = aNew;\n      this.c = cNew;\n      this.e = eNew;\n      return this;\n    };\n    /*\\\n     * Matrix.invert\n     [ method ]\n     **\n     * Returns an inverted version of the matrix\n     = (object) @Matrix\n    \\*/\n\n\n    matrixproto.invert = function () {\n      var me = this,\n          x = me.a * me.d - me.b * me.c;\n      return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n    };\n    /*\\\n     * Matrix.clone\n     [ method ]\n     **\n     * Returns a copy of the matrix\n     = (object) @Matrix\n    \\*/\n\n\n    matrixproto.clone = function () {\n      return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n    };\n    /*\\\n     * Matrix.translate\n     [ method ]\n     **\n     * Translate the matrix\n     - x (number) horizontal offset distance\n     - y (number) vertical offset distance\n    \\*/\n\n\n    matrixproto.translate = function (x, y) {\n      this.e += x * this.a + y * this.c;\n      this.f += x * this.b + y * this.d;\n      return this;\n    };\n    /*\\\n     * Matrix.scale\n     [ method ]\n     **\n     * Scales the matrix\n     - x (number) amount to be scaled, with `1` resulting in no change\n     - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n     - cx (number) #optional horizontal origin point from which to scale\n     - cy (number) #optional vertical origin point from which to scale\n     * Default cx, cy is the middle point of the element.\n    \\*/\n\n\n    matrixproto.scale = function (x, y, cx, cy) {\n      y == null && (y = x);\n      (cx || cy) && this.translate(cx, cy);\n      this.a *= x;\n      this.b *= x;\n      this.c *= y;\n      this.d *= y;\n      (cx || cy) && this.translate(-cx, -cy);\n      return this;\n    };\n    /*\\\n     * Matrix.rotate\n     [ method ]\n     **\n     * Rotates the matrix\n     - a (number) angle of rotation, in degrees\n     - x (number) horizontal origin point from which to rotate\n     - y (number) vertical origin point from which to rotate\n    \\*/\n\n\n    matrixproto.rotate = function (a, x, y) {\n      a = Snap.rad(a);\n      x = x || 0;\n      y = y || 0;\n      var cos = +math.cos(a).toFixed(9),\n          sin = +math.sin(a).toFixed(9);\n      this.add(cos, sin, -sin, cos, x, y);\n      return this.add(1, 0, 0, 1, -x, -y);\n    };\n    /*\\\n     * Matrix.skewX\n     [ method ]\n     **\n     * Skews the matrix along the x-axis\n     - x (number) Angle to skew along the x-axis (in degrees).\n    \\*/\n\n\n    matrixproto.skewX = function (x) {\n      return this.skew(x, 0);\n    };\n    /*\\\n     * Matrix.skewY\n     [ method ]\n     **\n     * Skews the matrix along the y-axis\n     - y (number) Angle to skew along the y-axis (in degrees).\n    \\*/\n\n\n    matrixproto.skewY = function (y) {\n      return this.skew(0, y);\n    };\n    /*\\\n     * Matrix.skew\n     [ method ]\n     **\n     * Skews the matrix\n     - y (number) Angle to skew along the y-axis (in degrees).\n     - x (number) Angle to skew along the x-axis (in degrees).\n    \\*/\n\n\n    matrixproto.skew = function (x, y) {\n      x = x || 0;\n      y = y || 0;\n      x = Snap.rad(x);\n      y = Snap.rad(y);\n      var c = math.tan(x).toFixed(9);\n      var b = math.tan(y).toFixed(9);\n      return this.add(1, b, c, 1, 0, 0);\n    };\n    /*\\\n     * Matrix.x\n     [ method ]\n     **\n     * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n     - x (number)\n     - y (number)\n     = (number) x\n    \\*/\n\n\n    matrixproto.x = function (x, y) {\n      return x * this.a + y * this.c + this.e;\n    };\n    /*\\\n     * Matrix.y\n     [ method ]\n     **\n     * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n     - x (number)\n     - y (number)\n     = (number) y\n    \\*/\n\n\n    matrixproto.y = function (x, y) {\n      return x * this.b + y * this.d + this.f;\n    };\n\n    matrixproto.get = function (i) {\n      return +this[Str.fromCharCode(97 + i)].toFixed(4);\n    };\n\n    matrixproto.toString = function () {\n      return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n    };\n\n    matrixproto.offset = function () {\n      return [this.e.toFixed(4), this.f.toFixed(4)];\n    };\n\n    function norm(a) {\n      return a[0] * a[0] + a[1] * a[1];\n    }\n\n    function normalize(a) {\n      var mag = math.sqrt(norm(a));\n      a[0] && (a[0] /= mag);\n      a[1] && (a[1] /= mag);\n    }\n    /*\\\n     * Matrix.determinant\n     [ method ]\n     **\n     * Finds determinant of the given matrix.\n     = (number) determinant\n    \\*/\n\n\n    matrixproto.determinant = function () {\n      return this.a * this.d - this.b * this.c;\n    };\n    /*\\\n     * Matrix.split\n     [ method ]\n     **\n     * Splits matrix into primitive transformations\n     = (object) in format:\n     o dx (number) translation by x\n     o dy (number) translation by y\n     o scalex (number) scale by x\n     o scaley (number) scale by y\n     o shear (number) shear\n     o rotate (number) rotation in deg\n     o isSimple (boolean) could it be represented via simple transformations\n    \\*/\n\n\n    matrixproto.split = function () {\n      var out = {}; // translation\n\n      out.dx = this.e;\n      out.dy = this.f; // scale and shear\n\n      var row = [[this.a, this.b], [this.c, this.d]];\n      out.scalex = math.sqrt(norm(row[0]));\n      normalize(row[0]);\n      out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n      row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n      out.scaley = math.sqrt(norm(row[1]));\n      normalize(row[1]);\n      out.shear /= out.scaley;\n\n      if (this.determinant() < 0) {\n        out.scalex = -out.scalex;\n      } // rotation\n\n\n      var sin = row[0][1],\n          cos = row[1][1];\n\n      if (cos < 0) {\n        out.rotate = Snap.deg(math.acos(cos));\n\n        if (sin < 0) {\n          out.rotate = 360 - out.rotate;\n        }\n      } else {\n        out.rotate = Snap.deg(math.asin(sin));\n      }\n\n      out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n      out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n      out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n      return out;\n    };\n    /*\\\n     * Matrix.toTransformString\n     [ method ]\n     **\n     * Returns transform string that represents given matrix\n     = (string) transform string\n    \\*/\n\n\n    matrixproto.toTransformString = function (shorter) {\n      var s = shorter || this.split();\n\n      if (!+s.shear.toFixed(9)) {\n        s.scalex = +s.scalex.toFixed(4);\n        s.scaley = +s.scaley.toFixed(4);\n        s.rotate = +s.rotate.toFixed(4);\n        return (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) + (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) + (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n      } else {\n        return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n      }\n    };\n  })(Matrix.prototype);\n  /*\\\n   * Snap.Matrix\n   [ method ]\n   **\n   * Matrix constructor, extend on your own risk.\n   * To create matrices use @Snap.matrix.\n  \\*/\n\n\n  Snap.Matrix = Matrix;\n  /*\\\n   * Snap.matrix\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns a matrix based on the given parameters\n   - a (number)\n   - b (number)\n   - c (number)\n   - d (number)\n   - e (number)\n   - f (number)\n   * or\n   - svgMatrix (SVGMatrix)\n   = (object) @Matrix\n  \\*/\n\n  Snap.matrix = function (a, b, c, d, e, f) {\n    return new Matrix(a, b, c, d, e, f);\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var has = \"hasOwnProperty\",\n      make = Snap._.make,\n      wrap = Snap._.wrap,\n      is = Snap.is,\n      getSomeDefs = Snap._.getSomeDefs,\n      reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n      $ = Snap._.$,\n      URL = Snap.url,\n      Str = String,\n      separator = Snap._.separator,\n      E = \"\";\n  /*\\\n   * Snap.deurl\n   [ method ]\n   **\n   * Unwraps path from `\"url(<path>)\"`.\n   - value (string) url path\n   = (string) unwrapped path\n  \\*/\n\n  Snap.deurl = function (value) {\n    var res = String(value).match(reURLValue);\n    return res ? res[2] : value;\n  }; // Attributes event handlers\n\n\n  eve.on(\"snap.util.attr.mask\", function (value) {\n    if (value instanceof Element || value instanceof Fragment) {\n      eve.stop();\n\n      if (value instanceof Fragment && value.node.childNodes.length == 1) {\n        value = value.node.firstChild;\n        getSomeDefs(this).appendChild(value);\n        value = wrap(value);\n      }\n\n      if (value.type == \"mask\") {\n        var mask = value;\n      } else {\n        mask = make(\"mask\", getSomeDefs(this));\n        mask.node.appendChild(value.node);\n      }\n\n      !mask.node.id && $(mask.node, {\n        id: mask.id\n      });\n      $(this.node, {\n        mask: URL(mask.id)\n      });\n    }\n  });\n\n  (function (clipIt) {\n    eve.on(\"snap.util.attr.clip\", clipIt);\n    eve.on(\"snap.util.attr.clip-path\", clipIt);\n    eve.on(\"snap.util.attr.clipPath\", clipIt);\n  })(function (value) {\n    if (value instanceof Element || value instanceof Fragment) {\n      eve.stop();\n      var clip,\n          node = value.node;\n\n      while (node) {\n        if (node.nodeName === \"clipPath\") {\n          clip = new Element(node);\n          break;\n        }\n\n        if (node.nodeName === \"svg\") {\n          clip = undefined;\n          break;\n        }\n\n        node = node.parentNode;\n      }\n\n      if (!clip) {\n        clip = make(\"clipPath\", getSomeDefs(this));\n        clip.node.appendChild(value.node);\n        !clip.node.id && $(clip.node, {\n          id: clip.id\n        });\n      }\n\n      $(this.node, {\n        \"clip-path\": URL(clip.node.id || clip.id)\n      });\n    }\n  });\n\n  function fillStroke(name) {\n    return function (value) {\n      eve.stop();\n\n      if (value instanceof Fragment && value.node.childNodes.length == 1 && (value.node.firstChild.tagName == \"radialGradient\" || value.node.firstChild.tagName == \"linearGradient\" || value.node.firstChild.tagName == \"pattern\")) {\n        value = value.node.firstChild;\n        getSomeDefs(this).appendChild(value);\n        value = wrap(value);\n      }\n\n      if (value instanceof Element) {\n        if (value.type == \"radialGradient\" || value.type == \"linearGradient\" || value.type == \"pattern\") {\n          if (!value.node.id) {\n            $(value.node, {\n              id: value.id\n            });\n          }\n\n          var fill = URL(value.node.id);\n        } else {\n          fill = value.attr(name);\n        }\n      } else {\n        fill = Snap.color(value);\n\n        if (fill.error) {\n          var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n\n          if (grad) {\n            if (!grad.node.id) {\n              $(grad.node, {\n                id: grad.id\n              });\n            }\n\n            fill = URL(grad.node.id);\n          } else {\n            fill = value;\n          }\n        } else {\n          fill = Str(fill);\n        }\n      }\n\n      var attrs = {};\n      attrs[name] = fill;\n      $(this.node, attrs);\n      this.node.style[name] = E;\n    };\n  }\n\n  eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n  eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n  var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n  eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n    string = Str(string);\n    var tokens = string.match(gradrg);\n\n    if (!tokens) {\n      return null;\n    }\n\n    var type = tokens[1],\n        params = tokens[2],\n        stops = tokens[3];\n    params = params.split(/\\s*,\\s*/).map(function (el) {\n      return +el == el ? +el : el;\n    });\n\n    if (params.length == 1 && params[0] == 0) {\n      params = [];\n    }\n\n    stops = stops.split(\"-\");\n    stops = stops.map(function (el) {\n      el = el.split(\":\");\n      var out = {\n        color: el[0]\n      };\n\n      if (el[1]) {\n        out.offset = parseFloat(el[1]);\n      }\n\n      return out;\n    });\n    var len = stops.length,\n        start = 0,\n        j = 0;\n\n    function seed(i, end) {\n      var step = (end - start) / (i - j);\n\n      for (var k = j; k < i; k++) {\n        stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n      }\n\n      j = i;\n      start = end;\n    }\n\n    len--;\n\n    for (var i = 0; i < len; i++) {\n      if (\"offset\" in stops[i]) {\n        seed(i, stops[i].offset);\n      }\n    }\n\n    stops[len].offset = stops[len].offset || 100;\n    seed(len, stops[len].offset);\n    return {\n      type: type,\n      params: params,\n      stops: stops\n    };\n  });\n  eve.on(\"snap.util.attr.d\", function (value) {\n    eve.stop();\n\n    if (is(value, \"array\") && is(value[0], \"array\")) {\n      value = Snap.path.toString.call(value);\n    }\n\n    value = Str(value);\n\n    if (value.match(/[ruo]/i)) {\n      value = Snap.path.toAbsolute(value);\n    }\n\n    $(this.node, {\n      d: value\n    });\n  })(-1);\n  eve.on(\"snap.util.attr.#text\", function (value) {\n    eve.stop();\n    value = Str(value);\n    var txt = glob.doc.createTextNode(value);\n\n    while (this.node.firstChild) {\n      this.node.removeChild(this.node.firstChild);\n    }\n\n    this.node.appendChild(txt);\n  })(-1);\n  eve.on(\"snap.util.attr.path\", function (value) {\n    eve.stop();\n    this.attr({\n      d: value\n    });\n  })(-1);\n  eve.on(\"snap.util.attr.class\", function (value) {\n    eve.stop();\n    this.node.className.baseVal = value;\n  })(-1);\n  eve.on(\"snap.util.attr.viewBox\", function (value) {\n    var vb;\n\n    if (is(value, \"object\") && \"x\" in value) {\n      vb = [value.x, value.y, value.width, value.height].join(\" \");\n    } else if (is(value, \"array\")) {\n      vb = value.join(\" \");\n    } else {\n      vb = value;\n    }\n\n    $(this.node, {\n      viewBox: vb\n    });\n    eve.stop();\n  })(-1);\n  eve.on(\"snap.util.attr.transform\", function (value) {\n    this.transform(value);\n    eve.stop();\n  })(-1);\n  eve.on(\"snap.util.attr.r\", function (value) {\n    if (this.type == \"rect\") {\n      eve.stop();\n      $(this.node, {\n        rx: value,\n        ry: value\n      });\n    }\n  })(-1);\n  eve.on(\"snap.util.attr.textpath\", function (value) {\n    eve.stop();\n\n    if (this.type == \"text\") {\n      var id, tp, node;\n\n      if (!value && this.textPath) {\n        tp = this.textPath;\n\n        while (tp.node.firstChild) {\n          this.node.appendChild(tp.node.firstChild);\n        }\n\n        tp.remove();\n        delete this.textPath;\n        return;\n      }\n\n      if (is(value, \"string\")) {\n        var defs = getSomeDefs(this),\n            path = wrap(defs.parentNode).path(value);\n        defs.appendChild(path.node);\n        id = path.id;\n        path.attr({\n          id: id\n        });\n      } else {\n        value = wrap(value);\n\n        if (value instanceof Element) {\n          id = value.attr(\"id\");\n\n          if (!id) {\n            id = value.id;\n            value.attr({\n              id: id\n            });\n          }\n        }\n      }\n\n      if (id) {\n        tp = this.textPath;\n        node = this.node;\n\n        if (tp) {\n          tp.attr({\n            \"xlink:href\": \"#\" + id\n          });\n        } else {\n          tp = $(\"textPath\", {\n            \"xlink:href\": \"#\" + id\n          });\n\n          while (node.firstChild) {\n            tp.appendChild(node.firstChild);\n          }\n\n          node.appendChild(tp);\n          this.textPath = wrap(tp);\n        }\n      }\n    }\n  })(-1);\n  eve.on(\"snap.util.attr.text\", function (value) {\n    if (this.type == \"text\") {\n      var i = 0,\n          node = this.node,\n          tuner = function tuner(chunk) {\n        var out = $(\"tspan\");\n\n        if (is(chunk, \"array\")) {\n          for (var i = 0; i < chunk.length; i++) {\n            out.appendChild(tuner(chunk[i]));\n          }\n        } else {\n          out.appendChild(glob.doc.createTextNode(chunk));\n        }\n\n        out.normalize && out.normalize();\n        return out;\n      };\n\n      while (node.firstChild) {\n        node.removeChild(node.firstChild);\n      }\n\n      var tuned = tuner(value);\n\n      while (tuned.firstChild) {\n        node.appendChild(tuned.firstChild);\n      }\n    }\n\n    eve.stop();\n  })(-1);\n\n  function setFontSize(value) {\n    eve.stop();\n\n    if (value == +value) {\n      value += \"px\";\n    }\n\n    this.node.style.fontSize = value;\n  }\n\n  eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n  eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n  eve.on(\"snap.util.getattr.transform\", function () {\n    eve.stop();\n    return this.transform();\n  })(-1);\n  eve.on(\"snap.util.getattr.textpath\", function () {\n    eve.stop();\n    return this.textPath;\n  })(-1); // Markers\n\n  (function () {\n    function getter(end) {\n      return function () {\n        eve.stop();\n        var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n\n        if (style == \"none\") {\n          return style;\n        } else {\n          return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n        }\n      };\n    }\n\n    function setter(end) {\n      return function (value) {\n        eve.stop();\n        var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n\n        if (value == \"\" || !value) {\n          this.node.style[name] = \"none\";\n          return;\n        }\n\n        if (value.type == \"marker\") {\n          var id = value.node.id;\n\n          if (!id) {\n            $(value.node, {\n              id: value.id\n            });\n          }\n\n          this.node.style[name] = URL(id);\n          return;\n        }\n      };\n    }\n\n    eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n    eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n    eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n    eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n    eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n    eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n    eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n    eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n    eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n    eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n    eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n    eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n  })();\n\n  eve.on(\"snap.util.getattr.r\", function () {\n    if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n      eve.stop();\n      return $(this.node, \"rx\");\n    }\n  })(-1);\n\n  function textExtract(node) {\n    var out = [];\n    var children = node.childNodes;\n\n    for (var i = 0, ii = children.length; i < ii; i++) {\n      var chi = children[i];\n\n      if (chi.nodeType == 3) {\n        out.push(chi.nodeValue);\n      }\n\n      if (chi.tagName == \"tspan\") {\n        if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n          out.push(chi.firstChild.nodeValue);\n        } else {\n          out.push(textExtract(chi));\n        }\n      }\n    }\n\n    return out;\n  }\n\n  eve.on(\"snap.util.getattr.text\", function () {\n    if (this.type == \"text\" || this.type == \"tspan\") {\n      eve.stop();\n      var out = textExtract(this.node);\n      return out.length == 1 ? out[0] : out;\n    }\n  })(-1);\n  eve.on(\"snap.util.getattr.#text\", function () {\n    return this.node.textContent;\n  })(-1);\n  eve.on(\"snap.util.getattr.fill\", function (internal) {\n    if (internal) {\n      return;\n    }\n\n    eve.stop();\n    var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n    return Snap(Snap.deurl(value)) || value;\n  })(-1);\n  eve.on(\"snap.util.getattr.stroke\", function (internal) {\n    if (internal) {\n      return;\n    }\n\n    eve.stop();\n    var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n    return Snap(Snap.deurl(value)) || value;\n  })(-1);\n  eve.on(\"snap.util.getattr.viewBox\", function () {\n    eve.stop();\n    var vb = $(this.node, \"viewBox\");\n\n    if (vb) {\n      vb = vb.split(separator);\n      return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n    } else {\n      return;\n    }\n  })(-1);\n  eve.on(\"snap.util.getattr.points\", function () {\n    var p = $(this.node, \"points\");\n    eve.stop();\n\n    if (p) {\n      return p.split(separator);\n    } else {\n      return;\n    }\n  })(-1);\n  eve.on(\"snap.util.getattr.path\", function () {\n    var p = $(this.node, \"d\");\n    eve.stop();\n    return p;\n  })(-1);\n  eve.on(\"snap.util.getattr.class\", function () {\n    return this.node.className.baseVal;\n  })(-1);\n\n  function getFontSize() {\n    eve.stop();\n    return this.node.style.fontSize;\n  }\n\n  eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n  eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n}); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var rgNotSpace = /\\S+/g,\n      rgBadSpace = /[\\t\\r\\n\\f]/g,\n      rgTrim = /(^\\s+|\\s+$)/g,\n      Str = String,\n      elproto = Element.prototype;\n  /*\\\n   * Element.addClass\n   [ method ]\n   **\n   * Adds given class name or list of class names to the element.\n   - value (string) class name or space separated list of class names\n   **\n   = (Element) original element.\n  \\*/\n\n  elproto.addClass = function (value) {\n    var classes = Str(value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n\n    if (classes.length) {\n      j = 0;\n\n      while (clazz = classes[j++]) {\n        pos = curClasses.indexOf(clazz);\n\n        if (!~pos) {\n          curClasses.push(clazz);\n        }\n      }\n\n      finalValue = curClasses.join(\" \");\n\n      if (className != finalValue) {\n        elem.className.baseVal = finalValue;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.removeClass\n   [ method ]\n   **\n   * Removes given class name or list of class names from the element.\n   - value (string) class name or space separated list of class names\n   **\n   = (Element) original element.\n  \\*/\n\n\n  elproto.removeClass = function (value) {\n    var classes = Str(value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n\n    if (curClasses.length) {\n      j = 0;\n\n      while (clazz = classes[j++]) {\n        pos = curClasses.indexOf(clazz);\n\n        if (~pos) {\n          curClasses.splice(pos, 1);\n        }\n      }\n\n      finalValue = curClasses.join(\" \");\n\n      if (className != finalValue) {\n        elem.className.baseVal = finalValue;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.hasClass\n   [ method ]\n   **\n   * Checks if the element has a given class name in the list of class names applied to it.\n   - value (string) class name\n   **\n   = (boolean) `true` if the element has given class\n  \\*/\n\n\n  elproto.hasClass = function (value) {\n    var elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [];\n    return !!~curClasses.indexOf(value);\n  };\n  /*\\\n   * Element.toggleClass\n   [ method ]\n   **\n   * Add or remove one or more classes from the element, depending on either\n   * the class’s presence or the value of the `flag` argument.\n   - value (string) class name or space separated list of class names\n   - flag (boolean) value to determine whether the class should be added or removed\n   **\n   = (Element) original element.\n  \\*/\n\n\n  elproto.toggleClass = function (value, flag) {\n    if (flag != null) {\n      if (flag) {\n        return this.addClass(value);\n      } else {\n        return this.removeClass(value);\n      }\n    }\n\n    var classes = (value || \"\").match(rgNotSpace) || [],\n        elem = this.node,\n        className = elem.className.baseVal,\n        curClasses = className.match(rgNotSpace) || [],\n        j,\n        pos,\n        clazz,\n        finalValue;\n    j = 0;\n\n    while (clazz = classes[j++]) {\n      pos = curClasses.indexOf(clazz);\n\n      if (~pos) {\n        curClasses.splice(pos, 1);\n      } else {\n        curClasses.push(clazz);\n      }\n    }\n\n    finalValue = curClasses.join(\" \");\n\n    if (className != finalValue) {\n      elem.className.baseVal = finalValue;\n    }\n\n    return this;\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var operators = {\n    \"+\": function _(x, y) {\n      return x + y;\n    },\n    \"-\": function _(x, y) {\n      return x - y;\n    },\n    \"/\": function _(x, y) {\n      return x / y;\n    },\n    \"*\": function _(x, y) {\n      return x * y;\n    }\n  },\n      Str = String,\n      reUnit = /[a-z]+$/i,\n      reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n\n  function getNumber(val) {\n    return val;\n  }\n\n  function getUnit(unit) {\n    return function (val) {\n      return +val.toFixed(3) + unit;\n    };\n  }\n\n  eve.on(\"snap.util.attr\", function (val) {\n    var plus = Str(val).match(reAddon);\n\n    if (plus) {\n      var evnt = eve.nt(),\n          name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n          a = this.attr(name),\n          atr = {};\n      eve.stop();\n      var unit = plus[3] || \"\",\n          aUnit = a.match(reUnit),\n          op = operators[plus[1]];\n\n      if (aUnit && aUnit == unit) {\n        val = op(parseFloat(a), +plus[2]);\n      } else {\n        a = this.asPX(name);\n        val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n      }\n\n      if (isNaN(a) || isNaN(val)) {\n        return;\n      }\n\n      atr[name] = val;\n      this.attr(atr);\n    }\n  })(-10);\n  eve.on(\"snap.util.equal\", function (name, b) {\n    var A,\n        B,\n        a = Str(this.attr(name) || \"\"),\n        el = this,\n        bplus = Str(b).match(reAddon);\n\n    if (bplus) {\n      eve.stop();\n      var unit = bplus[3] || \"\",\n          aUnit = a.match(reUnit),\n          op = operators[bplus[1]];\n\n      if (aUnit && aUnit == unit) {\n        return {\n          from: parseFloat(a),\n          to: op(parseFloat(a), +bplus[2]),\n          f: getUnit(aUnit)\n        };\n      } else {\n        a = this.asPX(name);\n        return {\n          from: a,\n          to: op(a, this.asPX(name, bplus[2] + unit)),\n          f: getNumber\n        };\n      }\n    }\n  })(-10);\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var proto = Paper.prototype,\n      is = Snap.is;\n  /*\\\n   * Paper.rect\n   [ method ]\n   *\n   * Draws a rectangle\n   **\n   - x (number) x coordinate of the top left corner\n   - y (number) y coordinate of the top left corner\n   - width (number) width\n   - height (number) height\n   - rx (number) #optional horizontal radius for rounded corners, default is 0\n   - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n   = (object) the `rect` element\n   **\n   > Usage\n   | // regular rectangle\n   | var c = paper.rect(10, 10, 50, 50);\n   | // rectangle with rounded corners\n   | var c = paper.rect(40, 40, 50, 50, 10);\n  \\*/\n\n  proto.rect = function (x, y, w, h, rx, ry) {\n    var attr;\n\n    if (ry == null) {\n      ry = rx;\n    }\n\n    if (is(x, \"object\") && x == \"[object Object]\") {\n      attr = x;\n    } else if (x != null) {\n      attr = {\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      };\n\n      if (rx != null) {\n        attr.rx = rx;\n        attr.ry = ry;\n      }\n    }\n\n    return this.el(\"rect\", attr);\n  };\n  /*\\\n   * Paper.circle\n   [ method ]\n   **\n   * Draws a circle\n   **\n   - x (number) x coordinate of the centre\n   - y (number) y coordinate of the centre\n   - r (number) radius\n   = (object) the `circle` element\n   **\n   > Usage\n   | var c = paper.circle(50, 50, 40);\n  \\*/\n\n\n  proto.circle = function (cx, cy, r) {\n    var attr;\n\n    if (is(cx, \"object\") && cx == \"[object Object]\") {\n      attr = cx;\n    } else if (cx != null) {\n      attr = {\n        cx: cx,\n        cy: cy,\n        r: r\n      };\n    }\n\n    return this.el(\"circle\", attr);\n  };\n\n  var preload = function () {\n    function onerror() {\n      this.parentNode.removeChild(this);\n    }\n\n    return function (src, f) {\n      var img = glob.doc.createElement(\"img\"),\n          body = glob.doc.body;\n      img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\n      img.onload = function () {\n        f.call(img);\n        img.onload = img.onerror = null;\n        body.removeChild(img);\n      };\n\n      img.onerror = onerror;\n      body.appendChild(img);\n      img.src = src;\n    };\n  }();\n  /*\\\n   * Paper.image\n   [ method ]\n   **\n   * Places an image on the surface\n   **\n   - src (string) URI of the source image\n   - x (number) x offset position\n   - y (number) y offset position\n   - width (number) width of the image\n   - height (number) height of the image\n   = (object) the `image` element\n   * or\n   = (object) Snap element object with type `image`\n   **\n   > Usage\n   | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n  \\*/\n\n\n  proto.image = function (src, x, y, width, height) {\n    var el = this.el(\"image\");\n\n    if (is(src, \"object\") && \"src\" in src) {\n      el.attr(src);\n    } else if (src != null) {\n      var set = {\n        \"xlink:href\": src,\n        preserveAspectRatio: \"none\"\n      };\n\n      if (x != null && y != null) {\n        set.x = x;\n        set.y = y;\n      }\n\n      if (width != null && height != null) {\n        set.width = width;\n        set.height = height;\n      } else {\n        preload(src, function () {\n          Snap._.$(el.node, {\n            width: this.offsetWidth,\n            height: this.offsetHeight\n          });\n        });\n      }\n\n      Snap._.$(el.node, set);\n    }\n\n    return el;\n  };\n  /*\\\n   * Paper.ellipse\n   [ method ]\n   **\n   * Draws an ellipse\n   **\n   - x (number) x coordinate of the centre\n   - y (number) y coordinate of the centre\n   - rx (number) horizontal radius\n   - ry (number) vertical radius\n   = (object) the `ellipse` element\n   **\n   > Usage\n   | var c = paper.ellipse(50, 50, 40, 20);\n  \\*/\n\n\n  proto.ellipse = function (cx, cy, rx, ry) {\n    var attr;\n\n    if (is(cx, \"object\") && cx == \"[object Object]\") {\n      attr = cx;\n    } else if (cx != null) {\n      attr = {\n        cx: cx,\n        cy: cy,\n        rx: rx,\n        ry: ry\n      };\n    }\n\n    return this.el(\"ellipse\", attr);\n  }; // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n\n  /*\\\n   * Paper.path\n   [ method ]\n   **\n   * Creates a `<path>` element using the given string as the path's definition\n   - pathString (string) #optional path string in SVG format\n   * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n   | \"M10,20L30,40\"\n   * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n   *\n   # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n   # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n   # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n   # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n   # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n   # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n   # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n   # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n   # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n   # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n   # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n   # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n   # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n   * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n   * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n   > Usage\n   | var c = paper.path(\"M10 10L90 90\");\n   | // draw a diagonal line:\n   | // move to 10,10, line to 90,90\n  \\*/\n\n\n  proto.path = function (d) {\n    var attr;\n\n    if (is(d, \"object\") && !is(d, \"array\")) {\n      attr = d;\n    } else if (d) {\n      attr = {\n        d: d\n      };\n    }\n\n    return this.el(\"path\", attr);\n  };\n  /*\\\n   * Paper.g\n   [ method ]\n   **\n   * Creates a group element\n   **\n   - varargs (…) #optional elements to nest within the group\n   = (object) the `g` element\n   **\n   > Usage\n   | var c1 = paper.circle(),\n   |     c2 = paper.rect(),\n   |     g = paper.g(c2, c1); // note that the order of elements is different\n   * or\n   | var c1 = paper.circle(),\n   |     c2 = paper.rect(),\n   |     g = paper.g();\n   | g.add(c2, c1);\n  \\*/\n\n  /*\\\n   * Paper.group\n   [ method ]\n   **\n   * See @Paper.g\n  \\*/\n\n\n  proto.group = proto.g = function (first) {\n    var attr,\n        el = this.el(\"g\");\n\n    if (arguments.length == 1 && first && !first.type) {\n      el.attr(first);\n    } else if (arguments.length) {\n      el.add(Array.prototype.slice.call(arguments, 0));\n    }\n\n    return el;\n  };\n  /*\\\n   * Paper.svg\n   [ method ]\n   **\n   * Creates a nested SVG element.\n   - x (number) @optional X of the element\n   - y (number) @optional Y of the element\n   - width (number) @optional width of the element\n   - height (number) @optional height of the element\n   - vbx (number) @optional viewbox X\n   - vby (number) @optional viewbox Y\n   - vbw (number) @optional viewbox width\n   - vbh (number) @optional viewbox height\n   **\n   = (object) the `svg` element\n   **\n  \\*/\n\n\n  proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n    var attrs = {};\n\n    if (is(x, \"object\") && y == null) {\n      attrs = x;\n    } else {\n      if (x != null) {\n        attrs.x = x;\n      }\n\n      if (y != null) {\n        attrs.y = y;\n      }\n\n      if (width != null) {\n        attrs.width = width;\n      }\n\n      if (height != null) {\n        attrs.height = height;\n      }\n\n      if (vbx != null && vby != null && vbw != null && vbh != null) {\n        attrs.viewBox = [vbx, vby, vbw, vbh];\n      }\n    }\n\n    return this.el(\"svg\", attrs);\n  };\n  /*\\\n   * Paper.mask\n   [ method ]\n   **\n   * Equivalent in behaviour to @Paper.g, except it’s a mask.\n   **\n   = (object) the `mask` element\n   **\n  \\*/\n\n\n  proto.mask = function (first) {\n    var attr,\n        el = this.el(\"mask\");\n\n    if (arguments.length == 1 && first && !first.type) {\n      el.attr(first);\n    } else if (arguments.length) {\n      el.add(Array.prototype.slice.call(arguments, 0));\n    }\n\n    return el;\n  };\n  /*\\\n   * Paper.ptrn\n   [ method ]\n   **\n   * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n   - x (number) @optional X of the element\n   - y (number) @optional Y of the element\n   - width (number) @optional width of the element\n   - height (number) @optional height of the element\n   - vbx (number) @optional viewbox X\n   - vby (number) @optional viewbox Y\n   - vbw (number) @optional viewbox width\n   - vbh (number) @optional viewbox height\n   **\n   = (object) the `pattern` element\n   **\n  \\*/\n\n\n  proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n    if (is(x, \"object\")) {\n      var attr = x;\n    } else {\n      attr = {\n        patternUnits: \"userSpaceOnUse\"\n      };\n\n      if (x) {\n        attr.x = x;\n      }\n\n      if (y) {\n        attr.y = y;\n      }\n\n      if (width != null) {\n        attr.width = width;\n      }\n\n      if (height != null) {\n        attr.height = height;\n      }\n\n      if (vx != null && vy != null && vw != null && vh != null) {\n        attr.viewBox = [vx, vy, vw, vh];\n      } else {\n        attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n      }\n    }\n\n    return this.el(\"pattern\", attr);\n  };\n  /*\\\n   * Paper.use\n   [ method ]\n   **\n   * Creates a <use> element.\n   - id (string) @optional id of element to link\n   * or\n   - id (Element) @optional element to link\n   **\n   = (object) the `use` element\n   **\n  \\*/\n\n\n  proto.use = function (id) {\n    if (id != null) {\n      if (id instanceof Element) {\n        if (!id.attr(\"id\")) {\n          id.attr({\n            id: Snap._.id(id)\n          });\n        }\n\n        id = id.attr(\"id\");\n      }\n\n      if (String(id).charAt() == \"#\") {\n        id = id.substring(1);\n      }\n\n      return this.el(\"use\", {\n        \"xlink:href\": \"#\" + id\n      });\n    } else {\n      return Element.prototype.use.call(this);\n    }\n  };\n  /*\\\n   * Paper.symbol\n   [ method ]\n   **\n   * Creates a <symbol> element.\n   - vbx (number) @optional viewbox X\n   - vby (number) @optional viewbox Y\n   - vbw (number) @optional viewbox width\n   - vbh (number) @optional viewbox height\n   = (object) the `symbol` element\n   **\n  \\*/\n\n\n  proto.symbol = function (vx, vy, vw, vh) {\n    var attr = {};\n\n    if (vx != null && vy != null && vw != null && vh != null) {\n      attr.viewBox = [vx, vy, vw, vh];\n    }\n\n    return this.el(\"symbol\", attr);\n  };\n  /*\\\n   * Paper.text\n   [ method ]\n   **\n   * Draws a text string\n   **\n   - x (number) x coordinate position\n   - y (number) y coordinate position\n   - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n   = (object) the `text` element\n   **\n   > Usage\n   | var t1 = paper.text(50, 50, \"Snap\");\n   | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n   | // Text path usage\n   | t1.attr({textpath: \"M10,10L100,100\"});\n   | // or\n   | var pth = paper.path(\"M10,10L100,100\");\n   | t1.attr({textpath: pth});\n  \\*/\n\n\n  proto.text = function (x, y, text) {\n    var attr = {};\n\n    if (is(x, \"object\")) {\n      attr = x;\n    } else if (x != null) {\n      attr = {\n        x: x,\n        y: y,\n        text: text || \"\"\n      };\n    }\n\n    return this.el(\"text\", attr);\n  };\n  /*\\\n   * Paper.line\n   [ method ]\n   **\n   * Draws a line\n   **\n   - x1 (number) x coordinate position of the start\n   - y1 (number) y coordinate position of the start\n   - x2 (number) x coordinate position of the end\n   - y2 (number) y coordinate position of the end\n   = (object) the `line` element\n   **\n   > Usage\n   | var t1 = paper.line(50, 50, 100, 100);\n  \\*/\n\n\n  proto.line = function (x1, y1, x2, y2) {\n    var attr = {};\n\n    if (is(x1, \"object\")) {\n      attr = x1;\n    } else if (x1 != null) {\n      attr = {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    }\n\n    return this.el(\"line\", attr);\n  };\n  /*\\\n   * Paper.polyline\n   [ method ]\n   **\n   * Draws a polyline\n   **\n   - points (array) array of points\n   * or\n   - varargs (…) points\n   = (object) the `polyline` element\n   **\n   > Usage\n   | var p1 = paper.polyline([10, 10, 100, 100]);\n   | var p2 = paper.polyline(10, 10, 100, 100);\n  \\*/\n\n\n  proto.polyline = function (points) {\n    if (arguments.length > 1) {\n      points = Array.prototype.slice.call(arguments, 0);\n    }\n\n    var attr = {};\n\n    if (is(points, \"object\") && !is(points, \"array\")) {\n      attr = points;\n    } else if (points != null) {\n      attr = {\n        points: points\n      };\n    }\n\n    return this.el(\"polyline\", attr);\n  };\n  /*\\\n   * Paper.polygon\n   [ method ]\n   **\n   * Draws a polygon. See @Paper.polyline\n  \\*/\n\n\n  proto.polygon = function (points) {\n    if (arguments.length > 1) {\n      points = Array.prototype.slice.call(arguments, 0);\n    }\n\n    var attr = {};\n\n    if (is(points, \"object\") && !is(points, \"array\")) {\n      attr = points;\n    } else if (points != null) {\n      attr = {\n        points: points\n      };\n    }\n\n    return this.el(\"polygon\", attr);\n  }; // gradients\n\n\n  (function () {\n    var $ = Snap._.$; // gradients' helpers\n\n    /*\\\n     * Element.stops\n     [ method ]\n     **\n     * Only for gradients!\n     * Returns array of gradient stops elements.\n     = (array) the stops array.\n    \\*/\n\n    function Gstops() {\n      return this.selectAll(\"stop\");\n    }\n    /*\\\n     * Element.addStop\n     [ method ]\n     **\n     * Only for gradients!\n     * Adds another stop to the gradient.\n     - color (string) stops color\n     - offset (number) stops offset 0..100\n     = (object) gradient element\n    \\*/\n\n\n    function GaddStop(color, offset) {\n      var stop = $(\"stop\"),\n          attr = {\n        offset: +offset + \"%\"\n      };\n      color = Snap.color(color);\n      attr[\"stop-color\"] = color.hex;\n\n      if (color.opacity < 1) {\n        attr[\"stop-opacity\"] = color.opacity;\n      }\n\n      $(stop, attr);\n      var stops = this.stops(),\n          inserted;\n\n      for (var i = 0; i < stops.length; i++) {\n        var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n\n        if (stopOffset > offset) {\n          this.node.insertBefore(stop, stops[i].node);\n          inserted = true;\n          break;\n        }\n      }\n\n      if (!inserted) {\n        this.node.appendChild(stop);\n      }\n\n      return this;\n    }\n\n    function GgetBBox() {\n      if (this.type == \"linearGradient\") {\n        var x1 = $(this.node, \"x1\") || 0,\n            x2 = $(this.node, \"x2\") || 1,\n            y1 = $(this.node, \"y1\") || 0,\n            y2 = $(this.node, \"y2\") || 0;\n        return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n      } else {\n        var cx = this.node.cx || .5,\n            cy = this.node.cy || .5,\n            r = this.node.r || 0;\n        return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n      }\n    }\n    /*\\\n     * Element.setStops\n     [ method ]\n     **\n     * Only for gradients!\n     * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n     - str (string) gradient descriptor part after `()`.\n     = (object) gradient element\n     | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n     | g.setStops(\"#fff-#000-#f00-#fc0\");\n    \\*/\n\n\n    function GsetStops(str) {\n      var grad = str,\n          stops = this.stops();\n\n      if (typeof str == \"string\") {\n        grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n      }\n\n      if (!Snap.is(grad, \"array\")) {\n        return;\n      }\n\n      for (var i = 0; i < stops.length; i++) {\n        if (grad[i]) {\n          var color = Snap.color(grad[i].color),\n              attr = {\n            \"offset\": grad[i].offset + \"%\"\n          };\n          attr[\"stop-color\"] = color.hex;\n\n          if (color.opacity < 1) {\n            attr[\"stop-opacity\"] = color.opacity;\n          }\n\n          stops[i].attr(attr);\n        } else {\n          stops[i].remove();\n        }\n      }\n\n      for (i = stops.length; i < grad.length; i++) {\n        this.addStop(grad[i].color, grad[i].offset);\n      }\n\n      return this;\n    }\n\n    function gradient(defs, str) {\n      var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n          el;\n\n      if (!grad) {\n        return null;\n      }\n\n      grad.params.unshift(defs);\n\n      if (grad.type.toLowerCase() == \"l\") {\n        el = gradientLinear.apply(0, grad.params);\n      } else {\n        el = gradientRadial.apply(0, grad.params);\n      }\n\n      if (grad.type != grad.type.toLowerCase()) {\n        $(el.node, {\n          gradientUnits: \"userSpaceOnUse\"\n        });\n      }\n\n      var stops = grad.stops,\n          len = stops.length;\n\n      for (var i = 0; i < len; i++) {\n        var stop = stops[i];\n        el.addStop(stop.color, stop.offset);\n      }\n\n      return el;\n    }\n\n    function gradientLinear(defs, x1, y1, x2, y2) {\n      var el = Snap._.make(\"linearGradient\", defs);\n\n      el.stops = Gstops;\n      el.addStop = GaddStop;\n      el.getBBox = GgetBBox;\n      el.setStops = GsetStops;\n\n      if (x1 != null) {\n        $(el.node, {\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2\n        });\n      }\n\n      return el;\n    }\n\n    function gradientRadial(defs, cx, cy, r, fx, fy) {\n      var el = Snap._.make(\"radialGradient\", defs);\n\n      el.stops = Gstops;\n      el.addStop = GaddStop;\n      el.getBBox = GgetBBox;\n\n      if (cx != null) {\n        $(el.node, {\n          cx: cx,\n          cy: cy,\n          r: r\n        });\n      }\n\n      if (fx != null && fy != null) {\n        $(el.node, {\n          fx: fx,\n          fy: fy\n        });\n      }\n\n      return el;\n    }\n    /*\\\n     * Paper.gradient\n     [ method ]\n     **\n     * Creates a gradient element\n     **\n     - gradient (string) gradient descriptor\n     > Gradient Descriptor\n     * The gradient descriptor is an expression formatted as\n     * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n     * either linear or radial.  The uppercase `L` or `R` letters\n     * indicate absolute coordinates offset from the SVG surface.\n     * Lowercase `l` or `r` letters indicate coordinates\n     * calculated relative to the element to which the gradient is\n     * applied.  Coordinates specify a linear gradient vector as\n     * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n     * `r` and optional `fx`, `fy` specifying a focal point away\n     * from the center of the circle. Specify `<colors>` as a list\n     * of dash-separated CSS color values.  Each color may be\n     * followed by a custom offset value, separated with a colon\n     * character.\n     > Examples\n     * Linear gradient, relative from top-left corner to bottom-right\n     * corner, from black through red to white:\n     | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n     * Linear gradient, absolute from (0, 0) to (100, 100), from black\n     * through red at 25% to white:\n     | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n     * Radial gradient, relative from the center of the element with radius\n     * half the width, from black to white:\n     | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n     * To apply the gradient:\n     | paper.circle(50, 50, 40).attr({\n     |     fill: g\n     | });\n     = (object) the `gradient` element\n    \\*/\n\n\n    proto.gradient = function (str) {\n      return gradient(this.defs, str);\n    };\n\n    proto.gradientLinear = function (x1, y1, x2, y2) {\n      return gradientLinear(this.defs, x1, y1, x2, y2);\n    };\n\n    proto.gradientRadial = function (cx, cy, r, fx, fy) {\n      return gradientRadial(this.defs, cx, cy, r, fx, fy);\n    };\n    /*\\\n     * Paper.toString\n     [ method ]\n     **\n     * Returns SVG code for the @Paper\n     = (string) SVG code for the @Paper\n    \\*/\n\n\n    proto.toString = function () {\n      var doc = this.node.ownerDocument,\n          f = doc.createDocumentFragment(),\n          d = doc.createElement(\"div\"),\n          svg = this.node.cloneNode(true),\n          res;\n      f.appendChild(d);\n      d.appendChild(svg);\n\n      Snap._.$(svg, {\n        xmlns: \"http://www.w3.org/2000/svg\"\n      });\n\n      res = d.innerHTML;\n      f.removeChild(f.firstChild);\n      return res;\n    };\n    /*\\\n     * Paper.toDataURL\n     [ method ]\n     **\n     * Returns SVG code for the @Paper as Data URI string.\n     = (string) Data URI string\n    \\*/\n\n\n    proto.toDataURL = function () {\n      if (window && window.btoa) {\n        return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n      }\n    };\n    /*\\\n     * Paper.clear\n     [ method ]\n     **\n     * Removes all child nodes of the paper, except <defs>.\n    \\*/\n\n\n    proto.clear = function () {\n      var node = this.node.firstChild,\n          next;\n\n      while (node) {\n        next = node.nextSibling;\n\n        if (node.tagName != \"defs\") {\n          node.parentNode.removeChild(node);\n        } else {\n          proto.clear.call({\n            node: node\n          });\n        }\n\n        node = next;\n      }\n    };\n  })();\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var elproto = Element.prototype,\n      is = Snap.is,\n      clone = Snap._.clone,\n      has = \"hasOwnProperty\",\n      p2s = /,?([a-z]),?/gi,\n      toFloat = parseFloat,\n      math = Math,\n      PI = math.PI,\n      mmin = math.min,\n      mmax = math.max,\n      pow = math.pow,\n      abs = math.abs;\n\n  function paths(ps) {\n    var p = paths.ps = paths.ps || {};\n\n    if (p[ps]) {\n      p[ps].sleep = 100;\n    } else {\n      p[ps] = {\n        sleep: 100\n      };\n    }\n\n    setTimeout(function () {\n      for (var key in p) {\n        if (p[has](key) && key != ps) {\n          p[key].sleep--;\n          !p[key].sleep && delete p[key];\n        }\n      }\n    });\n    return p[ps];\n  }\n\n  function box(x, y, width, height) {\n    if (x == null) {\n      x = y = width = height = 0;\n    }\n\n    if (y == null) {\n      y = x.y;\n      width = x.width;\n      height = x.height;\n      x = x.x;\n    }\n\n    return {\n      x: x,\n      y: y,\n      width: width,\n      w: width,\n      height: height,\n      h: height,\n      x2: x + width,\n      y2: y + height,\n      cx: x + width / 2,\n      cy: y + height / 2,\n      r1: math.min(width, height) / 2,\n      r2: math.max(width, height) / 2,\n      r0: math.sqrt(width * width + height * height) / 2,\n      path: rectPath(x, y, width, height),\n      vb: [x, y, width, height].join(\" \")\n    };\n  }\n\n  function toString() {\n    return this.join(\",\").replace(p2s, \"$1\");\n  }\n\n  function pathClone(pathArray) {\n    var res = clone(pathArray);\n    res.toString = toString;\n    return res;\n  }\n\n  function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n    if (length == null) {\n      return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n    } else {\n      return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n    }\n  }\n\n  function getLengthFactory(istotal, subpath) {\n    function O(val) {\n      return +(+val).toFixed(3);\n    }\n\n    return Snap._.cacher(function (path, length, onlystart) {\n      if (path instanceof Element) {\n        path = path.attr(\"d\");\n      }\n\n      path = path2curve(path);\n      var x,\n          y,\n          p,\n          l,\n          sp = \"\",\n          subpaths = {},\n          point,\n          len = 0;\n\n      for (var i = 0, ii = path.length; i < ii; i++) {\n        p = path[i];\n\n        if (p[0] == \"M\") {\n          x = +p[1];\n          y = +p[2];\n        } else {\n          l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\n          if (len + l > length) {\n            if (subpath && !subpaths.start) {\n              point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n              sp += [\"C\" + O(point.start.x), O(point.start.y), O(point.m.x), O(point.m.y), O(point.x), O(point.y)];\n\n              if (onlystart) {\n                return sp;\n              }\n\n              subpaths.start = sp;\n              sp = [\"M\" + O(point.x), O(point.y) + \"C\" + O(point.n.x), O(point.n.y), O(point.end.x), O(point.end.y), O(p[5]), O(p[6])].join();\n              len += l;\n              x = +p[5];\n              y = +p[6];\n              continue;\n            }\n\n            if (!istotal && !subpath) {\n              point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n              return point;\n            }\n          }\n\n          len += l;\n          x = +p[5];\n          y = +p[6];\n        }\n\n        sp += p.shift() + p;\n      }\n\n      subpaths.end = sp;\n      point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n      return point;\n    }, null, Snap._.clone);\n  }\n\n  var getTotalLength = getLengthFactory(1),\n      getPointAtLength = getLengthFactory(),\n      getSubpathsAtLength = getLengthFactory(0, 1);\n\n  function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n    var t1 = 1 - t,\n        t13 = pow(t1, 3),\n        t12 = pow(t1, 2),\n        t2 = t * t,\n        t3 = t2 * t,\n        x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n        y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n        mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n        my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n        nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n        ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n        ax = t1 * p1x + t * c1x,\n        ay = t1 * p1y + t * c1y,\n        cx = t1 * c2x + t * p2x,\n        cy = t1 * c2y + t * p2y,\n        alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI; // (mx > nx || my < ny) && (alpha += 180);\n\n    return {\n      x: x,\n      y: y,\n      m: {\n        x: mx,\n        y: my\n      },\n      n: {\n        x: nx,\n        y: ny\n      },\n      start: {\n        x: ax,\n        y: ay\n      },\n      end: {\n        x: cx,\n        y: cy\n      },\n      alpha: alpha\n    };\n  }\n\n  function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n    if (!Snap.is(p1x, \"array\")) {\n      p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n    }\n\n    var bbox = curveDim.apply(null, p1x);\n    return box(bbox.min.x, bbox.min.y, bbox.max.x - bbox.min.x, bbox.max.y - bbox.min.y);\n  }\n\n  function isPointInsideBBox(bbox, x, y) {\n    return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n  }\n\n  function isBBoxIntersect(bbox1, bbox2) {\n    bbox1 = box(bbox1);\n    bbox2 = box(bbox2);\n    return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n  }\n\n  function base3(t, p1, p2, p3, p4) {\n    var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n        t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n    return t * t2 - 3 * p1 + 3 * p2;\n  }\n\n  function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n    if (z == null) {\n      z = 1;\n    }\n\n    z = z > 1 ? 1 : z < 0 ? 0 : z;\n    var z2 = z / 2,\n        n = 12,\n        Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816],\n        Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n        sum = 0;\n\n    for (var i = 0; i < n; i++) {\n      var ct = z2 * Tvalues[i] + z2,\n          xbase = base3(ct, x1, x2, x3, x4),\n          ybase = base3(ct, y1, y2, y3, y4),\n          comb = xbase * xbase + ybase * ybase;\n      sum += Cvalues[i] * math.sqrt(comb);\n    }\n\n    return z2 * sum;\n  }\n\n  function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n    if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n      return;\n    }\n\n    var t = 1,\n        step = t / 2,\n        t2 = t - step,\n        l,\n        e = .01;\n    l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\n    while (abs(l - ll) > e) {\n      step /= 2;\n      t2 += (l < ll ? 1 : -1) * step;\n      l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n    }\n\n    return t2;\n  }\n\n  function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n    if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {\n      return;\n    }\n\n    var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n        ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n        denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n    if (!denominator) {\n      return;\n    }\n\n    var px = nx / denominator,\n        py = ny / denominator,\n        px2 = +px.toFixed(2),\n        py2 = +py.toFixed(2);\n\n    if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {\n      return;\n    }\n\n    return {\n      x: px,\n      y: py\n    };\n  }\n\n  function inter(bez1, bez2) {\n    return interHelper(bez1, bez2);\n  }\n\n  function interCount(bez1, bez2) {\n    return interHelper(bez1, bez2, 1);\n  }\n\n  function interHelper(bez1, bez2, justCount) {\n    var bbox1 = bezierBBox(bez1),\n        bbox2 = bezierBBox(bez2);\n\n    if (!isBBoxIntersect(bbox1, bbox2)) {\n      return justCount ? 0 : [];\n    }\n\n    var l1 = bezlen.apply(0, bez1),\n        l2 = bezlen.apply(0, bez2),\n        n1 = ~~(l1 / 8),\n        n2 = ~~(l2 / 8),\n        dots1 = [],\n        dots2 = [],\n        xy = {},\n        res = justCount ? 0 : [];\n\n    for (var i = 0; i < n1 + 1; i++) {\n      var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n      dots1.push({\n        x: p.x,\n        y: p.y,\n        t: i / n1\n      });\n    }\n\n    for (i = 0; i < n2 + 1; i++) {\n      p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n      dots2.push({\n        x: p.x,\n        y: p.y,\n        t: i / n2\n      });\n    }\n\n    for (i = 0; i < n1; i++) {\n      for (var j = 0; j < n2; j++) {\n        var di = dots1[i],\n            di1 = dots1[i + 1],\n            dj = dots2[j],\n            dj1 = dots2[j + 1],\n            ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n            cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n            is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\n        if (is) {\n          if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n            continue;\n          }\n\n          xy[is.x.toFixed(4)] = is.y.toFixed(4);\n          var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n              t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\n          if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n            if (justCount) {\n              res++;\n            } else {\n              res.push({\n                x: is.x,\n                y: is.y,\n                t1: t1,\n                t2: t2\n              });\n            }\n          }\n        }\n      }\n    }\n\n    return res;\n  }\n\n  function pathIntersection(path1, path2) {\n    return interPathHelper(path1, path2);\n  }\n\n  function pathIntersectionNumber(path1, path2) {\n    return interPathHelper(path1, path2, 1);\n  }\n\n  function interPathHelper(path1, path2, justCount) {\n    path1 = path2curve(path1);\n    path2 = path2curve(path2);\n    var x1,\n        y1,\n        x2,\n        y2,\n        x1m,\n        y1m,\n        x2m,\n        y2m,\n        bez1,\n        bez2,\n        res = justCount ? 0 : [];\n\n    for (var i = 0, ii = path1.length; i < ii; i++) {\n      var pi = path1[i];\n\n      if (pi[0] == \"M\") {\n        x1 = x1m = pi[1];\n        y1 = y1m = pi[2];\n      } else {\n        if (pi[0] == \"C\") {\n          bez1 = [x1, y1].concat(pi.slice(1));\n          x1 = bez1[6];\n          y1 = bez1[7];\n        } else {\n          bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n          x1 = x1m;\n          y1 = y1m;\n        }\n\n        for (var j = 0, jj = path2.length; j < jj; j++) {\n          var pj = path2[j];\n\n          if (pj[0] == \"M\") {\n            x2 = x2m = pj[1];\n            y2 = y2m = pj[2];\n          } else {\n            if (pj[0] == \"C\") {\n              bez2 = [x2, y2].concat(pj.slice(1));\n              x2 = bez2[6];\n              y2 = bez2[7];\n            } else {\n              bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n              x2 = x2m;\n              y2 = y2m;\n            }\n\n            var intr = interHelper(bez1, bez2, justCount);\n\n            if (justCount) {\n              res += intr;\n            } else {\n              for (var k = 0, kk = intr.length; k < kk; k++) {\n                intr[k].segment1 = i;\n                intr[k].segment2 = j;\n                intr[k].bez1 = bez1;\n                intr[k].bez2 = bez2;\n              }\n\n              res = res.concat(intr);\n            }\n          }\n        }\n      }\n    }\n\n    return res;\n  }\n\n  function isPointInsidePath(path, x, y) {\n    var bbox = pathBBox(path);\n    return isPointInsideBBox(bbox, x, y) && interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n  }\n\n  function pathBBox(path) {\n    var pth = paths(path);\n\n    if (pth.bbox) {\n      return clone(pth.bbox);\n    }\n\n    if (!path) {\n      return box();\n    }\n\n    path = path2curve(path);\n    var x = 0,\n        y = 0,\n        X = [],\n        Y = [],\n        p;\n\n    for (var i = 0, ii = path.length; i < ii; i++) {\n      p = path[i];\n\n      if (p[0] == \"M\") {\n        x = p[1];\n        y = p[2];\n        X.push(x);\n        Y.push(y);\n      } else {\n        var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n        X = X.concat(dim.min.x, dim.max.x);\n        Y = Y.concat(dim.min.y, dim.max.y);\n        x = p[5];\n        y = p[6];\n      }\n    }\n\n    var xmin = mmin.apply(0, X),\n        ymin = mmin.apply(0, Y),\n        xmax = mmax.apply(0, X),\n        ymax = mmax.apply(0, Y),\n        bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n    pth.bbox = clone(bb);\n    return bb;\n  }\n\n  function rectPath(x, y, w, h, r) {\n    if (r) {\n      return [[\"M\", +x + +r, y], [\"l\", w - r * 2, 0], [\"a\", r, r, 0, 0, 1, r, r], [\"l\", 0, h - r * 2], [\"a\", r, r, 0, 0, 1, -r, r], [\"l\", r * 2 - w, 0], [\"a\", r, r, 0, 0, 1, -r, -r], [\"l\", 0, r * 2 - h], [\"a\", r, r, 0, 0, 1, r, -r], [\"z\"]];\n    }\n\n    var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n    res.toString = toString;\n    return res;\n  }\n\n  function ellipsePath(x, y, rx, ry, a) {\n    if (a == null && ry == null) {\n      ry = rx;\n    }\n\n    x = +x;\n    y = +y;\n    rx = +rx;\n    ry = +ry;\n\n    if (a != null) {\n      var rad = Math.PI / 180,\n          x1 = x + rx * Math.cos(-ry * rad),\n          x2 = x + rx * Math.cos(-a * rad),\n          y1 = y + rx * Math.sin(-ry * rad),\n          y2 = y + rx * Math.sin(-a * rad),\n          res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n    } else {\n      res = [[\"M\", x, y], [\"m\", 0, -ry], [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry], [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry], [\"z\"]];\n    }\n\n    res.toString = toString;\n    return res;\n  }\n\n  var unit2px = Snap._unit2px,\n      getPath = {\n    path: function path(el) {\n      return el.attr(\"path\");\n    },\n    circle: function circle(el) {\n      var attr = unit2px(el);\n      return ellipsePath(attr.cx, attr.cy, attr.r);\n    },\n    ellipse: function ellipse(el) {\n      var attr = unit2px(el);\n      return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n    },\n    rect: function rect(el) {\n      var attr = unit2px(el);\n      return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n    },\n    image: function image(el) {\n      var attr = unit2px(el);\n      return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n    },\n    line: function line(el) {\n      return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n    },\n    polyline: function polyline(el) {\n      return \"M\" + el.attr(\"points\");\n    },\n    polygon: function polygon(el) {\n      return \"M\" + el.attr(\"points\") + \"z\";\n    },\n    deflt: function deflt(el) {\n      var bbox = el.node.getBBox();\n      return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n    }\n  };\n\n  function pathToRelative(pathArray) {\n    var pth = paths(pathArray),\n        lowerCase = String.prototype.toLowerCase;\n\n    if (pth.rel) {\n      return pathClone(pth.rel);\n    }\n\n    if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n      pathArray = Snap.parsePathString(pathArray);\n    }\n\n    var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0;\n\n    if (pathArray[0][0] == \"M\") {\n      x = pathArray[0][1];\n      y = pathArray[0][2];\n      mx = x;\n      my = y;\n      start++;\n      res.push([\"M\", x, y]);\n    }\n\n    for (var i = start, ii = pathArray.length; i < ii; i++) {\n      var r = res[i] = [],\n          pa = pathArray[i];\n\n      if (pa[0] != lowerCase.call(pa[0])) {\n        r[0] = lowerCase.call(pa[0]);\n\n        switch (r[0]) {\n          case \"a\":\n            r[1] = pa[1];\n            r[2] = pa[2];\n            r[3] = pa[3];\n            r[4] = pa[4];\n            r[5] = pa[5];\n            r[6] = +(pa[6] - x).toFixed(3);\n            r[7] = +(pa[7] - y).toFixed(3);\n            break;\n\n          case \"v\":\n            r[1] = +(pa[1] - y).toFixed(3);\n            break;\n\n          case \"m\":\n            mx = pa[1];\n            my = pa[2];\n\n          default:\n            for (var j = 1, jj = pa.length; j < jj; j++) {\n              r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n            }\n\n        }\n      } else {\n        r = res[i] = [];\n\n        if (pa[0] == \"m\") {\n          mx = pa[1] + x;\n          my = pa[2] + y;\n        }\n\n        for (var k = 0, kk = pa.length; k < kk; k++) {\n          res[i][k] = pa[k];\n        }\n      }\n\n      var len = res[i].length;\n\n      switch (res[i][0]) {\n        case \"z\":\n          x = mx;\n          y = my;\n          break;\n\n        case \"h\":\n          x += +res[i][len - 1];\n          break;\n\n        case \"v\":\n          y += +res[i][len - 1];\n          break;\n\n        default:\n          x += +res[i][len - 2];\n          y += +res[i][len - 1];\n      }\n    }\n\n    res.toString = toString;\n    pth.rel = pathClone(res);\n    return res;\n  }\n\n  function pathToAbsolute(pathArray) {\n    var pth = paths(pathArray);\n\n    if (pth.abs) {\n      return pathClone(pth.abs);\n    }\n\n    if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) {\n      // rough assumption\n      pathArray = Snap.parsePathString(pathArray);\n    }\n\n    if (!pathArray || !pathArray.length) {\n      return [[\"M\", 0, 0]];\n    }\n\n    var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0,\n        pa0;\n\n    if (pathArray[0][0] == \"M\") {\n      x = +pathArray[0][1];\n      y = +pathArray[0][2];\n      mx = x;\n      my = y;\n      start++;\n      res[0] = [\"M\", x, y];\n    }\n\n    var crz = pathArray.length == 3 && pathArray[0][0] == \"M\" && pathArray[1][0].toUpperCase() == \"R\" && pathArray[2][0].toUpperCase() == \"Z\";\n\n    for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n      res.push(r = []);\n      pa = pathArray[i];\n      pa0 = pa[0];\n\n      if (pa0 != pa0.toUpperCase()) {\n        r[0] = pa0.toUpperCase();\n\n        switch (r[0]) {\n          case \"A\":\n            r[1] = pa[1];\n            r[2] = pa[2];\n            r[3] = pa[3];\n            r[4] = pa[4];\n            r[5] = pa[5];\n            r[6] = +pa[6] + x;\n            r[7] = +pa[7] + y;\n            break;\n\n          case \"V\":\n            r[1] = +pa[1] + y;\n            break;\n\n          case \"H\":\n            r[1] = +pa[1] + x;\n            break;\n\n          case \"R\":\n            var dots = [x, y].concat(pa.slice(1));\n\n            for (var j = 2, jj = dots.length; j < jj; j++) {\n              dots[j] = +dots[j] + x;\n              dots[++j] = +dots[j] + y;\n            }\n\n            res.pop();\n            res = res.concat(catmullRom2bezier(dots, crz));\n            break;\n\n          case \"O\":\n            res.pop();\n            dots = ellipsePath(x, y, pa[1], pa[2]);\n            dots.push(dots[0]);\n            res = res.concat(dots);\n            break;\n\n          case \"U\":\n            res.pop();\n            res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n            r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            break;\n\n          case \"M\":\n            mx = +pa[1] + x;\n            my = +pa[2] + y;\n\n          default:\n            for (j = 1, jj = pa.length; j < jj; j++) {\n              r[j] = +pa[j] + (j % 2 ? x : y);\n            }\n\n        }\n      } else if (pa0 == \"R\") {\n        dots = [x, y].concat(pa.slice(1));\n        res.pop();\n        res = res.concat(catmullRom2bezier(dots, crz));\n        r = [\"R\"].concat(pa.slice(-2));\n      } else if (pa0 == \"O\") {\n        res.pop();\n        dots = ellipsePath(x, y, pa[1], pa[2]);\n        dots.push(dots[0]);\n        res = res.concat(dots);\n      } else if (pa0 == \"U\") {\n        res.pop();\n        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n      } else {\n        for (var k = 0, kk = pa.length; k < kk; k++) {\n          r[k] = pa[k];\n        }\n      }\n\n      pa0 = pa0.toUpperCase();\n\n      if (pa0 != \"O\") {\n        switch (r[0]) {\n          case \"Z\":\n            x = +mx;\n            y = +my;\n            break;\n\n          case \"H\":\n            x = r[1];\n            break;\n\n          case \"V\":\n            y = r[1];\n            break;\n\n          case \"M\":\n            mx = r[r.length - 2];\n            my = r[r.length - 1];\n\n          default:\n            x = r[r.length - 2];\n            y = r[r.length - 1];\n        }\n      }\n    }\n\n    res.toString = toString;\n    pth.abs = pathClone(res);\n    return res;\n  }\n\n  function l2c(x1, y1, x2, y2) {\n    return [x1, y1, x2, y2, x2, y2];\n  }\n\n  function q2c(x1, y1, ax, ay, x2, y2) {\n    var _13 = 1 / 3,\n        _23 = 2 / 3;\n\n    return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n  }\n\n  function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n    // for more information of where this math came from visit:\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    var _120 = PI * 120 / 180,\n        rad = PI / 180 * (+angle || 0),\n        res = [],\n        xy,\n        rotate = Snap._.cacher(function (x, y, rad) {\n      var X = x * math.cos(rad) - y * math.sin(rad),\n          Y = x * math.sin(rad) + y * math.cos(rad);\n      return {\n        x: X,\n        y: Y\n      };\n    });\n\n    if (!rx || !ry) {\n      return [x1, y1, x2, y2, x2, y2];\n    }\n\n    if (!recursive) {\n      xy = rotate(x1, y1, -rad);\n      x1 = xy.x;\n      y1 = xy.y;\n      xy = rotate(x2, y2, -rad);\n      x2 = xy.x;\n      y2 = xy.y;\n      var cos = math.cos(PI / 180 * angle),\n          sin = math.sin(PI / 180 * angle),\n          x = (x1 - x2) / 2,\n          y = (y1 - y2) / 2;\n      var h = x * x / (rx * rx) + y * y / (ry * ry);\n\n      if (h > 1) {\n        h = math.sqrt(h);\n        rx = h * rx;\n        ry = h * ry;\n      }\n\n      var rx2 = rx * rx,\n          ry2 = ry * ry,\n          k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n          cx = k * rx * y / ry + (x1 + x2) / 2,\n          cy = k * -ry * x / rx + (y1 + y2) / 2,\n          f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n          f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n      f1 = x1 < cx ? PI - f1 : f1;\n      f2 = x2 < cx ? PI - f2 : f2;\n      f1 < 0 && (f1 = PI * 2 + f1);\n      f2 < 0 && (f2 = PI * 2 + f2);\n\n      if (sweep_flag && f1 > f2) {\n        f1 = f1 - PI * 2;\n      }\n\n      if (!sweep_flag && f2 > f1) {\n        f2 = f2 - PI * 2;\n      }\n    } else {\n      f1 = recursive[0];\n      f2 = recursive[1];\n      cx = recursive[2];\n      cy = recursive[3];\n    }\n\n    var df = f2 - f1;\n\n    if (abs(df) > _120) {\n      var f2old = f2,\n          x2old = x2,\n          y2old = y2;\n      f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n      x2 = cx + rx * math.cos(f2);\n      y2 = cy + ry * math.sin(f2);\n      res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n    }\n\n    df = f2 - f1;\n    var c1 = math.cos(f1),\n        s1 = math.sin(f1),\n        c2 = math.cos(f2),\n        s2 = math.sin(f2),\n        t = math.tan(df / 4),\n        hx = 4 / 3 * rx * t,\n        hy = 4 / 3 * ry * t,\n        m1 = [x1, y1],\n        m2 = [x1 + hx * s1, y1 - hy * c1],\n        m3 = [x2 + hx * s2, y2 - hy * c2],\n        m4 = [x2, y2];\n    m2[0] = 2 * m1[0] - m2[0];\n    m2[1] = 2 * m1[1] - m2[1];\n\n    if (recursive) {\n      return [m2, m3, m4].concat(res);\n    } else {\n      res = [m2, m3, m4].concat(res).join().split(\",\");\n      var newres = [];\n\n      for (var i = 0, ii = res.length; i < ii; i++) {\n        newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n      }\n\n      return newres;\n    }\n  }\n\n  function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n    var t1 = 1 - t;\n    return {\n      x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n      y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n    };\n  } // Returns bounding box of cubic bezier curve.\n  // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n  // Original version: NISHIO Hirokazu\n  // Modifications: https://github.com/timo22345\n\n\n  function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var tvalues = [],\n        bounds = [[], []],\n        a,\n        b,\n        c,\n        t,\n        t1,\n        t2,\n        b2ac,\n        sqrtb2ac;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i == 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = math.sqrt(b2ac);\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      t1 = (-b + sqrtb2ac) / (2 * a);\n\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n\n      t2 = (-b - sqrtb2ac) / (2 * a);\n\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x,\n        y,\n        j = tvalues.length,\n        jlen = j,\n        mt;\n\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n    return {\n      min: {\n        x: mmin.apply(0, bounds[0]),\n        y: mmin.apply(0, bounds[1])\n      },\n      max: {\n        x: mmax.apply(0, bounds[0]),\n        y: mmax.apply(0, bounds[1])\n      }\n    };\n  }\n\n  function path2curve(path, path2) {\n    var pth = !path2 && paths(path);\n\n    if (!path2 && pth.curve) {\n      return pathClone(pth.curve);\n    }\n\n    var p = pathToAbsolute(path),\n        p2 = path2 && pathToAbsolute(path2),\n        attrs = {\n      x: 0,\n      y: 0,\n      bx: 0,\n      by: 0,\n      X: 0,\n      Y: 0,\n      qx: null,\n      qy: null\n    },\n        attrs2 = {\n      x: 0,\n      y: 0,\n      bx: 0,\n      by: 0,\n      X: 0,\n      Y: 0,\n      qx: null,\n      qy: null\n    },\n        processPath = function processPath(path, d, pcom) {\n      var nx, ny;\n\n      if (!path) {\n        return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n      }\n\n      !(path[0] in {\n        T: 1,\n        Q: 1\n      }) && (d.qx = d.qy = null);\n\n      switch (path[0]) {\n        case \"M\":\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n\n        case \"A\":\n          path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n\n        case \"S\":\n          if (pcom == \"C\" || pcom == \"S\") {\n            // In \"S\" case we have to take into account, if the previous command is C/S.\n            nx = d.x * 2 - d.bx; // And reflect the previous\n\n            ny = d.y * 2 - d.by; // command's control point relative to the current point.\n          } else {\n            // or some else or nothing\n            nx = d.x;\n            ny = d.y;\n          }\n\n          path = [\"C\", nx, ny].concat(path.slice(1));\n          break;\n\n        case \"T\":\n          if (pcom == \"Q\" || pcom == \"T\") {\n            // In \"T\" case we have to take into account, if the previous command is Q/T.\n            d.qx = d.x * 2 - d.qx; // And make a reflection similar\n\n            d.qy = d.y * 2 - d.qy; // to case \"S\".\n          } else {\n            // or something else or nothing\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n\n          path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n\n        case \"Q\":\n          d.qx = path[1];\n          d.qy = path[2];\n          path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n          break;\n\n        case \"L\":\n          path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n          break;\n\n        case \"H\":\n          path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n          break;\n\n        case \"V\":\n          path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n          break;\n\n        case \"Z\":\n          path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n          break;\n      }\n\n      return path;\n    },\n        fixArc = function fixArc(pp, i) {\n      if (pp[i].length > 7) {\n        pp[i].shift();\n        var pi = pp[i];\n\n        while (pi.length) {\n          pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\n          p2 && (pcoms2[i] = \"A\"); // the same as above\n\n          pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n        }\n\n        pp.splice(i, 1);\n        ii = mmax(p.length, p2 && p2.length || 0);\n      }\n    },\n        fixM = function fixM(path1, path2, a1, a2, i) {\n      if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n        path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n        a1.bx = 0;\n        a1.by = 0;\n        a1.x = path1[i][1];\n        a1.y = path1[i][2];\n        ii = mmax(p.length, p2 && p2.length || 0);\n      }\n    },\n        pcoms1 = [],\n        // path commands of original path p\n    pcoms2 = [],\n        // path commands of original path p2\n    pfirst = \"\",\n        // temporary holder for original path command\n    pcom = \"\"; // holder for previous path command of original path\n\n\n    for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n      p[i] && (pfirst = p[i][0]); // save current path command\n\n      if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n        {\n          pcoms1[i] = pfirst; // Save current path command\n\n          i && (pcom = pcoms1[i - 1]); // Get previous path command pcom\n        }\n\n      p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n      if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n      // which may produce multiple C:s\n      // so we have to make sure that C is also C in original path\n\n      fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n      if (p2) {\n        // the same procedures is done to p2\n        p2[i] && (pfirst = p2[i][0]);\n\n        if (pfirst != \"C\") {\n          pcoms2[i] = pfirst;\n          i && (pcom = pcoms2[i - 1]);\n        }\n\n        p2[i] = processPath(p2[i], attrs2, pcom);\n\n        if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n          pcoms2[i] = \"C\";\n        }\n\n        fixArc(p2, i);\n      }\n\n      fixM(p, p2, attrs, attrs2, i);\n      fixM(p2, p, attrs2, attrs, i);\n      var seg = p[i],\n          seg2 = p2 && p2[i],\n          seglen = seg.length,\n          seg2len = p2 && seg2.length;\n      attrs.x = seg[seglen - 2];\n      attrs.y = seg[seglen - 1];\n      attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n      attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n      attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n      attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n      attrs2.x = p2 && seg2[seg2len - 2];\n      attrs2.y = p2 && seg2[seg2len - 1];\n    }\n\n    if (!p2) {\n      pth.curve = pathClone(p);\n    }\n\n    return p2 ? [p, p2] : p;\n  }\n\n  function mapPath(path, matrix) {\n    if (!matrix) {\n      return path;\n    }\n\n    var x, y, i, j, ii, jj, pathi;\n    path = path2curve(path);\n\n    for (i = 0, ii = path.length; i < ii; i++) {\n      pathi = path[i];\n\n      for (j = 1, jj = pathi.length; j < jj; j += 2) {\n        x = matrix.x(pathi[j], pathi[j + 1]);\n        y = matrix.y(pathi[j], pathi[j + 1]);\n        pathi[j] = x;\n        pathi[j + 1] = y;\n      }\n    }\n\n    return path;\n  } // http://schepers.cc/getting-to-the-point\n\n\n  function catmullRom2bezier(crp, z) {\n    var d = [];\n\n    for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n      var p = [{\n        x: +crp[i - 2],\n        y: +crp[i - 1]\n      }, {\n        x: +crp[i],\n        y: +crp[i + 1]\n      }, {\n        x: +crp[i + 2],\n        y: +crp[i + 3]\n      }, {\n        x: +crp[i + 4],\n        y: +crp[i + 5]\n      }];\n\n      if (z) {\n        if (!i) {\n          p[0] = {\n            x: +crp[iLen - 2],\n            y: +crp[iLen - 1]\n          };\n        } else if (iLen - 4 == i) {\n          p[3] = {\n            x: +crp[0],\n            y: +crp[1]\n          };\n        } else if (iLen - 2 == i) {\n          p[2] = {\n            x: +crp[0],\n            y: +crp[1]\n          };\n          p[3] = {\n            x: +crp[2],\n            y: +crp[3]\n          };\n        }\n      } else {\n        if (iLen - 4 == i) {\n          p[3] = p[2];\n        } else if (!i) {\n          p[0] = {\n            x: +crp[i],\n            y: +crp[i + 1]\n          };\n        }\n      }\n\n      d.push([\"C\", (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y]);\n    }\n\n    return d;\n  } // export\n\n\n  Snap.path = paths;\n  /*\\\n   * Snap.path.getTotalLength\n   [ method ]\n   **\n   * Returns the length of the given path in pixels\n   **\n   - path (string) SVG path string\n   **\n   = (number) length\n  \\*/\n\n  Snap.path.getTotalLength = getTotalLength;\n  /*\\\n   * Snap.path.getPointAtLength\n   [ method ]\n   **\n   * Returns the coordinates of the point located at the given length along the given path\n   **\n   - path (string) SVG path string\n   - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n   **\n   = (object) representation of the point:\n   o {\n   o     x: (number) x coordinate,\n   o     y: (number) y coordinate,\n   o     alpha: (number) angle of derivative\n   o }\n  \\*/\n\n  Snap.path.getPointAtLength = getPointAtLength;\n  /*\\\n   * Snap.path.getSubpath\n   [ method ]\n   **\n   * Returns the subpath of a given path between given start and end lengths\n   **\n   - path (string) SVG path string\n   - from (number) length, in pixels, from the start of the path to the start of the segment\n   - to (number) length, in pixels, from the start of the path to the end of the segment\n   **\n   = (string) path string definition for the segment\n  \\*/\n\n  Snap.path.getSubpath = function (path, from, to) {\n    if (this.getTotalLength(path) - to < 1e-6) {\n      return getSubpathsAtLength(path, from).end;\n    }\n\n    var a = getSubpathsAtLength(path, to, 1);\n    return from ? getSubpathsAtLength(a, from).end : a;\n  };\n  /*\\\n   * Element.getTotalLength\n   [ method ]\n   **\n   * Returns the length of the path in pixels (only works for `path` elements)\n   = (number) length\n  \\*/\n\n\n  elproto.getTotalLength = function () {\n    if (this.node.getTotalLength) {\n      return this.node.getTotalLength();\n    }\n  }; // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n\n  /*\\\n   * Element.getPointAtLength\n   [ method ]\n   **\n   * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n   **\n   - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n   **\n   = (object) representation of the point:\n   o {\n   o     x: (number) x coordinate,\n   o     y: (number) y coordinate,\n   o     alpha: (number) angle of derivative\n   o }\n  \\*/\n\n\n  elproto.getPointAtLength = function (length) {\n    return getPointAtLength(this.attr(\"d\"), length);\n  }; // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n\n  /*\\\n   * Element.getSubpath\n   [ method ]\n   **\n   * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n   **\n   - from (number) length, in pixels, from the start of the path to the start of the segment\n   - to (number) length, in pixels, from the start of the path to the end of the segment\n   **\n   = (string) path string definition for the segment\n  \\*/\n\n\n  elproto.getSubpath = function (from, to) {\n    return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n  };\n\n  Snap._.box = box;\n  /*\\\n   * Snap.path.findDotsAtSegment\n   [ method ]\n   **\n   * Utility method\n   **\n   * Finds dot coordinates on the given cubic beziér curve at the given t\n   - p1x (number) x of the first point of the curve\n   - p1y (number) y of the first point of the curve\n   - c1x (number) x of the first anchor of the curve\n   - c1y (number) y of the first anchor of the curve\n   - c2x (number) x of the second anchor of the curve\n   - c2y (number) y of the second anchor of the curve\n   - p2x (number) x of the second point of the curve\n   - p2y (number) y of the second point of the curve\n   - t (number) position on the curve (0..1)\n   = (object) point information in format:\n   o {\n   o     x: (number) x coordinate of the point,\n   o     y: (number) y coordinate of the point,\n   o     m: {\n   o         x: (number) x coordinate of the left anchor,\n   o         y: (number) y coordinate of the left anchor\n   o     },\n   o     n: {\n   o         x: (number) x coordinate of the right anchor,\n   o         y: (number) y coordinate of the right anchor\n   o     },\n   o     start: {\n   o         x: (number) x coordinate of the start of the curve,\n   o         y: (number) y coordinate of the start of the curve\n   o     },\n   o     end: {\n   o         x: (number) x coordinate of the end of the curve,\n   o         y: (number) y coordinate of the end of the curve\n   o     },\n   o     alpha: (number) angle of the curve derivative at the point\n   o }\n  \\*/\n\n  Snap.path.findDotsAtSegment = findDotsAtSegment;\n  /*\\\n   * Snap.path.bezierBBox\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns the bounding box of a given cubic beziér curve\n   - p1x (number) x of the first point of the curve\n   - p1y (number) y of the first point of the curve\n   - c1x (number) x of the first anchor of the curve\n   - c1y (number) y of the first anchor of the curve\n   - c2x (number) x of the second anchor of the curve\n   - c2y (number) y of the second anchor of the curve\n   - p2x (number) x of the second point of the curve\n   - p2y (number) y of the second point of the curve\n   * or\n   - bez (array) array of six points for beziér curve\n   = (object) bounding box\n   o {\n   o     x: (number) x coordinate of the left top point of the box,\n   o     y: (number) y coordinate of the left top point of the box,\n   o     x2: (number) x coordinate of the right bottom point of the box,\n   o     y2: (number) y coordinate of the right bottom point of the box,\n   o     width: (number) width of the box,\n   o     height: (number) height of the box\n   o }\n  \\*/\n\n  Snap.path.bezierBBox = bezierBBox;\n  /*\\\n   * Snap.path.isPointInsideBBox\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns `true` if given point is inside bounding box\n   - bbox (string) bounding box\n   - x (string) x coordinate of the point\n   - y (string) y coordinate of the point\n   = (boolean) `true` if point is inside\n  \\*/\n\n  Snap.path.isPointInsideBBox = isPointInsideBBox;\n\n  Snap.closest = function (x, y, X, Y) {\n    var r = 100,\n        b = box(x - r / 2, y - r / 2, r, r),\n        inside = [],\n        getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n      return {\n        x: X[i].x,\n        y: X[i].y\n      };\n    } : function (i) {\n      return {\n        x: X[i],\n        y: Y[i]\n      };\n    },\n        found = 0;\n\n    while (r <= 1e6 && !found) {\n      for (var i = 0, ii = X.length; i < ii; i++) {\n        var xy = getter(i);\n\n        if (isPointInsideBBox(b, xy.x, xy.y)) {\n          found++;\n          inside.push(xy);\n          break;\n        }\n      }\n\n      if (!found) {\n        r *= 2;\n        b = box(x - r / 2, y - r / 2, r, r);\n      }\n    }\n\n    if (r == 1e6) {\n      return;\n    }\n\n    var len = Infinity,\n        res;\n\n    for (i = 0, ii = inside.length; i < ii; i++) {\n      var l = Snap.len(x, y, inside[i].x, inside[i].y);\n\n      if (len > l) {\n        len = l;\n        inside[i].len = l;\n        res = inside[i];\n      }\n    }\n\n    return res;\n  };\n  /*\\\n   * Snap.path.isBBoxIntersect\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns `true` if two bounding boxes intersect\n   - bbox1 (string) first bounding box\n   - bbox2 (string) second bounding box\n   = (boolean) `true` if bounding boxes intersect\n  \\*/\n\n\n  Snap.path.isBBoxIntersect = isBBoxIntersect;\n  /*\\\n   * Snap.path.intersection\n   [ method ]\n   **\n   * Utility method\n   **\n   * Finds intersections of two paths\n   - path1 (string) path string\n   - path2 (string) path string\n   = (array) dots of intersection\n   o [\n   o     {\n   o         x: (number) x coordinate of the point,\n   o         y: (number) y coordinate of the point,\n   o         t1: (number) t value for segment of path1,\n   o         t2: (number) t value for segment of path2,\n   o         segment1: (number) order number for segment of path1,\n   o         segment2: (number) order number for segment of path2,\n   o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n   o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n   o     }\n   o ]\n  \\*/\n\n  Snap.path.intersection = pathIntersection;\n  Snap.path.intersectionNumber = pathIntersectionNumber;\n  /*\\\n   * Snap.path.isPointInside\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns `true` if given point is inside a given closed path.\n   *\n   * Note: fill mode doesn’t affect the result of this method.\n   - path (string) path string\n   - x (number) x of the point\n   - y (number) y of the point\n   = (boolean) `true` if point is inside the path\n  \\*/\n\n  Snap.path.isPointInside = isPointInsidePath;\n  /*\\\n   * Snap.path.getBBox\n   [ method ]\n   **\n   * Utility method\n   **\n   * Returns the bounding box of a given path\n   - path (string) path string\n   = (object) bounding box\n   o {\n   o     x: (number) x coordinate of the left top point of the box,\n   o     y: (number) y coordinate of the left top point of the box,\n   o     x2: (number) x coordinate of the right bottom point of the box,\n   o     y2: (number) y coordinate of the right bottom point of the box,\n   o     width: (number) width of the box,\n   o     height: (number) height of the box\n   o }\n  \\*/\n\n  Snap.path.getBBox = pathBBox;\n  Snap.path.get = getPath;\n  /*\\\n   * Snap.path.toRelative\n   [ method ]\n   **\n   * Utility method\n   **\n   * Converts path coordinates into relative values\n   - path (string) path string\n   = (array) path string\n  \\*/\n\n  Snap.path.toRelative = pathToRelative;\n  /*\\\n   * Snap.path.toAbsolute\n   [ method ]\n   **\n   * Utility method\n   **\n   * Converts path coordinates into absolute values\n   - path (string) path string\n   = (array) path string\n  \\*/\n\n  Snap.path.toAbsolute = pathToAbsolute;\n  /*\\\n   * Snap.path.toCubic\n   [ method ]\n   **\n   * Utility method\n   **\n   * Converts path to a new path where all segments are cubic beziér curves\n   - pathString (string|array) path string or array of segments\n   = (array) array of segments\n  \\*/\n\n  Snap.path.toCubic = path2curve;\n  /*\\\n   * Snap.path.map\n   [ method ]\n   **\n   * Transform the path string with the given matrix\n   - path (string) path string\n   - matrix (object) see @Matrix\n   = (string) transformed path string\n  \\*/\n\n  Snap.path.map = mapPath;\n  Snap.path.toString = toString;\n  Snap.path.clone = pathClone;\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var mmax = Math.max,\n      mmin = Math.min; // Set\n\n  var Set = function Set(items) {\n    this.items = [];\n    this.bindings = {};\n    this.length = 0;\n    this.type = \"set\";\n\n    if (items) {\n      for (var i = 0, ii = items.length; i < ii; i++) {\n        if (items[i]) {\n          this[this.items.length] = this.items[this.items.length] = items[i];\n          this.length++;\n        }\n      }\n    }\n  },\n      setproto = Set.prototype;\n  /*\\\n   * Set.push\n   [ method ]\n   **\n   * Adds each argument to the current set\n   = (object) original element\n  \\*/\n\n\n  setproto.push = function () {\n    var item, len;\n\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      item = arguments[i];\n\n      if (item) {\n        len = this.items.length;\n        this[len] = this.items[len] = item;\n        this.length++;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.pop\n   [ method ]\n   **\n   * Removes last element and returns it\n   = (object) element\n  \\*/\n\n\n  setproto.pop = function () {\n    this.length && delete this[this.length--];\n    return this.items.pop();\n  };\n  /*\\\n   * Set.forEach\n   [ method ]\n   **\n   * Executes given function for each element in the set\n   *\n   * If the function returns `false`, the loop stops running.\n   **\n   - callback (function) function to run\n   - thisArg (object) context object for the callback\n   = (object) Set object\n  \\*/\n\n\n  setproto.forEach = function (callback, thisArg) {\n    for (var i = 0, ii = this.items.length; i < ii; i++) {\n      if (callback.call(thisArg, this.items[i], i) === false) {\n        return this;\n      }\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.animate\n   [ method ]\n   **\n   * Animates each element in set in sync.\n   *\n   **\n   - attrs (object) key-value pairs of destination attributes\n   - duration (number) duration of the animation in milliseconds\n   - easing (function) #optional easing function from @mina or custom\n   - callback (function) #optional callback function that executes when the animation ends\n   * or\n   - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n   > Usage\n   | // animate all elements in set to radius 10\n   | set.animate({r: 10}, 500, mina.easein);\n   | // or\n   | // animate first element to radius 10, but second to radius 20 and in different time\n   | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n   = (Element) the current element\n  \\*/\n\n\n  setproto.animate = function (attrs, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    if (attrs instanceof Snap._.Animation) {\n      callback = attrs.callback;\n      easing = attrs.easing;\n      ms = easing.dur;\n      attrs = attrs.attr;\n    }\n\n    var args = arguments;\n\n    if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n      var each = true;\n    }\n\n    var begin,\n        handler = function handler() {\n      if (begin) {\n        this.b = begin;\n      } else {\n        begin = this.b;\n      }\n    },\n        cb = 0,\n        set = this,\n        callbacker = callback && function () {\n      if (++cb == set.length) {\n        callback.call(this);\n      }\n    };\n\n    return this.forEach(function (el, i) {\n      eve.once(\"snap.animcreated.\" + el.id, handler);\n\n      if (each) {\n        args[i] && el.animate.apply(el, args[i]);\n      } else {\n        el.animate(attrs, ms, easing, callbacker);\n      }\n    });\n  };\n  /*\\\n   * Set.remove\n   [ method ]\n   **\n   * Removes all children of the set.\n   *\n   = (object) Set object\n  \\*/\n\n\n  setproto.remove = function () {\n    while (this.length) {\n      this.pop().remove();\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.bind\n   [ method ]\n   **\n   * Specifies how to handle a specific attribute when applied\n   * to a set.\n   *\n   **\n   - attr (string) attribute name\n   - callback (function) function to run\n   * or\n   - attr (string) attribute name\n   - element (Element) specific element in the set to apply the attribute to\n   * or\n   - attr (string) attribute name\n   - element (Element) specific element in the set to apply the attribute to\n   - eattr (string) attribute on the element to bind the attribute to\n   = (object) Set object\n  \\*/\n\n\n  setproto.bind = function (attr, a, b) {\n    var data = {};\n\n    if (typeof a == \"function\") {\n      this.bindings[attr] = a;\n    } else {\n      var aname = b || attr;\n\n      this.bindings[attr] = function (v) {\n        data[aname] = v;\n        a.attr(data);\n      };\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.attr\n   [ method ]\n   **\n   * Equivalent of @Element.attr.\n   = (object) Set object\n  \\*/\n\n\n  setproto.attr = function (value) {\n    var unbound = {};\n\n    for (var k in value) {\n      if (this.bindings[k]) {\n        this.bindings[k](value[k]);\n      } else {\n        unbound[k] = value[k];\n      }\n    }\n\n    for (var i = 0, ii = this.items.length; i < ii; i++) {\n      this.items[i].attr(unbound);\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.clear\n   [ method ]\n   **\n   * Removes all elements from the set\n  \\*/\n\n\n  setproto.clear = function () {\n    while (this.length) {\n      this.pop();\n    }\n  };\n  /*\\\n   * Set.splice\n   [ method ]\n   **\n   * Removes range of elements from the set\n   **\n   - index (number) position of the deletion\n   - count (number) number of element to remove\n   - insertion… (object) #optional elements to insert\n   = (object) set elements that were deleted\n  \\*/\n\n\n  setproto.splice = function (index, count, insertion) {\n    index = index < 0 ? mmax(this.length + index, 0) : index;\n    count = mmax(0, mmin(this.length - index, count));\n    var tail = [],\n        todel = [],\n        args = [],\n        i;\n\n    for (i = 2; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    for (i = 0; i < count; i++) {\n      todel.push(this[index + i]);\n    }\n\n    for (; i < this.length - index; i++) {\n      tail.push(this[index + i]);\n    }\n\n    var arglen = args.length;\n\n    for (i = 0; i < arglen + tail.length; i++) {\n      this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n    }\n\n    i = this.items.length = this.length -= count - arglen;\n\n    while (this[i]) {\n      delete this[i++];\n    }\n\n    return new Set(todel);\n  };\n  /*\\\n   * Set.exclude\n   [ method ]\n   **\n   * Removes given element from the set\n   **\n   - element (object) element to remove\n   = (boolean) `true` if object was found and removed from the set\n  \\*/\n\n\n  setproto.exclude = function (el) {\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (this[i] == el) {\n        this.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /*\\\n   * Set.insertAfter\n   [ method ]\n   **\n   * Inserts set elements after given element.\n   **\n   - element (object) set will be inserted after this element\n   = (object) Set object\n  \\*/\n\n\n  setproto.insertAfter = function (el) {\n    var i = this.items.length;\n\n    while (i--) {\n      this.items[i].insertAfter(el);\n    }\n\n    return this;\n  };\n  /*\\\n   * Set.getBBox\n   [ method ]\n   **\n   * Union of all bboxes of the set. See @Element.getBBox.\n   = (object) bounding box descriptor. See @Element.getBBox.\n  \\*/\n\n\n  setproto.getBBox = function () {\n    var x = [],\n        y = [],\n        x2 = [],\n        y2 = [];\n\n    for (var i = this.items.length; i--;) {\n      if (!this.items[i].removed) {\n        var box = this.items[i].getBBox();\n        x.push(box.x);\n        y.push(box.y);\n        x2.push(box.x + box.width);\n        y2.push(box.y + box.height);\n      }\n    }\n\n    x = mmin.apply(0, x);\n    y = mmin.apply(0, y);\n    x2 = mmax.apply(0, x2);\n    y2 = mmax.apply(0, y2);\n    return {\n      x: x,\n      y: y,\n      x2: x2,\n      y2: y2,\n      width: x2 - x,\n      height: y2 - y,\n      cx: x + (x2 - x) / 2,\n      cy: y + (y2 - y) / 2\n    };\n  };\n  /*\\\n   * Set.insertAfter\n   [ method ]\n   **\n   * Creates a clone of the set.\n   **\n   = (object) New Set object\n  \\*/\n\n\n  setproto.clone = function (s) {\n    s = new Set();\n\n    for (var i = 0, ii = this.items.length; i < ii; i++) {\n      s.push(this.items[i].clone());\n    }\n\n    return s;\n  };\n\n  setproto.toString = function () {\n    return \"Snap\\u2018s set\";\n  };\n\n  setproto.type = \"set\"; // export\n\n  /*\\\n   * Snap.Set\n   [ property ]\n   **\n   * Set constructor.\n  \\*/\n\n  Snap.Set = Set;\n  /*\\\n   * Snap.set\n   [ method ]\n   **\n   * Creates a set and fills it with list of arguments.\n   **\n   = (object) New Set object\n   | var r = paper.rect(0, 0, 10, 10),\n   |     s1 = Snap.set(), // empty set\n   |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n  \\*/\n\n  Snap.set = function () {\n    var set = new Set();\n\n    if (arguments.length) {\n      set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n    }\n\n    return set;\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var names = {},\n      reUnit = /[%a-z]+$/i,\n      Str = String;\n  names.stroke = names.fill = \"colour\";\n\n  function getEmpty(item) {\n    var l = item[0];\n\n    switch (l.toLowerCase()) {\n      case \"t\":\n        return [l, 0, 0];\n\n      case \"m\":\n        return [l, 1, 0, 0, 1, 0, 0];\n\n      case \"r\":\n        if (item.length == 4) {\n          return [l, 0, item[2], item[3]];\n        } else {\n          return [l, 0];\n        }\n\n      case \"s\":\n        if (item.length == 5) {\n          return [l, 1, 1, item[3], item[4]];\n        } else if (item.length == 3) {\n          return [l, 1, 1];\n        } else {\n          return [l, 1];\n        }\n\n    }\n  }\n\n  function equaliseTransform(t1, t2, getBBox) {\n    t1 = t1 || new Snap.Matrix();\n    t2 = t2 || new Snap.Matrix();\n    t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n    t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n    var maxlength = Math.max(t1.length, t2.length),\n        from = [],\n        to = [],\n        i = 0,\n        j,\n        jj,\n        tt1,\n        tt2;\n\n    for (; i < maxlength; i++) {\n      tt1 = t1[i] || getEmpty(t2[i]);\n      tt2 = t2[i] || getEmpty(tt1);\n\n      if (tt1[0] != tt2[0] || tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) || tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])) {\n        t1 = Snap._.transform2matrix(t1, getBBox());\n        t2 = Snap._.transform2matrix(t2, getBBox());\n        from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n        to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n        break;\n      }\n\n      from[i] = [];\n      to[i] = [];\n\n      for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n        j in tt1 && (from[i][j] = tt1[j]);\n        j in tt2 && (to[i][j] = tt2[j]);\n      }\n    }\n\n    return {\n      from: path2array(from),\n      to: path2array(to),\n      f: getPath(from)\n    };\n  }\n\n  function getNumber(val) {\n    return val;\n  }\n\n  function getUnit(unit) {\n    return function (val) {\n      return +val.toFixed(3) + unit;\n    };\n  }\n\n  function getViewBox(val) {\n    return val.join(\" \");\n  }\n\n  function getColour(clr) {\n    return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n  }\n\n  function getPath(path) {\n    var k = 0,\n        i,\n        ii,\n        j,\n        jj,\n        out,\n        a,\n        b = [];\n\n    for (i = 0, ii = path.length; i < ii; i++) {\n      out = \"[\";\n      a = ['\"' + path[i][0] + '\"'];\n\n      for (j = 1, jj = path[i].length; j < jj; j++) {\n        a[j] = \"val[\" + k++ + \"]\";\n      }\n\n      out += a + \"]\";\n      b[i] = out;\n    }\n\n    return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n  }\n\n  function path2array(path) {\n    var out = [];\n\n    for (var i = 0, ii = path.length; i < ii; i++) {\n      for (var j = 1, jj = path[i].length; j < jj; j++) {\n        out.push(path[i][j]);\n      }\n    }\n\n    return out;\n  }\n\n  function isNumeric(obj) {\n    return isFinite(obj);\n  }\n\n  function arrayEqual(arr1, arr2) {\n    if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n      return false;\n    }\n\n    return arr1.toString() == arr2.toString();\n  }\n\n  Element.prototype.equal = function (name, b) {\n    return eve(\"snap.util.equal\", this, name, b).firstDefined();\n  };\n\n  eve.on(\"snap.util.equal\", function (name, b) {\n    var A,\n        B,\n        a = Str(this.attr(name) || \"\"),\n        el = this;\n\n    if (names[name] == \"colour\") {\n      A = Snap.color(a);\n      B = Snap.color(b);\n      return {\n        from: [A.r, A.g, A.b, A.opacity],\n        to: [B.r, B.g, B.b, B.opacity],\n        f: getColour\n      };\n    }\n\n    if (name == \"viewBox\") {\n      A = this.attr(name).vb.split(\" \").map(Number);\n      B = b.split(\" \").map(Number);\n      return {\n        from: A,\n        to: B,\n        f: getViewBox\n      };\n    }\n\n    if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n      if (typeof b == \"string\") {\n        b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n      }\n\n      a = this.matrix;\n\n      if (!Snap._.rgTransform.test(b)) {\n        b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n      } else {\n        b = Snap._.transform2matrix(b, this.getBBox());\n      }\n\n      return equaliseTransform(a, b, function () {\n        return el.getBBox(1);\n      });\n    }\n\n    if (name == \"d\" || name == \"path\") {\n      A = Snap.path.toCubic(a, b);\n      return {\n        from: path2array(A[0]),\n        to: path2array(A[1]),\n        f: getPath(A[0])\n      };\n    }\n\n    if (name == \"points\") {\n      A = Str(a).split(Snap._.separator);\n      B = Str(b).split(Snap._.separator);\n      return {\n        from: A,\n        to: B,\n        f: function f(val) {\n          return val;\n        }\n      };\n    }\n\n    if (isNumeric(a) && isNumeric(b)) {\n      return {\n        from: parseFloat(a),\n        to: parseFloat(b),\n        f: getNumber\n      };\n    }\n\n    var aUnit = a.match(reUnit),\n        bUnit = Str(b).match(reUnit);\n\n    if (aUnit && arrayEqual(aUnit, bUnit)) {\n      return {\n        from: parseFloat(a),\n        to: parseFloat(b),\n        f: getUnit(aUnit)\n      };\n    } else {\n      return {\n        from: this.asPX(name),\n        to: this.asPX(name, b),\n        f: getNumber\n      };\n    }\n  });\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var elproto = Element.prototype,\n      has = \"hasOwnProperty\",\n      supportsTouch = \"createTouch\" in glob.doc,\n      events = [\"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"],\n      touchMap = {\n    mousedown: \"touchstart\",\n    mousemove: \"touchmove\",\n    mouseup: \"touchend\"\n  },\n      getScroll = function getScroll(xy, el) {\n    var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n        doc = el && el.node ? el.node.ownerDocument : glob.doc;\n    return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n  },\n      preventDefault = function preventDefault() {\n    this.returnValue = false;\n  },\n      preventTouch = function preventTouch() {\n    return this.originalEvent.preventDefault();\n  },\n      stopPropagation = function stopPropagation() {\n    this.cancelBubble = true;\n  },\n      stopTouch = function stopTouch() {\n    return this.originalEvent.stopPropagation();\n  },\n      addEvent = function addEvent(obj, type, fn, element) {\n    var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n        f = function f(e) {\n      var scrollY = getScroll(\"y\", element),\n          scrollX = getScroll(\"x\", element);\n\n      if (supportsTouch && touchMap[has](type)) {\n        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n          if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n            var olde = e;\n            e = e.targetTouches[i];\n            e.originalEvent = olde;\n            e.preventDefault = preventTouch;\n            e.stopPropagation = stopTouch;\n            break;\n          }\n        }\n      }\n\n      var x = e.clientX + scrollX,\n          y = e.clientY + scrollY;\n      return fn.call(element, e, x, y);\n    };\n\n    if (type !== realName) {\n      obj.addEventListener(type, f, false);\n    }\n\n    obj.addEventListener(realName, f, false);\n    return function () {\n      if (type !== realName) {\n        obj.removeEventListener(type, f, false);\n      }\n\n      obj.removeEventListener(realName, f, false);\n      return true;\n    };\n  },\n      drag = [],\n      dragMove = function dragMove(e) {\n    var x = e.clientX,\n        y = e.clientY,\n        scrollY = getScroll(\"y\"),\n        scrollX = getScroll(\"x\"),\n        dragi,\n        j = drag.length;\n\n    while (j--) {\n      dragi = drag[j];\n\n      if (supportsTouch) {\n        var i = e.touches && e.touches.length,\n            touch;\n\n        while (i--) {\n          touch = e.touches[i];\n\n          if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n            x = touch.clientX;\n            y = touch.clientY;\n            (e.originalEvent ? e.originalEvent : e).preventDefault();\n            break;\n          }\n        }\n      } else {\n        e.preventDefault();\n      }\n\n      var node = dragi.el.node,\n          o,\n          next = node.nextSibling,\n          parent = node.parentNode,\n          display = node.style.display; // glob.win.opera && parent.removeChild(node);\n      // node.style.display = \"none\";\n      // o = dragi.el.paper.getElementByPoint(x, y);\n      // node.style.display = display;\n      // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n      // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n\n      x += scrollX;\n      y += scrollY;\n      eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n    }\n  },\n      dragUp = function dragUp(e) {\n    Snap.unmousemove(dragMove).unmouseup(dragUp);\n    var i = drag.length,\n        dragi;\n\n    while (i--) {\n      dragi = drag[i];\n      dragi.el._drag = {};\n      eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n      eve.off(\"snap.drag.*.\" + dragi.el.id);\n    }\n\n    drag = [];\n  };\n  /*\\\n   * Element.click\n   [ method ]\n   **\n   * Adds a click event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unclick\n   [ method ]\n   **\n   * Removes a click event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.dblclick\n   [ method ]\n   **\n   * Adds a double click event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.undblclick\n   [ method ]\n   **\n   * Removes a double click event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mousedown\n   [ method ]\n   **\n   * Adds a mousedown event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmousedown\n   [ method ]\n   **\n   * Removes a mousedown event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mousemove\n   [ method ]\n   **\n   * Adds a mousemove event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmousemove\n   [ method ]\n   **\n   * Removes a mousemove event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mouseout\n   [ method ]\n   **\n   * Adds a mouseout event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmouseout\n   [ method ]\n   **\n   * Removes a mouseout event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mouseover\n   [ method ]\n   **\n   * Adds a mouseover event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmouseover\n   [ method ]\n   **\n   * Removes a mouseover event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.mouseup\n   [ method ]\n   **\n   * Adds a mouseup event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.unmouseup\n   [ method ]\n   **\n   * Removes a mouseup event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchstart\n   [ method ]\n   **\n   * Adds a touchstart event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchstart\n   [ method ]\n   **\n   * Removes a touchstart event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchmove\n   [ method ]\n   **\n   * Adds a touchmove event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchmove\n   [ method ]\n   **\n   * Removes a touchmove event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchend\n   [ method ]\n   **\n   * Adds a touchend event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchend\n   [ method ]\n   **\n   * Removes a touchend event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.touchcancel\n   [ method ]\n   **\n   * Adds a touchcancel event handler to the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n  /*\\\n   * Element.untouchcancel\n   [ method ]\n   **\n   * Removes a touchcancel event handler from the element\n   - handler (function) handler for the event\n   = (object) @Element\n  \\*/\n\n\n  for (var i = events.length; i--;) {\n    (function (eventName) {\n      Snap[eventName] = elproto[eventName] = function (fn, scope) {\n        if (Snap.is(fn, \"function\")) {\n          this.events = this.events || [];\n          this.events.push({\n            name: eventName,\n            f: fn,\n            unbind: addEvent(this.node || document, eventName, fn, scope || this)\n          });\n        } else {\n          for (var i = 0, ii = this.events.length; i < ii; i++) {\n            if (this.events[i].name == eventName) {\n              try {\n                this.events[i].f.call(this);\n              } catch (e) {}\n            }\n          }\n        }\n\n        return this;\n      };\n\n      Snap[\"un\" + eventName] = elproto[\"un\" + eventName] = function (fn) {\n        var events = this.events || [],\n            l = events.length;\n\n        while (l--) {\n          if (events[l].name == eventName && (events[l].f == fn || !fn)) {\n            events[l].unbind();\n            events.splice(l, 1);\n            !events.length && delete this.events;\n            return this;\n          }\n        }\n\n        return this;\n      };\n    })(events[i]);\n  }\n  /*\\\n   * Element.hover\n   [ method ]\n   **\n   * Adds hover event handlers to the element\n   - f_in (function) handler for hover in\n   - f_out (function) handler for hover out\n   - icontext (object) #optional context for hover in handler\n   - ocontext (object) #optional context for hover out handler\n   = (object) @Element\n  \\*/\n\n\n  elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n    return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n  };\n  /*\\\n   * Element.unhover\n   [ method ]\n   **\n   * Removes hover event handlers from the element\n   - f_in (function) handler for hover in\n   - f_out (function) handler for hover out\n   = (object) @Element\n  \\*/\n\n\n  elproto.unhover = function (f_in, f_out) {\n    return this.unmouseover(f_in).unmouseout(f_out);\n  };\n\n  var draggable = []; // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n  // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n  // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n  // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n\n  /*\\\n   * Element.drag\n   [ method ]\n   **\n   * Adds event handlers for an element's drag gesture\n   **\n   - onmove (function) handler for moving\n   - onstart (function) handler for drag start\n   - onend (function) handler for drag end\n   - mcontext (object) #optional context for moving handler\n   - scontext (object) #optional context for drag start handler\n   - econtext (object) #optional context for drag end handler\n   * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n   * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n   * `drag.over.<id>` fires as well.\n   *\n   * Start event and start handler are called in specified context or in context of the element with following parameters:\n   o x (number) x position of the mouse\n   o y (number) y position of the mouse\n   o event (object) DOM event object\n   * Move event and move handler are called in specified context or in context of the element with following parameters:\n   o dx (number) shift by x from the start point\n   o dy (number) shift by y from the start point\n   o x (number) x position of the mouse\n   o y (number) y position of the mouse\n   o event (object) DOM event object\n   * End event and end handler are called in specified context or in context of the element with following parameters:\n   o event (object) DOM event object\n   = (object) @Element\n  \\*/\n\n  elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n    var el = this;\n\n    if (!arguments.length) {\n      var origTransform;\n      return el.drag(function (dx, dy) {\n        this.attr({\n          transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n        });\n      }, function () {\n        origTransform = this.transform().local;\n      });\n    }\n\n    function start(e, x, y) {\n      (e.originalEvent || e).preventDefault();\n      el._drag.x = x;\n      el._drag.y = y;\n      el._drag.id = e.identifier;\n      !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n      drag.push({\n        el: el,\n        move_scope: move_scope,\n        start_scope: start_scope,\n        end_scope: end_scope\n      });\n      onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n      onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n      onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n      eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n    }\n\n    function init(e, x, y) {\n      eve(\"snap.draginit.\" + el.id, el, e, x, y);\n    }\n\n    eve.on(\"snap.draginit.\" + el.id, start);\n    el._drag = {};\n    draggable.push({\n      el: el,\n      start: start,\n      init: init\n    });\n    el.mousedown(init);\n    return el;\n  };\n  /*\n   * Element.onDragOver\n   [ method ]\n   **\n   * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n   - f (function) handler for event, first argument would be the element you are dragging over\n  \\*/\n  // elproto.onDragOver = function (f) {\n  //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n  // };\n\n  /*\\\n   * Element.undrag\n   [ method ]\n   **\n   * Removes all drag event handlers from the given element\n  \\*/\n\n\n  elproto.undrag = function () {\n    var i = draggable.length;\n\n    while (i--) {\n      if (draggable[i].el == this) {\n        this.unmousedown(draggable[i].init);\n        draggable.splice(i, 1);\n        eve.unbind(\"snap.drag.*.\" + this.id);\n        eve.unbind(\"snap.draginit.\" + this.id);\n      }\n    }\n\n    !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n    return this;\n  };\n}); // Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  var elproto = Element.prototype,\n      pproto = Paper.prototype,\n      rgurl = /^\\s*url\\((.+)\\)/,\n      Str = String,\n      $ = Snap._.$;\n  Snap.filter = {};\n  /*\\\n   * Paper.filter\n   [ method ]\n   **\n   * Creates a `<filter>` element\n   **\n   - filstr (string) SVG fragment of filter provided as a string\n   = (object) @Element\n   * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n   > Usage\n   | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n   |     c = paper.circle(10, 10, 10).attr({\n   |         filter: f\n   |     });\n  \\*/\n\n  pproto.filter = function (filstr) {\n    var paper = this;\n\n    if (paper.type != \"svg\") {\n      paper = paper.paper;\n    }\n\n    var f = Snap.parse(Str(filstr)),\n        id = Snap._.id(),\n        width = paper.node.offsetWidth,\n        height = paper.node.offsetHeight,\n        filter = $(\"filter\");\n\n    $(filter, {\n      id: id,\n      filterUnits: \"userSpaceOnUse\"\n    });\n    filter.appendChild(f.node);\n    paper.defs.appendChild(filter);\n    return new Element(filter);\n  };\n\n  eve.on(\"snap.util.getattr.filter\", function () {\n    eve.stop();\n    var p = $(this.node, \"filter\");\n\n    if (p) {\n      var match = Str(p).match(rgurl);\n      return match && Snap.select(match[1]);\n    }\n  });\n  eve.on(\"snap.util.attr.filter\", function (value) {\n    if (value instanceof Element && value.type == \"filter\") {\n      eve.stop();\n      var id = value.node.id;\n\n      if (!id) {\n        $(value.node, {\n          id: value.id\n        });\n        id = value.id;\n      }\n\n      $(this.node, {\n        filter: Snap.url(id)\n      });\n    }\n\n    if (!value || value == \"none\") {\n      eve.stop();\n      this.node.removeAttribute(\"filter\");\n    }\n  });\n  /*\\\n   * Snap.filter.blur\n   [ method ]\n   **\n   * Returns an SVG markup string for the blur filter\n   **\n   - x (number) amount of horizontal blur, in pixels\n   - y (number) #optional amount of vertical blur, in pixels\n   = (string) filter representation\n   > Usage\n   | var f = paper.filter(Snap.filter.blur(5, 10)),\n   |     c = paper.circle(10, 10, 10).attr({\n   |         filter: f\n   |     });\n  \\*/\n\n  Snap.filter.blur = function (x, y) {\n    if (x == null) {\n      x = 2;\n    }\n\n    var def = y == null ? x : [x, y];\n    return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n      def: def\n    });\n  };\n\n  Snap.filter.blur.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.shadow\n   [ method ]\n   **\n   * Returns an SVG markup string for the shadow filter\n   **\n   - dx (number) #optional horizontal shift of the shadow, in pixels\n   - dy (number) #optional vertical shift of the shadow, in pixels\n   - blur (number) #optional amount of blur\n   - color (string) #optional color of the shadow\n   - opacity (number) #optional `0..1` opacity of the shadow\n   * or\n   - dx (number) #optional horizontal shift of the shadow, in pixels\n   - dy (number) #optional vertical shift of the shadow, in pixels\n   - color (string) #optional color of the shadow\n   - opacity (number) #optional `0..1` opacity of the shadow\n   * which makes blur default to `4`. Or\n   - dx (number) #optional horizontal shift of the shadow, in pixels\n   - dy (number) #optional vertical shift of the shadow, in pixels\n   - opacity (number) #optional `0..1` opacity of the shadow\n   = (string) filter representation\n   > Usage\n   | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n   |     c = paper.circle(10, 10, 10).attr({\n   |         filter: f\n   |     });\n  \\*/\n\n\n  Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n    if (opacity == null) {\n      if (color == null) {\n        opacity = blur;\n        blur = 4;\n        color = \"#000\";\n      } else {\n        opacity = color;\n        color = blur;\n        blur = 4;\n      }\n    }\n\n    if (blur == null) {\n      blur = 4;\n    }\n\n    if (opacity == null) {\n      opacity = 1;\n    }\n\n    if (dx == null) {\n      dx = 0;\n      dy = 2;\n    }\n\n    if (dy == null) {\n      dy = dx;\n    }\n\n    color = Snap.color(color);\n    return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n      color: color,\n      dx: dx,\n      dy: dy,\n      blur: blur,\n      opacity: opacity\n    });\n  };\n\n  Snap.filter.shadow.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.grayscale\n   [ method ]\n   **\n   * Returns an SVG markup string for the grayscale filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.grayscale = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n      a: 0.2126 + 0.7874 * (1 - amount),\n      b: 0.7152 - 0.7152 * (1 - amount),\n      c: 0.0722 - 0.0722 * (1 - amount),\n      d: 0.2126 - 0.2126 * (1 - amount),\n      e: 0.7152 + 0.2848 * (1 - amount),\n      f: 0.0722 - 0.0722 * (1 - amount),\n      g: 0.2126 - 0.2126 * (1 - amount),\n      h: 0.0722 + 0.9278 * (1 - amount)\n    });\n  };\n\n  Snap.filter.grayscale.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.sepia\n   [ method ]\n   **\n   * Returns an SVG markup string for the sepia filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.sepia = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n      a: 0.393 + 0.607 * (1 - amount),\n      b: 0.769 - 0.769 * (1 - amount),\n      c: 0.189 - 0.189 * (1 - amount),\n      d: 0.349 - 0.349 * (1 - amount),\n      e: 0.686 + 0.314 * (1 - amount),\n      f: 0.168 - 0.168 * (1 - amount),\n      g: 0.272 - 0.272 * (1 - amount),\n      h: 0.534 - 0.534 * (1 - amount),\n      i: 0.131 + 0.869 * (1 - amount)\n    });\n  };\n\n  Snap.filter.sepia.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.saturate\n   [ method ]\n   **\n   * Returns an SVG markup string for the saturate filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.saturate = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n      amount: 1 - amount\n    });\n  };\n\n  Snap.filter.saturate.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.hueRotate\n   [ method ]\n   **\n   * Returns an SVG markup string for the hue-rotate filter\n   **\n   - angle (number) angle of rotation\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.hueRotate = function (angle) {\n    angle = angle || 0;\n    return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n      angle: angle\n    });\n  };\n\n  Snap.filter.hueRotate.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.invert\n   [ method ]\n   **\n   * Returns an SVG markup string for the invert filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.invert = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    } //        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n\n\n    return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n      amount: amount,\n      amount2: 1 - amount\n    });\n  };\n\n  Snap.filter.invert.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.brightness\n   [ method ]\n   **\n   * Returns an SVG markup string for the brightness filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.brightness = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n      amount: amount\n    });\n  };\n\n  Snap.filter.brightness.toString = function () {\n    return this();\n  };\n  /*\\\n   * Snap.filter.contrast\n   [ method ]\n   **\n   * Returns an SVG markup string for the contrast filter\n   **\n   - amount (number) amount of filter (`0..1`)\n   = (string) filter representation\n  \\*/\n\n\n  Snap.filter.contrast = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n      amount: amount,\n      amount2: .5 - amount / 2\n    });\n  };\n\n  Snap.filter.contrast.toString = function () {\n    return this();\n  };\n}); // Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var box = Snap._.box,\n      is = Snap.is,\n      firstLetter = /^[^a-z]*([tbmlrc])/i,\n      toString = function toString() {\n    return \"T\" + this.dx + \",\" + this.dy;\n  };\n  /*\\\n   * Element.getAlign\n   [ method ]\n   **\n   * Returns shift needed to align the element relatively to given element.\n   * If no elements specified, parent `<svg>` container will be used.\n   - el (object) @optional alignment element\n   - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n   = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n   > Usage\n   | el.transform(el.getAlign(el2, \"top\"));\n   * or\n   | var dy = el.getAlign(el2, \"top\").dy;\n  \\*/\n\n\n  Element.prototype.getAlign = function (el, way) {\n    if (way == null && is(el, \"string\")) {\n      way = el;\n      el = null;\n    }\n\n    el = el || this.paper;\n    var bx = el.getBBox ? el.getBBox() : box(el),\n        bb = this.getBBox(),\n        out = {};\n    way = way && way.match(firstLetter);\n    way = way ? way[1].toLowerCase() : \"c\";\n\n    switch (way) {\n      case \"t\":\n        out.dx = 0;\n        out.dy = bx.y - bb.y;\n        break;\n\n      case \"b\":\n        out.dx = 0;\n        out.dy = bx.y2 - bb.y2;\n        break;\n\n      case \"m\":\n        out.dx = 0;\n        out.dy = bx.cy - bb.cy;\n        break;\n\n      case \"l\":\n        out.dx = bx.x - bb.x;\n        out.dy = 0;\n        break;\n\n      case \"r\":\n        out.dx = bx.x2 - bb.x2;\n        out.dy = 0;\n        break;\n\n      default:\n        out.dx = bx.cx - bb.cx;\n        out.dy = 0;\n        break;\n    }\n\n    out.toString = toString;\n    return out;\n  };\n  /*\\\n   * Element.align\n   [ method ]\n   **\n   * Aligns the element relatively to given one via transformation.\n   * If no elements specified, parent `<svg>` container will be used.\n   - el (object) @optional alignment element\n   - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n   = (object) this element\n   > Usage\n   | el.align(el2, \"top\");\n   * or\n   | el.align(\"middle\");\n  \\*/\n\n\n  Element.prototype.align = function (el, way) {\n    return this.transform(\"...\" + this.getAlign(el, way));\n  };\n}); // Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n  var elproto = Element.prototype,\n      is = Snap.is,\n      Str = String,\n      has = \"hasOwnProperty\";\n\n  function slice(from, to, f) {\n    return function (arr) {\n      var res = arr.slice(from, to);\n\n      if (res.length == 1) {\n        res = res[0];\n      }\n\n      return f ? f(res) : res;\n    };\n  }\n\n  var Animation = function Animation(attr, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    this.attr = attr;\n    this.dur = ms;\n    easing && (this.easing = easing);\n    callback && (this.callback = callback);\n  };\n\n  Snap._.Animation = Animation;\n  /*\\\n   * Snap.animation\n   [ method ]\n   **\n   * Creates an animation object\n   **\n   - attr (object) attributes of final destination\n   - duration (number) duration of the animation, in milliseconds\n   - easing (function) #optional one of easing functions of @mina or custom one\n   - callback (function) #optional callback function that fires when animation ends\n   = (object) animation object\n  \\*/\n\n  Snap.animation = function (attr, ms, easing, callback) {\n    return new Animation(attr, ms, easing, callback);\n  };\n  /*\\\n   * Element.inAnim\n   [ method ]\n   **\n   * Returns a set of animations that may be able to manipulate the current element\n   **\n   = (object) in format:\n   o {\n   o     anim (object) animation object,\n   o     mina (object) @mina object,\n   o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n   o     status (function) gets or sets the status of the animation,\n   o     stop (function) stops the animation\n   o }\n  \\*/\n\n\n  elproto.inAnim = function () {\n    var el = this,\n        res = [];\n\n    for (var id in el.anims) {\n      if (el.anims[has](id)) {\n        (function (a) {\n          res.push({\n            anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n            mina: a,\n            curStatus: a.status(),\n            status: function status(val) {\n              return a.status(val);\n            },\n            stop: function stop() {\n              a.stop();\n            }\n          });\n        })(el.anims[id]);\n      }\n    }\n\n    return res;\n  };\n  /*\\\n   * Snap.animate\n   [ method ]\n   **\n   * Runs generic animation of one number into another with a caring function\n   **\n   - from (number|array) number or array of numbers\n   - to (number|array) number or array of numbers\n   - setter (function) caring function that accepts one number argument\n   - duration (number) duration, in milliseconds\n   - easing (function) #optional easing function from @mina or custom\n   - callback (function) #optional callback function to execute when animation ends\n   = (object) animation object in @mina format\n   o {\n   o     id (string) animation id, consider it read-only,\n   o     duration (function) gets or sets the duration of the animation,\n   o     easing (function) easing,\n   o     speed (function) gets or sets the speed of the animation,\n   o     status (function) gets or sets the status of the animation,\n   o     stop (function) stops the animation\n   o }\n   | var rect = Snap().rect(0, 0, 10, 10);\n   | Snap.animate(0, 10, function (val) {\n   |     rect.attr({\n   |         x: val\n   |     });\n   | }, 1000);\n   | // in given context is equivalent to\n   | rect.animate({x: 10}, 1000);\n  \\*/\n\n\n  Snap.animate = function (from, to, setter, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    var now = mina.time(),\n        anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n    callback && eve.once(\"mina.finish.\" + anim.id, callback);\n    return anim;\n  };\n  /*\\\n   * Element.stop\n   [ method ]\n   **\n   * Stops all the animations for the current element\n   **\n   = (Element) the current element\n  \\*/\n\n\n  elproto.stop = function () {\n    var anims = this.inAnim();\n\n    for (var i = 0, ii = anims.length; i < ii; i++) {\n      anims[i].stop();\n    }\n\n    return this;\n  };\n  /*\\\n   * Element.animate\n   [ method ]\n   **\n   * Animates the given attributes of the element\n   **\n   - attrs (object) key-value pairs of destination attributes\n   - duration (number) duration of the animation in milliseconds\n   - easing (function) #optional easing function from @mina or custom\n   - callback (function) #optional callback function that executes when the animation ends\n   = (Element) the current element\n  \\*/\n\n\n  elproto.animate = function (attrs, ms, easing, callback) {\n    if (typeof easing == \"function\" && !easing.length) {\n      callback = easing;\n      easing = mina.linear;\n    }\n\n    if (attrs instanceof Animation) {\n      callback = attrs.callback;\n      easing = attrs.easing;\n      ms = attrs.dur;\n      attrs = attrs.attr;\n    }\n\n    var fkeys = [],\n        tkeys = [],\n        keys = {},\n        from,\n        to,\n        f,\n        eq,\n        el = this;\n\n    for (var key in attrs) {\n      if (attrs[has](key)) {\n        if (el.equal) {\n          eq = el.equal(key, Str(attrs[key]));\n          from = eq.from;\n          to = eq.to;\n          f = eq.f;\n        } else {\n          from = +el.attr(key);\n          to = +attrs[key];\n        }\n\n        var len = is(from, \"array\") ? from.length : 1;\n        keys[key] = slice(fkeys.length, fkeys.length + len, f);\n        fkeys = fkeys.concat(from);\n        tkeys = tkeys.concat(to);\n      }\n    }\n\n    var now = mina.time(),\n        anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n      var attr = {};\n\n      for (var key in keys) {\n        if (keys[has](key)) {\n          attr[key] = keys[key](val);\n        }\n      }\n\n      el.attr(attr);\n    }, easing);\n    el.anims[anim.id] = anim;\n    anim._attrs = attrs;\n    anim._callback = callback;\n    eve(\"snap.animcreated.\" + el.id, anim);\n    eve.once(\"mina.finish.\" + anim.id, function () {\n      eve.off(\"mina.*.\" + anim.id);\n      delete el.anims[anim.id];\n      callback && callback.call(el);\n    });\n    eve.once(\"mina.stop.\" + anim.id, function () {\n      eve.off(\"mina.*.\" + anim.id);\n      delete el.anims[anim.id];\n    });\n    return el;\n  };\n}); // Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nSnap.plugin(function (Snap, Element, Paper, glob) {\n  // Colours are from https://www.materialui.co\n  var red = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n      pink = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n      purple = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n      deeppurple = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n      indigo = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n      blue = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n      lightblue = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n      cyan = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n      teal = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n      green = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n      lightgreen = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n      lime = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n      yellow = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n      amber = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n      orange = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n      deeporange = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n      brown = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n      grey = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n      bluegrey = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n  /*\\\n   * Snap.mui\n   [ property ]\n   **\n   * Contain Material UI colours.\n   | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n   # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n  \\*/\n\n  Snap.mui = {};\n  /*\\\n   * Snap.flat\n   [ property ]\n   **\n   * Contain Flat UI colours.\n   | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n   # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n  \\*/\n\n  Snap.flat = {};\n\n  function saveColor(colors) {\n    colors = colors.split(/(?=#)/);\n    var color = new String(colors[5]);\n    color[50] = colors[0];\n    color[100] = colors[1];\n    color[200] = colors[2];\n    color[300] = colors[3];\n    color[400] = colors[4];\n    color[500] = colors[5];\n    color[600] = colors[6];\n    color[700] = colors[7];\n    color[800] = colors[8];\n    color[900] = colors[9];\n\n    if (colors[10]) {\n      color.A100 = colors[10];\n      color.A200 = colors[11];\n      color.A400 = colors[12];\n      color.A700 = colors[13];\n    }\n\n    return color;\n  }\n\n  Snap.mui.red = saveColor(red);\n  Snap.mui.pink = saveColor(pink);\n  Snap.mui.purple = saveColor(purple);\n  Snap.mui.deeppurple = saveColor(deeppurple);\n  Snap.mui.indigo = saveColor(indigo);\n  Snap.mui.blue = saveColor(blue);\n  Snap.mui.lightblue = saveColor(lightblue);\n  Snap.mui.cyan = saveColor(cyan);\n  Snap.mui.teal = saveColor(teal);\n  Snap.mui.green = saveColor(green);\n  Snap.mui.lightgreen = saveColor(lightgreen);\n  Snap.mui.lime = saveColor(lime);\n  Snap.mui.yellow = saveColor(yellow);\n  Snap.mui.amber = saveColor(amber);\n  Snap.mui.orange = saveColor(orange);\n  Snap.mui.deeporange = saveColor(deeporange);\n  Snap.mui.brown = saveColor(brown);\n  Snap.mui.grey = saveColor(grey);\n  Snap.mui.bluegrey = saveColor(bluegrey);\n  Snap.flat.turquoise = \"#1abc9c\";\n  Snap.flat.greensea = \"#16a085\";\n  Snap.flat.sunflower = \"#f1c40f\";\n  Snap.flat.orange = \"#f39c12\";\n  Snap.flat.emerland = \"#2ecc71\";\n  Snap.flat.nephritis = \"#27ae60\";\n  Snap.flat.carrot = \"#e67e22\";\n  Snap.flat.pumpkin = \"#d35400\";\n  Snap.flat.peterriver = \"#3498db\";\n  Snap.flat.belizehole = \"#2980b9\";\n  Snap.flat.alizarin = \"#e74c3c\";\n  Snap.flat.pomegranate = \"#c0392b\";\n  Snap.flat.amethyst = \"#9b59b6\";\n  Snap.flat.wisteria = \"#8e44ad\";\n  Snap.flat.clouds = \"#ecf0f1\";\n  Snap.flat.silver = \"#bdc3c7\";\n  Snap.flat.wetasphalt = \"#34495e\";\n  Snap.flat.midnightblue = \"#2c3e50\";\n  Snap.flat.concrete = \"#95a5a6\";\n  Snap.flat.asbestos = \"#7f8c8d\";\n  /*\\\n   * Snap.importMUIColors\n   [ method ]\n   **\n   * Imports Material UI colours into global object.\n   | Snap.importMUIColors();\n   | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n   # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n  \\*/\n\n  Snap.importMUIColors = function () {\n    for (var color in Snap.mui) {\n      if (Snap.mui.hasOwnProperty(color)) {\n        window[color] = Snap.mui[color];\n      }\n    }\n  };\n});\nmodule.exports = Snap;","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","require(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n(function (glob) {\n  var version = \"0.5.4\",\n      has = \"hasOwnProperty\",\n      separator = /[\\.\\/]/,\n      comaseparator = /\\s*,\\s*/,\n      wildcard = \"*\",\n      numsort = function numsort(a, b) {\n    return a - b;\n  },\n      current_event,\n      stop,\n      events = {\n    n: {}\n  },\n      firstDefined = function firstDefined() {\n    for (var i = 0, ii = this.length; i < ii; i++) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n      lastDefined = function lastDefined() {\n    var i = this.length;\n\n    while (--i) {\n      if (typeof this[i] != \"undefined\") {\n        return this[i];\n      }\n    }\n  },\n      objtos = Object.prototype.toString,\n      Str = String,\n      isArray = Array.isArray || function (ar) {\n    return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n  },\n\n  /*\\\n   * eve\n   [ method ]\n    * Fires event with given `name`, given scope and other parameters.\n    - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n   - scope (object) context for the event handlers\n   - varargs (...) the rest of arguments will be sent to event handlers\n    = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n  \\*/\n  eve = function eve(name, scope) {\n    var oldstop = stop,\n        args = Array.prototype.slice.call(arguments, 2),\n        listeners = eve.listeners(name),\n        z = 0,\n        l,\n        indexed = [],\n        queue = {},\n        out = [],\n        ce = current_event;\n    out.firstDefined = firstDefined;\n    out.lastDefined = lastDefined;\n    current_event = name;\n    stop = 0;\n\n    for (var i = 0, ii = listeners.length; i < ii; i++) {\n      if (\"zIndex\" in listeners[i]) {\n        indexed.push(listeners[i].zIndex);\n\n        if (listeners[i].zIndex < 0) {\n          queue[listeners[i].zIndex] = listeners[i];\n        }\n      }\n    }\n\n    indexed.sort(numsort);\n\n    while (indexed[z] < 0) {\n      l = queue[indexed[z++]];\n      out.push(l.apply(scope, args));\n\n      if (stop) {\n        stop = oldstop;\n        return out;\n      }\n    }\n\n    for (i = 0; i < ii; i++) {\n      l = listeners[i];\n\n      if (\"zIndex\" in l) {\n        if (l.zIndex == indexed[z]) {\n          out.push(l.apply(scope, args));\n\n          if (stop) {\n            break;\n          }\n\n          do {\n            z++;\n            l = queue[indexed[z]];\n            l && out.push(l.apply(scope, args));\n\n            if (stop) {\n              break;\n            }\n          } while (l);\n        } else {\n          queue[l.zIndex] = l;\n        }\n      } else {\n        out.push(l.apply(scope, args));\n\n        if (stop) {\n          break;\n        }\n      }\n    }\n\n    stop = oldstop;\n    current_event = ce;\n    return out;\n  }; // Undocumented. Debug only.\n\n\n  eve._events = events;\n  /*\\\n   * eve.listeners\n   [ method ]\n    * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n    - name (string) name of the event, dot (`.`) or slash (`/`) separated\n    = (array) array of event handlers\n  \\*/\n\n  eve.listeners = function (name) {\n    var names = isArray(name) ? name : name.split(separator),\n        e = events,\n        item,\n        items,\n        k,\n        i,\n        ii,\n        j,\n        jj,\n        nes,\n        es = [e],\n        out = [];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      nes = [];\n\n      for (j = 0, jj = es.length; j < jj; j++) {\n        e = es[j].n;\n        items = [e[names[i]], e[wildcard]];\n        k = 2;\n\n        while (k--) {\n          item = items[k];\n\n          if (item) {\n            nes.push(item);\n            out = out.concat(item.f || []);\n          }\n        }\n      }\n\n      es = nes;\n    }\n\n    return out;\n  };\n  /*\\\n   * eve.separator\n   [ method ]\n    * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n   * here. Be aware that if you pass a string longer than one character it will be treated as\n   * a list of characters.\n    - separator (string) new separator. Empty string resets to default: `.` or `/`.\n  \\*/\n\n\n  eve.separator = function (sep) {\n    if (sep) {\n      sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n      sep = \"[\" + sep + \"]\";\n      separator = new RegExp(sep);\n    } else {\n      separator = /[\\.\\/]/;\n    }\n  };\n  /*\\\n   * eve.on\n   [ method ]\n   **\n   * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n   | eve.on(\"*.under.*\", f);\n   | eve(\"mouse.under.floor\"); // triggers f\n   * Use @eve to trigger the listener.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   - name (array) if you don’t want to use separators, you can use array of strings\n   - f (function) event handler function\n   **\n   = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n   > Example:\n   | eve.on(\"mouse\", eatIt)(2);\n   | eve.on(\"mouse\", scream);\n   | eve.on(\"mouse\", catchIt)(1);\n   * This will ensure that `catchIt` function will be called before `eatIt`.\n   *\n   * If you want to put your handler before non-indexed handlers, specify a negative value.\n   * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n  \\*/\n\n\n  eve.on = function (name, f) {\n    if (typeof f != \"function\") {\n      return function () {};\n    }\n\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\n    for (var i = 0, ii = names.length; i < ii; i++) {\n      (function (name) {\n        var names = isArray(name) ? name : Str(name).split(separator),\n            e = events,\n            exist;\n\n        for (var i = 0, ii = names.length; i < ii; i++) {\n          e = e.n;\n          e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {\n            n: {}\n          });\n        }\n\n        e.f = e.f || [];\n\n        for (i = 0, ii = e.f.length; i < ii; i++) {\n          if (e.f[i] == f) {\n            exist = true;\n            break;\n          }\n        }\n\n        !exist && e.f.push(f);\n      })(names[i]);\n    }\n\n    return function (zIndex) {\n      if (+zIndex == +zIndex) {\n        f.zIndex = +zIndex;\n      }\n    };\n  };\n  /*\\\n   * eve.f\n   [ method ]\n   **\n   * Returns function that will fire given event with optional arguments.\n   * Arguments that will be passed to the result function will be also\n   * concated to the list of final arguments.\n   | el.onclick = eve.f(\"click\", 1, 2);\n   | eve.on(\"click\", function (a, b, c) {\n   |     console.log(a, b, c); // 1, 2, [event object]\n   | });\n   - event (string) event name\n   - varargs (…) and any other arguments\n   = (function) possible event handler function\n  \\*/\n\n\n  eve.f = function (event) {\n    var attrs = [].slice.call(arguments, 1);\n    return function () {\n      eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n    };\n  };\n  /*\\\n   * eve.stop\n   [ method ]\n   **\n   * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n  \\*/\n\n\n  eve.stop = function () {\n    stop = 1;\n  };\n  /*\\\n   * eve.nt\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   - subname (string) #optional subname of the event\n   **\n   = (string) name of the event, if `subname` is not specified\n   * or\n   = (boolean) `true`, if current event’s name contains `subname`\n  \\*/\n\n\n  eve.nt = function (subname) {\n    var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n\n    if (subname) {\n      return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n    }\n\n    return cur;\n  };\n  /*\\\n   * eve.nts\n   [ method ]\n   **\n   * Could be used inside event handler to figure out actual name of the event.\n   **\n   **\n   = (array) names of the event\n  \\*/\n\n\n  eve.nts = function () {\n    return isArray(current_event) ? current_event : current_event.split(separator);\n  };\n  /*\\\n   * eve.off\n   [ method ]\n   **\n   * Removes given function from the list of event listeners assigned to given name.\n   * If no arguments specified all the events will be cleared.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n  \\*/\n\n  /*\\\n   * eve.unbind\n   [ method ]\n   **\n   * See @eve.off\n  \\*/\n\n\n  eve.off = eve.unbind = function (name, f) {\n    if (!name) {\n      eve._events = events = {\n        n: {}\n      };\n      return;\n    }\n\n    var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\n    if (names.length > 1) {\n      for (var i = 0, ii = names.length; i < ii; i++) {\n        eve.off(names[i], f);\n      }\n\n      return;\n    }\n\n    names = isArray(name) ? name : Str(name).split(separator);\n    var e,\n        key,\n        splice,\n        i,\n        ii,\n        j,\n        jj,\n        cur = [events],\n        inodes = [];\n\n    for (i = 0, ii = names.length; i < ii; i++) {\n      for (j = 0; j < cur.length; j += splice.length - 2) {\n        splice = [j, 1];\n        e = cur[j].n;\n\n        if (names[i] != wildcard) {\n          if (e[names[i]]) {\n            splice.push(e[names[i]]);\n            inodes.unshift({\n              n: e,\n              name: names[i]\n            });\n          }\n        } else {\n          for (key in e) {\n            if (e[has](key)) {\n              splice.push(e[key]);\n              inodes.unshift({\n                n: e,\n                name: key\n              });\n            }\n          }\n        }\n\n        cur.splice.apply(cur, splice);\n      }\n    }\n\n    for (i = 0, ii = cur.length; i < ii; i++) {\n      e = cur[i];\n\n      while (e.n) {\n        if (f) {\n          if (e.f) {\n            for (j = 0, jj = e.f.length; j < jj; j++) {\n              if (e.f[j] == f) {\n                e.f.splice(j, 1);\n                break;\n              }\n            }\n\n            !e.f.length && delete e.f;\n          }\n\n          for (key in e.n) {\n            if (e.n[has](key) && e.n[key].f) {\n              var funcs = e.n[key].f;\n\n              for (j = 0, jj = funcs.length; j < jj; j++) {\n                if (funcs[j] == f) {\n                  funcs.splice(j, 1);\n                  break;\n                }\n              }\n\n              !funcs.length && delete e.n[key].f;\n            }\n          }\n        } else {\n          delete e.f;\n\n          for (key in e.n) {\n            if (e.n[has](key) && e.n[key].f) {\n              delete e.n[key].f;\n            }\n          }\n        }\n\n        e = e.n;\n      }\n    } // prune inner nodes in path\n\n\n    prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n      e = inodes[i];\n\n      for (key in e.n[e.name].f) {\n        // not empty (has listeners)\n        continue prune;\n      }\n\n      for (key in e.n[e.name].n) {\n        // not empty (has children)\n        continue prune;\n      } // is empty\n\n\n      delete e.n[e.name];\n    }\n  };\n  /*\\\n   * eve.once\n   [ method ]\n   **\n   * Binds given event handler with a given name to only run once then unbind itself.\n   | eve.once(\"login\", f);\n   | eve(\"login\"); // triggers f\n   | eve(\"login\"); // no listeners\n   * Use @eve to trigger the listener.\n   **\n   - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n   - f (function) event handler function\n   **\n   = (function) same return function as @eve.on\n  \\*/\n\n\n  eve.once = function (name, f) {\n    var f2 = function f2() {\n      eve.off(name, f2);\n      return f.apply(this, arguments);\n    };\n\n    return eve.on(name, f2);\n  };\n  /*\\\n   * eve.version\n   [ property (string) ]\n   **\n   * Current version of the library.\n  \\*/\n\n\n  eve.version = version;\n\n  eve.toString = function () {\n    return \"You are running Eve \" + version;\n  };\n\n  glob.eve = eve;\n  typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () {\n    return eve;\n  }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);","'use strict';\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n        path.animate({\n          path: steps[pos]\n        }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];"],"sourceRoot":""}